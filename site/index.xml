<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sites | ABZ</title><link>/site/</link><atom:link href="/site/index.xml" rel="self" type="application/rss+xml"/><description>Sites</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Copyright © 2024 ABZ Conference</copyright><lastBuildDate>Wed, 16 Jun 2021 00:00:00 +0100</lastBuildDate><image><url>/img/https:/github.com/abz-conf/abz-conf.logo/raw/master/obj/rect/256.png</url><title>Sites</title><link>/site/</link></image><item><title>ABZ 2024 – 10th International Conference on Rigorous State Based Methods</title><link>/site/2024/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0100</pubDate><guid>/site/2024/</guid><description>&lt;h3 id="bergamo-italy---jun-25-2024--jun-28-2024">Bergamo (Italy) - Jun 25, 2024 — Jun 28, 2024&lt;/h3>
&lt;br>
&lt;p>The ABZ conference is dedicated to the cross-fertilization of state-based and machine-based formal methods, like Abstract State Machines (ASM), Alloy, B, TLA, VDM and Z, that share a common conceptual foundation and are widely used in both academia and industry for the design and analysis of hardware and software systems. The conference aims for a vital exchange of knowledge and experience among the research communities around different formal methods.&lt;/p>
&lt;!--### News
TBA -->
&lt;h3 id="supporters">Supporters&lt;/h3>
&lt;div>&lt;img src="/img/UniBG-DIGIP-Logo.jpg">&lt;/div>
&lt;div>&lt;img src="/img/logo_UNIMI.jpg">&lt;/div>
&lt;div>&lt;a href="https://www.fmeurope.org">&lt;img src="/img/FME.png" width="170" style="margin-left: 100px;">&lt;/a> &lt;/div></description></item><item><title>ABZ 2024 – 10th International Conference on Rigorous State Based Methods</title><link>/site/2024/accommodation/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0100</pubDate><guid>/site/2024/accommodation/</guid><description>&lt;h2 id="accommodation">Accommodation&lt;/h2>
&lt;p>The following list of hotels is just a suggestion of nearby places for accommodation with the relative distance (by foot) to the venue:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.arli.net/en/" target="_blank" rel="noopener">ARLI Hotel Business &amp;amp; Wellness&lt;/a> (1.6 km)&lt;/li>
&lt;li>
&lt;a href="https://www.bestwestern.com/en_US/book/hotel-rooms.98166.html" target="_blank" rel="noopener">Best Western Cappello D&amp;rsquo;Oro&lt;/a> (1.6 km)&lt;/li>
&lt;li>
&lt;a href="https://all.accor.com/ssr/app/accor/rates/3653/index.it.shtml" target="_blank" rel="noopener">Hotel Mercure&lt;/a> (1.7 km)&lt;/li>
&lt;li>
&lt;a href="https://www.hotelsanmarco.com/en/" target="_blank" rel="noopener">Excelsior San Marco&lt;/a> (1.1 km)&lt;/li>
&lt;/ul>
&lt;p>All these hotels are in the central street of Bergamo, in the lower city, which leads to the venue.&lt;/p>
&lt;p>Other accommodations can be found using Booking or Google Maps, sorted by distance, both in the
&lt;a href="https://www.booking.com/searchresults.it.html?ss=Porta&amp;#43;Nuova&amp;#43;Bergamo&amp;amp;ssne=Bergamo&amp;amp;ssne_untouched=Bergamo&amp;amp;label=New_Italian_IT_IT_21439066225-w3PZUKHezznZFnfS04B5JQS640938612692%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg&amp;amp;sid=5823b19aabf9347d7bd51da8ed7540a9&amp;amp;aid=318615&amp;amp;lang=it&amp;amp;sb=1&amp;amp;src_elem=sb&amp;amp;src=searchresults&amp;amp;dest_id=ChIJh_2OAxBRgUcREarr_Ol-fpQ&amp;amp;dest_type=landmark&amp;amp;place_id=ChIJh_2OAxBRgUcREarr_Ol-fpQ&amp;amp;latitude=45.6943321&amp;amp;longitude=9.6703714&amp;amp;ac_position=0&amp;amp;ac_click_type=g&amp;amp;ac_langcode=it&amp;amp;ac_suggestion_list_length=5&amp;amp;search_selected=true&amp;amp;search_pageview_id=51b36bd5b6b30104&amp;amp;ac_meta=IAAoAjICaXQ%3D&amp;amp;checkin=2024-06-25&amp;amp;checkout=2024-06-28&amp;amp;group_adults=1&amp;amp;no_rooms=1&amp;amp;group_children=0" target="_blank" rel="noopener">lower city&lt;/a> and in the
&lt;a href="https://www.booking.com/searchresults.it.html?ss=Complesso&amp;#43;di&amp;#43;Sant%27Agostino%2C&amp;#43;Piazzale&amp;#43;Sant%27agostino%2C&amp;#43;Bergamo%2C&amp;#43;Lombardia%2C&amp;#43;Italia&amp;amp;ssne=Porta&amp;#43;Nuova&amp;#43;Bergamo&amp;amp;ssne_untouched=Porta&amp;#43;Nuova&amp;#43;Bergamo&amp;amp;label=New_Italian_IT_IT_21439066225-w3PZUKHezznZFnfS04B5JQS640938612692%3Apl%3Ata%3Ap1%3Ap2%3Aac%3Aap%3Aneg&amp;amp;sid=5823b19aabf9347d7bd51da8ed7540a9&amp;amp;aid=318615&amp;amp;lang=it&amp;amp;sb=1&amp;amp;src_elem=sb&amp;amp;src=searchresults&amp;amp;dest_id=380u0nuh-98d959daf7f64dcf935244599f7b4849-it&amp;amp;dest_type=latlong&amp;amp;place_id=380u0nuh-98d959daf7f64dcf935244599f7b4849-it&amp;amp;latitude=45.7052527&amp;amp;longitude=9.6703874&amp;amp;ac_position=1&amp;amp;ac_click_type=b&amp;amp;ac_langcode=it&amp;amp;ac_suggestion_list_length=5&amp;amp;search_selected=true&amp;amp;search_pageview_id=7c9f6beedbf7027e&amp;amp;ac_meta=IAEoBDICaXQ%3D&amp;amp;checkin=2024-06-25&amp;amp;checkout=2024-06-28&amp;amp;group_adults=1&amp;amp;no_rooms=1&amp;amp;group_children=0" target="_blank" rel="noopener">upper city&lt;/a> (closer to the venue).&lt;/p></description></item><item><title>ABZ 2024 – 10th International Conference on Rigorous State Based Methods</title><link>/site/2024/calls/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0100</pubDate><guid>/site/2024/calls/</guid><description>&lt;h2 id="call-for-papers">Call for papers&lt;/h2>
&lt;p>The ABZ conference is dedicated to the cross-fertilization of state-based and machine-based formal methods, like Abstract State Machines (ASM), Alloy, B, TLA, VDM and Z, that share a common conceptual foundation and are widely used in both academia and industry for the design and analysis of hardware and software systems. The conference aims for a vital exchange of knowledge and experience among the research communities around different formal methods.&lt;/p>
&lt;p>The name ABZ goes back to the first conference in London in 2008, where the ASM, B and Z conference series were merged into a joint event. In the following years other formal methods were added, e.g. Alloy in 2010 (Orford, Canada), VDM in 2012 (Pisa, Italy), and TLA + in 2014 (Toulouse, France). After the also successful 2016 conferences in Linz, Austria and 2018 in Southampton, UK, it was decided to name the conference &amp;ldquo;ABZ: International Conference on Rigorous State Based Methods&amp;rdquo;, to stress the openness for further state-based formal methods. We hope to continue many fruitful discussions between representatives of the individual methods in the past, which will bring us closer to the common goal of this research community: the creation of reliable and safe software.&lt;/p>
&lt;p>ABZ 2024 will have a main conference track, a case study track, a doctoral symposium, tutorials, and workshops.&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="../maintrack">Main Conference&lt;/a>&lt;/li>
&lt;li>
&lt;a href="../casestudy">Case Study&lt;/a>&lt;/li>
&lt;li>
&lt;a href="../doctoralsymposium">Doctoral Symposium&lt;/a>&lt;/li>
&lt;li>
&lt;a href="../tutorialworkshops">Tutorials and Workshops&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Accepted papers will appear in the Springer LNCS proceedings.&lt;/p>
&lt;div>&lt;img src="/img/Springer_Logo.jpg">&lt;img src="/img/LNCS-Logo.jpg">&lt;/div>
&lt;h3 id="submission-process">Submission Process&lt;/h3>
&lt;p>Authors should consult
&lt;a href="https://resource-cms.springernature.com/springer-cms/rest/v1/content/19242230/data/v11" target="_blank" rel="noopener">Springer&amp;rsquo;s authors' guidelines&lt;/a> and use their proceedings templates, either for
&lt;a href="https://resource-cms.springernature.com/springer-cms/rest/v1/content/19238648/data/v6" target="_blank" rel="noopener">LaTeX&lt;/a> or for
&lt;a href="https://resource-cms.springernature.com/springer-cms/rest/v1/content/19238706/data/v2" target="_blank" rel="noopener">Word&lt;/a>, for the preparation of their papers. Springer encourages authors to include their
&lt;a href="https://www.springer.com/gp/authors-editors/orcid" target="_blank" rel="noopener">ORCIDs&lt;/a> in their papers. In addition, the corresponding author of each paper, acting on behalf of all of the authors of that paper, must complete and sign a Consent-to-Publish form. The corresponding author signing the copyright form should match the corresponding author marked on the paper. Once the files have been sent to Springer, changes relating to the authorship of the papers cannot be made.&lt;/p>
&lt;p>Authors interested in contributing to ABZ 2024 in Open Access or Open Choice should refer to the corresponding
&lt;a href="https://www.springer.com/gp/computer-science/lncs/open-access-publishing-in-computer-proceedings" target="_blank" rel="noopener">Springer webpage&lt;/a>.&lt;/p>
&lt;p class="text-center">&lt;a href="https://equinocs.springernature.com/service/ABZ2024" class="btn btn-primary btn-lg" role="button" target="_blank">Submit contribution&lt;br>&lt;br>&lt;br>&lt;small>via EquinOCS&lt;/small>&lt;/a>&lt;/p>
&lt;p>EquinOCS guidelines for authors can be found
&lt;a href="https://support.springernature.com/en/support/solutions/articles/6000245512-authors-of-papers-chapters" target="_blank" rel="noopener">here&lt;/a>&lt;/p></description></item><item><title>ABZ 2024 – 10th International Conference on Rigorous State Based Methods</title><link>/site/2024/casestudy/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0100</pubDate><guid>/site/2024/casestudy/</guid><description>&lt;h2 id="case-study---call-for-papers">Case Study - Call for Papers&lt;/h2>
&lt;p>As successfully practiced in previous editions of ABZ, the 10th edition of ABZ will include again special sessions dedicated to a shared real-life case study.&lt;/p>
&lt;p>The objective of this session is to enrich the set of case studies (
&lt;a href="https://abz-conf.org/case-studies/" target="_blank" rel="noopener">https://abz-conf.org/case-studies/&lt;/a>) developed with Rigorous State Based Methods with a practical and real-life case study.&lt;/p>
&lt;p>The case study proposed in this edition is the Mechanical Lung Ventilator (MLV). The MLV is intended to provide ventilation support for patients that require mechanical ventilation in two operative modes: Pressure Controlled Ventilation (PCV) and Pressure Support Ventilation (PSV). The former is used when patients are not able to start breathing on their own, while the latter support patients by partially taking over the work of breathing.&lt;/p>
&lt;p>The suggested outcomes (as reported in the specification document) are:&lt;/p>
&lt;ul>
&lt;li>A classical approach consists in modeling the system or part of it and applying the classical V&amp;amp;V activities, like formal verification of the correctness or validation of scenarios. One could check that the behavior of the system is correct, like in case of some types of errors, the system goes into a fail-safe mode.&lt;/li>
&lt;li>A critical aspect of the system is its temporal behavior. Many properties and constraints have explicit temporal requirements (like after 10 seconds &amp;hellip;). One could model these aspects and make a temporal analysis of the system.&lt;/li>
&lt;li>After the good experience of ABZ2022, we decided to also include the GUI. Research activities could refer to modeling this critical component and analyzing the human-computer interaction.&lt;/li>
&lt;li>Generation of executable source code and implement a prototype of the ventilator on a simple electronic board like Arduino (or part of it).&lt;/li>
&lt;/ul>
&lt;p>All the pdf versions of the specification document are available here (we keep track of all the changes in the documents):
&lt;a href="https://github.com/foselab/abz2024_casestudy_MLV" target="_blank" rel="noopener">https://github.com/foselab/abz2024_casestudy_MLV&lt;/a>&lt;/p>
&lt;p>All the questions and doubts can be discussed here:
&lt;a href="https://github.com/foselab/abz2024_casestudy_MLV/issues" target="_blank" rel="noopener">https://github.com/foselab/abz2024_casestudy_MLV/issues&lt;/a>&lt;/p>
&lt;p>If you have any question/comment on the case study, you can contact:&lt;/p>
&lt;ul>
&lt;li>Silvia Bonfanti, University of Bergamo,
&lt;a href="mailto:silvia.bonfanti@unibg.it">silvia.bonfanti@unibg.it&lt;/a>&lt;/li>
&lt;li>Angelo Gargantini, University of Bergamo,
&lt;a href="mailto:angelo.gargantini@unibg.it">angelo.gargantini@unibg.it&lt;/a>&lt;/li>
&lt;li>ABZ 2024,
&lt;a href="mailto:abz2024@unibg.it">abz2024@unibg.it&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="abz-2024-invites">ABZ 2024 invites:&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Case study papers&lt;/strong>: Full papers reporting on the experiments conducted with any of the state based techniques in the scope of ABZ 2024 case study. A paper of no more than &lt;em>16 pages (excluding references)&lt;/em> in
&lt;a href="https://www.springer.com/gp/computer-science/lncs/conference-proceedings-guidelines" target="_blank" rel="noopener">LNCS format&lt;/a> is expected and will be reviewed.&lt;/li>
&lt;/ul>
&lt;div>&lt;img src="/img/Springer_Logo.jpg">&lt;img src="/img/LNCS-Logo.jpg">&lt;/div>
&lt;p>Accepted papers will appear in the Springer LNCS proceedings.&lt;/p>
&lt;h3 id="submission-process">Submission Process&lt;/h3>
&lt;p>Authors should consult
&lt;a href="https://resource-cms.springernature.com/springer-cms/rest/v1/content/19242230/data/v11" target="_blank" rel="noopener">Springer&amp;rsquo;s authors' guidelines&lt;/a> and use their proceedings templates, either for
&lt;a href="https://resource-cms.springernature.com/springer-cms/rest/v1/content/19238648/data/v6" target="_blank" rel="noopener">LaTeX&lt;/a> or for
&lt;a href="https://resource-cms.springernature.com/springer-cms/rest/v1/content/19238706/data/v2" target="_blank" rel="noopener">Word&lt;/a>, for the preparation of their papers. Springer encourages authors to include their
&lt;a href="https://www.springer.com/gp/authors-editors/orcid" target="_blank" rel="noopener">ORCIDs&lt;/a> in their papers. In addition, the corresponding author of each paper, acting on behalf of all of the authors of that paper, must complete and sign a Consent-to-Publish form. The corresponding author signing the copyright form should match the corresponding author marked on the paper. Once the files have been sent to Springer, changes relating to the authorship of the papers cannot be made.&lt;/p>
&lt;p>Authors interested in contributing to ABZ 2024 in Open Access or Open Choice should refer to the corresponding
&lt;a href="https://www.springer.com/gp/computer-science/lncs/open-access-publishing-in-computer-proceedings" target="_blank" rel="noopener">Springer webpage&lt;/a>.&lt;/p>
&lt;p class="text-center">&lt;a href="https://equinocs.springernature.com/service/ABZ2024" class="btn btn-primary btn-lg" role="button" target="_blank">Submit contribution&lt;br>&lt;br>&lt;br>&lt;small>via EquinOCS&lt;/small>&lt;/a>&lt;/p>
&lt;p>EquinOCS guidelines for authors can be found
&lt;a href="https://support.springernature.com/en/support/solutions/articles/6000245512-authors-of-papers-chapters" target="_blank" rel="noopener">here&lt;/a>&lt;/p>
&lt;h3 id="important-dates">Important Dates&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Abstract submission (mandatory):&lt;/strong>&lt;/td>
&lt;td>&lt;del>February 3, 2024&lt;/del> February 10, 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Paper submission (firm deadline):&lt;/strong>&lt;/td>
&lt;td>&lt;del>February 10, 2024&lt;/del> February 24, 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Notification:&lt;/strong>&lt;/td>
&lt;td>&lt;del>April 6, 2024&lt;/del> April 9, 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Final version:&lt;/strong>&lt;/td>
&lt;td>April 20, 2024&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>ABZ 2024 – 10th International Conference on Rigorous State Based Methods</title><link>/site/2024/doctoralsymposium/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0100</pubDate><guid>/site/2024/doctoralsymposium/</guid><description>&lt;h2 id="doctoral-symposium---call-for-papers">Doctoral Symposium - Call for Papers&lt;/h2>
&lt;p>The ABZ PhD Symposium is an international forum for PhD students studying all areas related to state based formal methods for software and system development.&lt;/p>
&lt;p>This forum is a good opportunity for PhD students to&lt;/p>
&lt;ul>
&lt;li>bring together PhD students and established and known researchers of the state based formal methods community,&lt;/li>
&lt;li>provide PhD students with fruitful feedback and advice on their research approach,&lt;/li>
&lt;li>enable PhD students to interact with other PhD students and to stimulate exchange of ideas suggestions and experiences among participants,&lt;/li>
&lt;li>provide PhD students an opportunity to present, share and discuss their research in a constructive and critical atmosphere.&lt;/li>
&lt;/ul>
&lt;p>We seek PhD students who have either determined the direction of their thesis research (probably with some preliminary results already published), but who still have substantial work to complete, or PhD student participants who are in the early stages of their dissertations. It is not required to have a paper accepted for the main conference in order to participate to the ABZ 2024 Doctoral Symposium.&lt;/p>
&lt;h3 id="abz-2024-invites">ABZ 2024 invites:&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Contribution to doctoral symposium&lt;/strong>: This is an excellent opportunity for PhD students to present their ongoing work and receive valuable feedback from the ABZ community. A paper of no more than &lt;em>4 pages (excluding references)&lt;/em> in
&lt;a href="https://www.springer.com/gp/computer-science/lncs/conference-proceedings-guidelines" target="_blank" rel="noopener">LNCS format&lt;/a> is expected and will be reviewed.&lt;/li>
&lt;/ul>
&lt;p>Preferably, submissions should include&lt;/p>
&lt;ul>
&lt;li>Title of the paper and the author name&lt;/li>
&lt;li>Problem statement, motivations, and progress&lt;/li>
&lt;li>Current development and related work&lt;/li>
&lt;li>Proposed solutions, approach and methodology, and their significance&lt;/li>
&lt;li>Current results and assessement&lt;/li>
&lt;li>Future work&lt;/li>
&lt;/ul>
&lt;div>&lt;img src="/img/Springer_Logo.jpg">&lt;img src="/img/LNCS-Logo.jpg">&lt;/div>
&lt;p>Accepted papers will be published in the Springer LNCS proceedings.&lt;/p>
&lt;h3 id="submission-process">Submission Process&lt;/h3>
&lt;p>Authors should consult
&lt;a href="https://resource-cms.springernature.com/springer-cms/rest/v1/content/19242230/data/v11" target="_blank" rel="noopener">Springer&amp;rsquo;s authors' guidelines&lt;/a> and use their proceedings templates, either for
&lt;a href="https://resource-cms.springernature.com/springer-cms/rest/v1/content/19238648/data/v6" target="_blank" rel="noopener">LaTeX&lt;/a> or for
&lt;a href="https://resource-cms.springernature.com/springer-cms/rest/v1/content/19238706/data/v2" target="_blank" rel="noopener">Word&lt;/a>, for the preparation of their papers.Springer encourages authors to include their
&lt;a href="https://www.springer.com/gp/authors-editors/orcid" target="_blank" rel="noopener">ORCIDs&lt;/a> in their papers. In addition, the corresponding author of each paper, acting on behalf of all of the authors of that paper, must complete and sign a Consent-to-Publish form. The corresponding author signing the copyright form should match the corresponding author marked on the paper. Once the files have been sent to Springer, changes relating to the authorship of the papers cannot be made.&lt;/p>
&lt;p>Authors interested in contributing to ABZ 2024 in Open Access or Open Choice should refer to the corresponding
&lt;a href="https://www.springer.com/gp/computer-science/lncs/open-access-publishing-in-computer-proceedings" target="_blank" rel="noopener">Springer webpage&lt;/a>.&lt;/p>
&lt;p class="text-center">&lt;a href="https://equinocs.springernature.com/service/ABZ2024" class="btn btn-primary btn-lg" role="button" target="_blank">Submit contribution&lt;br>&lt;br>&lt;br>&lt;small>via EquinOCS&lt;/small>&lt;/a>&lt;/p>
&lt;p>EquinOCS guidelines for authors can be found
&lt;a href="https://support.springernature.com/en/support/solutions/articles/6000245512-authors-of-papers-chapters" target="_blank" rel="noopener">here&lt;/a>&lt;/p>
&lt;h3 id="important-dates">Important Dates&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Paper submission:&lt;/strong>&lt;/td>
&lt;td>February 24, 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Notification:&lt;/strong>&lt;/td>
&lt;td>&lt;del>April 6, 2024&lt;/del> April 9, 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Final version:&lt;/strong>&lt;/td>
&lt;td>April 20, 2024&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>ABZ 2024 – 10th International Conference on Rigorous State Based Methods</title><link>/site/2024/importantdates/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0100</pubDate><guid>/site/2024/importantdates/</guid><description>&lt;h2 id="important-dates">Important Dates&lt;/h2>
&lt;p>All dates anywhere on earth&lt;/p>
&lt;h3 id="workshopstutorials">Workshops/Tutorials&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Workshop proposal submission:&lt;/strong>&lt;/td>
&lt;td>December 01, 2023&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Workshop notification:&lt;/strong>&lt;/td>
&lt;td>December 15, 2023&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Tutorial proposal submission:&lt;/strong>&lt;/td>
&lt;td>March 16, 2024&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="case-study-track">Case Study Track&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Abstract submission (mandatory):&lt;/strong>&lt;/td>
&lt;td>&lt;del>February 3, 2024&lt;/del> February 10, 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Paper submission (firm deadline):&lt;/strong>&lt;/td>
&lt;td>&lt;del>February 10, 2024&lt;/del> February 24, 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Notification:&lt;/strong>&lt;/td>
&lt;td>April 6, 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Final version:&lt;/strong>&lt;/td>
&lt;td>April 20, 2024&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="main-track">Main Track&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Abstract submission (mandatory):&lt;/strong>&lt;/td>
&lt;td>&lt;del>February 3, 2024&lt;/del> February 10, 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Paper submission (firm deadline, including research/short/industry/journal-first papers):&lt;/strong>&lt;/td>
&lt;td>&lt;del>February 10, 2024&lt;/del> February 24, 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Notification:&lt;/strong>&lt;/td>
&lt;td>&lt;del>April 6, 2024&lt;/del> April 9, 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Final version:&lt;/strong>&lt;/td>
&lt;td>April 20, 2024&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="doctoral-symposium">Doctoral Symposium&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Paper submission:&lt;/strong>&lt;/td>
&lt;td>February 24, 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Notification:&lt;/strong>&lt;/td>
&lt;td>April 6, 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Final version:&lt;/strong>&lt;/td>
&lt;td>April 20, 2024&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="conference">Conference&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Workshps and Tutorials (Bergamo, Italy)&lt;/strong>&lt;/td>
&lt;td>June 25, 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>ABZ 2024 Conference (Bergamo, Italy)&lt;/strong>&lt;/td>
&lt;td>June 26-28, 2024&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>ABZ 2024 – 10th International Conference on Rigorous State Based Methods</title><link>/site/2024/keynotes/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0100</pubDate><guid>/site/2024/keynotes/</guid><description>&lt;h2 id="keynote-speakers">Keynote speakers&lt;/h2>
&lt;p>Here it is the list of keynote speakers (in alphabetic order by name).&lt;/p>
&lt;h3 id="david-basin--eth-zurich">David Basin @ ETH Zurich&lt;/h3>
&lt;div width=100%>
&lt;table>
&lt;tr>
&lt;td width=20%>
&lt;img src="https://people.inf.ethz.ch/basin/basin2014-medium.jpg" width=200px>
&lt;/td>
&lt;td>
&lt;table>
&lt;tr>&lt;td>
&lt;h3>&lt;b>Getting Electronic Payments Right&lt;/b>&lt;/h3>&lt;br>&lt;i>- Lecture partially supported by FME&lt;/i>
&lt;/td>&lt;/tr>
&lt;tr>&lt;td>
&lt;b>&lt;i>Abstract&lt;/i>&lt;/b> &lt;br>EMV is the international protocol standard for smartcard payments and is used in billions of payment cards worldwide. Despite the standard’s advertised security, various issues have been previously uncovered, deriving from logical flaws that are hard to spot in EMV’s lengthy and complex specification, running over 2,000 pages. We have formalized various models of EMV in Tamarin, a symbolic model checker for cryptographic protocols. Tamarin was extremely effective in finding critical flaws, both known and new. For example, we discovered multiple ways that an attacker can use a victim's EMV card (e.g., Mastercard or Visa Card) for high-valued purchases without the victim's supposedly required PIN. Said more simply, the PIN on your EMV card is useless! We report on this, as well as follow-up work with an EMV consortium member on verifying the latest, improved version of the protocol, the EMV Kernel C-8. Overall our work provides evidence that security protocol model checkers like Tamarin have an essential role to play in developing real-world payment protocols and that they are up to this challenge.
&lt;/td>&lt;/tr>
&lt;tr>&lt;td>
&lt;b>&lt;i>Short Bio&lt;/i>&lt;/b> &lt;br>&lt;a href="https://people.inf.ethz.ch/basin">David Basin&lt;/a> is a full professor of Computer Science at ETH Zurich, since 2003. His research areas are Information Security and Software Engineering. He is the founding director of the ZISC, the Zurich Information Security Center, which he led from 2003-2011. He served as Editor-in-Chief of the ACM Transactions on Privacy and Security (2015-2020) and of Springer-Verlag's book series on Information Security and Cryptography (2008-present). He has co-founded three security companies, is on the board of directors of Anapaya Systems AG, and on various management and scientific advisory boards. He is an IEEE Fellow and an ACM Fellow.
&lt;/td>&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/div>
&lt;h3 id="joe-kiniry--galois-inc">Joe Kiniry @ Galois Inc.&lt;/h3>
&lt;div width=100%>
&lt;table>
&lt;tr>
&lt;td width=20%>
&lt;img src="https://galois.com/wp-content/uploads/2014/06/Joe-2023-480x480.jpg" width=200px>
&lt;/td>
&lt;td>
&lt;table>
&lt;tr>&lt;td>
&lt;h3>&lt;b>What happens when the Government starts encouraging the use of formal methods?&lt;/b>&lt;/h3>
&lt;/td>&lt;/tr>
&lt;tr>&lt;td>
&lt;b>&lt;i>Abstract&lt;/i>&lt;/b> &lt;br>Over the past decade, US Government R&amp;amp;D RFPs have gone from never mentioning formal methods to frequently mandating formal methods. What's more, several recent White House reports have explicitly called out formal methods.
For example, the 2016 NIST Interagency Report "Dramatically Reducing Software Vulnerabilities: Report to the White House Office of Science and Technology Policy" calls out formal methods as one of five key technical approaches critical to fulfilling the goals set forth in the US Government's 2016 Federal Cybersecurity R&amp;amp;D Strategic Plan. &lt;br>&lt;br>
More recently, in February 2024 the Office of the National Cyber Director (ONCD) published the report "Back to the Building Blocks: A Path Toward Secure and Measurable Software" in response to President Biden's National Cybersecurity Strategy and in alignment with Executive Order 14028 on Improving the Nation's Cybersecurity, issued in 2021. Its abstract states: &lt;br>
&lt;blockquote> "In this report, the case is made that the technical community is well-positioned to drive progress on both strategic goals. First, in order to reduce memory safety vulnerabilities at scale, creators of software and hardware can better secure the building blocks of cyberspace. This report focuses on the programming language as a primary building block, and explores hardware architecture and formal methods as complementary approaches to achieve similar outcomes. Second, in order to establish accurate cybersecurity quality metrics, advances can be made to address the hard and complex research problem of software measurability. This report explores how such metrics can shift market forces to improve cybersecurity quality across the ecosystem. In essence, the US Government is now strongly recommending that nationally critical systems are written in safe programming languages, models and implementations of critical components must be formally assured, and that code should run on security-centric hardware architectures."&lt;/blockquote>
This talk reflects upon this evolution over the past ten years from my point of view as a PI of dozens of major formal methods-centric R&amp;amp;D programs for the Government and industry. Why has there been such an uptick in interest? What are the R&amp;amp;D challenges that lie ahead? How might we, as a community, prioritize R&amp;amp;D activities for transition? What can the ABZ community learn from this arc? What's next?
&lt;/td>&lt;/tr>
&lt;tr>&lt;td>
&lt;b>&lt;i>Short Bio&lt;/i>&lt;/b> &lt;br>&lt;a href="https://galois.com/team/joe-kiniry/">Dr. Joe Kiniry&lt;/a> is a Principal Scientist at Galois and is the CEO and Chief Scientist at Free &amp; Fair. Over the past twenty-five years he has been everything from a tenured professor at several universities to a founder and chief scientist or CTO at several companies. He has been involved in security in some fashion since the early 80s when he hacked and wrote video games on 8 bit computers. These days, his day job is applying formal methods to nationally critical systems and trying to help the worlds’ elections and democracies be more trustworthy.
&lt;/td>&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/div>
&lt;h3 id="maurice-ter-beek---isti-cnr">Maurice ter Beek @ ISTI, CNR&lt;/h3>
&lt;div width=100%>
&lt;table>
&lt;tr>
&lt;td width=20%>
&lt;img src="https://conf.researchr.org/getProfileImage/mauriceterbeek/e8248402-77d9-473d-8e91-7fee30789c4a/small.jpg" width=200px>
&lt;/td>
&lt;td>
&lt;table>
&lt;tr>&lt;td>
&lt;h3>&lt;b>Formal Methods and Tools applied in the railway domain&lt;/b>&lt;/h3>&lt;br>&lt;i>- Lecture partially supported by FME&lt;/i>
&lt;/td>&lt;/tr>
&lt;tr>&lt;td>
&lt;b>&lt;i>Abstract&lt;/i>&lt;/b> &lt;br>ABZ and other state-based formal methods and tools are successfully applied to the development of safety-critical systems for decades now, in particular in the transport domain, without a single language or tool emerging as the dominant solution for system design. Formal methods are highly recommended by the current safety standards in the railway industry, but railway engineers often lack the knowledge to transform their semi-formal models into formal models, with a precise semantics, to serve as input to formal methods tools. We share the results of performing empirical studies in the railway domain, including usability analyses of formal methods tools involving railway practitioners. We discuss, in particular with respect to railway systems and their modelling, our experiences in applying rigorous state-based methods and tools to a variety of case studies, for which we interacted with a number of companies from the railway domain. We report on lessons learned from these experiences and provide pointers to drive future research towards facilitating further synergies between - on the one hand - researchers and developers of ABZ and other state-based formal methods and tools, and - on the other hand - practitioners from the railway industry.
&lt;/td>&lt;/tr>
&lt;tr>&lt;td>
&lt;b>&lt;i>Short Bio&lt;/i>&lt;/b> &lt;br>&lt;a href="https://fmt.isti.cnr.it/~mtbeek/">Maurice ter Beek&lt;/a> is senior researcher at CNR-ISTI (Pisa, Italy) where he heads the Formal Methods and Tools lab. He obtained his Ph.D. at Leiden University (The Netherlands). He has authored over 150 peer-reviewed papers, edited over 30 proceedings and special issues of journals, and serves on the editorial boards of the journals Formal Aspects of Computing, International Journal on Software Tools for Technology Transfer, Journal of Logical and Algebraic Methods in Programming, Science of Computer Programming, PeerJ Computer Science and ERCIM News. His research interests are formal methods and model-checking tools for the specification and verification of safety-critical software systems and communication protocols, focusing in particular on applications in software product line engineering and railway systems. He is member of the Steering Committees of the COORDINATION, ETAPS, FMICS (currently chair), iFM and SPLC conference series, and regularly serves on the PC of relevant formal methods and software product line conferences like FM, FMICS, iFM, SPLC and VaMoS, all of which he also chaired, and ABZ, FASE, FormaliSE, SEFM and SPIN. He is board member of Formal Methods Europe (FME).
&lt;/td>&lt;/tr>
&lt;/table>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/div></description></item><item><title>ABZ 2024 – 10th International Conference on Rigorous State Based Methods</title><link>/site/2024/maintrack/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0100</pubDate><guid>/site/2024/maintrack/</guid><description>&lt;h2 id="main-abz-track---call-for-papers">Main ABZ Track - Call for Papers&lt;/h2>
&lt;p>Contributions are solicited on all aspects of the theory and applications of ASMs, Alloy, B, TLA, VDM, Z and other state-based rigour approaches in software/hardware engineering, including the development of tools and industrial applications. The program spans from theoretical and methodological foundations to practical applications, emphasizing system engineering methods and tools that are distinguished by mathematical rigor and have proved to be industrially viable. The main goal of the conference is to contribute to the integration of accurate state- and machine-based system development methods, clarifying their commonalities and differences to better understand how to combine different approaches for accomplishing the various tasks in modeling, experimental validation, mathematical verification of reliable high-quality hardware/software systems. Although organized to host several formal methods in a single event, editorial control of the joint conference is vested in one integrated program committee.&lt;/p>
&lt;h3 id="abz-2024-invites">ABZ 2024 invites:&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Full research papers&lt;/strong>: Full research papers which have to be original, unpublished and not submitted elsewhere. A paper of no more than &lt;em>16 pages (excluding references)&lt;/em> in
&lt;a href="https://www.springer.com/gp/computer-science/lncs/conference-proceedings-guidelines" target="_blank" rel="noopener">LNCS format&lt;/a> is expected and will be reviewed.&lt;/li>
&lt;li>&lt;strong>Short papers&lt;/strong>: Short papers to present and validate a work in progress or tool demonstrations. A paper of no more than &lt;em>6 pages (excluding references)&lt;/em> in
&lt;a href="https://www.springer.com/gp/computer-science/lncs/conference-proceedings-guidelines" target="_blank" rel="noopener">LNCS format&lt;/a> is expected and will be reviewed.&lt;/li>
&lt;li>&lt;strong>Application in industry papers&lt;/strong>: Reporting on work or experiences on the application of state based formal methods in industry. A paper of no more than &lt;em>8 pages (excluding references)&lt;/em> in
&lt;a href="https://www.springer.com/gp/computer-science/lncs/conference-proceedings-guidelines" target="_blank" rel="noopener">LNCS format&lt;/a> is expected and will be reviewed. It is also an interesting option for industrial practitioners who sometimes face too many constraints to prepare a full paper.&lt;/li>
&lt;li>&lt;strong>Journal-First papers&lt;/strong>: Journal-First paper summarize recently published papers in high-quality journals. The aim of journal-first papers is to further enrich the program of ABZ and to provide more visibility to an already published journal papers in the scope of the ABZ conference. An extended abstract of no more than &lt;em>6 pages (excluding references)&lt;/em> in
&lt;a href="https://www.springer.com/gp/computer-science/lncs/conference-proceedings-guidelines" target="_blank" rel="noopener">LNCS format&lt;/a> is expected and will be reviewed.&lt;/li>
&lt;/ul>
&lt;div>&lt;img src="/img/Springer_Logo.jpg">&lt;img src="/img/LNCS-Logo.jpg">&lt;/div>
&lt;p>Accepted papers will appear in the Springer LNCS proceedings.&lt;/p>
&lt;h3 id="submission-process">Submission Process&lt;/h3>
&lt;p>Authors should consult
&lt;a href="https://resource-cms.springernature.com/springer-cms/rest/v1/content/19242230/data/v11" target="_blank" rel="noopener">Springer&amp;rsquo;s authors' guidelines&lt;/a> and use their proceedings templates, either for
&lt;a href="https://resource-cms.springernature.com/springer-cms/rest/v1/content/19238648/data/v6" target="_blank" rel="noopener">LaTeX&lt;/a> or for
&lt;a href="https://resource-cms.springernature.com/springer-cms/rest/v1/content/19238706/data/v2" target="_blank" rel="noopener">Word&lt;/a>, for the preparation of their papers. Springer encourages authors to include their
&lt;a href="https://www.springer.com/gp/authors-editors/orcid" target="_blank" rel="noopener">ORCIDs&lt;/a> in their papers. In addition, the corresponding author of each paper, acting on behalf of all of the authors of that paper, must complete and sign a Consent-to-Publish form. The corresponding author signing the copyright form should match the corresponding author marked on the paper. Once the files have been sent to Springer, changes relating to the authorship of the papers cannot be made.&lt;/p>
&lt;p>Authors interested in contributing to ABZ 2024 in Open Access or Open Choice should refer to the corresponding
&lt;a href="https://www.springer.com/gp/computer-science/lncs/open-access-publishing-in-computer-proceedings" target="_blank" rel="noopener">Springer webpage&lt;/a>.&lt;/p>
&lt;p class="text-center">&lt;a href="https://equinocs.springernature.com/service/ABZ2024" class="btn btn-primary btn-lg" role="button" target="_blank">Submit contribution&lt;br>&lt;br>&lt;br>&lt;small>via EquinOCS&lt;/small>&lt;/a>&lt;/p>
&lt;p>EquinOCS guidelines for authors can be found
&lt;a href="https://support.springernature.com/en/support/solutions/articles/6000245512-authors-of-papers-chapters" target="_blank" rel="noopener">here&lt;/a>&lt;/p>
&lt;h3 id="important-dates">Important Dates&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Abstract submission (mandatory):&lt;/strong>&lt;/td>
&lt;td>&lt;del>February 3, 2024&lt;/del> February 10, 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Paper submission (firm deadline, including research/short/industry/journal-first papers):&lt;/strong>&lt;/td>
&lt;td>&lt;del>February 10, 2024&lt;/del> February 24, 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Notification:&lt;/strong>&lt;/td>
&lt;td>&lt;del>April 6, 2024&lt;/del> April 9, 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Final version:&lt;/strong>&lt;/td>
&lt;td>April 20, 2024&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>ABZ 2024 – 10th International Conference on Rigorous State Based Methods</title><link>/site/2024/program/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0100</pubDate><guid>/site/2024/program/</guid><description>&lt;div style='width:100%; display:inline-block; overflow-wrap: break-word;'>&lt;div>&lt;div style='display:inline-block; width:100%;'>&lt;center>&lt;h1>Workshop Program&lt;/h1>&lt;/center>&lt;/div>&lt;div>
&lt;div style='width:100%; display:inline-block; overflow-wrap: break-word;'>&lt;div>&lt;div style='display:inline-block; width:100%;'>&lt;center>&lt;h1>June, 25th&lt;/h1>&lt;/center>&lt;/div>&lt;div>
&lt;div style='width:100%; display:inline-block; overflow-wrap: break-word;'>&lt;div>&lt;div style='display:inline-block; width:100%;'>&lt;center>&lt;h3>Conference Room: Room 5&lt;/h3>&lt;/center>&lt;/div>&lt;div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block;'>&lt;b>Time&lt;/b>&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;b>Talk&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;b>Topic&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#83a9c6''>&lt;div style='display:inline-block; width:75%;'>&lt;b>Session Chair: &lt;i>Laurent Voisin&lt;/i>&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>09:00 - 09:30&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>What's new in Rodin 3.9 and the Theory plug-in&lt;/b>&lt;br>&lt;i>Guillaume Verdier, Laurent Voisin, Idir Ait-Sadoune&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Rodin Workshop&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>09:30 - 10:00&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Semantics formalisation: Some experience with the Theory Plug-in&lt;/b>&lt;br>&lt;i>Son Thai Hoang&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Rodin Workshop&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>10:00 - 10:30&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Schemata of Recursive Functions and Iterative Algorithms&lt;/b>&lt;br>&lt;i>Dominique Cansell&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Rodin Workshop&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#e89b26''>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>10:30 - 11:00&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Coffee break&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#83a9c6''>&lt;div style='display:inline-block; width:75%;'>&lt;b>Session Chair: &lt;i>Son Thai Hoang&lt;/i>&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>11:00 - 11:30&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Validation of Domain and Meta Models: From Event-B Theories to Practice&lt;/b>&lt;br>&lt;i>Michael Leuschel, Yamine Ait-Ameur, Guillaume Dupont, Peter Riviere, Neeraj Kumar Singh&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Rodin Workshop&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>11:30 - 12:00&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Developing the UML-B modelling tools&lt;/b>&lt;br>&lt;i>Colin Snook&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Rodin Workshop&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>12:00 - 12:30&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Correct-by-Construction Synthesis of Sequential Algorithms&lt;/b>&lt;br>&lt;i>Dominique Cansell, Neeraj Kumar Singh&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Rodin Workshop&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#e89b26''>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>12:30 - 14:00&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Lunch break&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#83a9c6''>&lt;div style='display:inline-block; width:75%;'>&lt;b>Session Chair: &lt;i>David Gele&amp;#223;us&lt;/i>&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>14:00 - 14:30&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Validation of Domain and Meta Models: From Event-B Theories to Practice&lt;/b>&lt;br>&lt;i>Michael Leuschel&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>IVOIRE Workshop&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>14:30 - 15:00&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>IVOIRE Project: Results and Insights&lt;/b>&lt;br>&lt;i>Atif Mashkoor&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>IVOIRE Workshop&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>15:00 - 15:30&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Validation Obligations in Practice&lt;/b>&lt;br>&lt;i>Fabian Vu&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>IVOIRE Workshop&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#e89b26''>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>15:30 - 16:00&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Coffee break&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#83a9c6''>&lt;div style='display:inline-block; width:75%;'>&lt;b>Session Chair: &lt;i>Fabian Vu&lt;/i>&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>16:00 - 16:30&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>An Exercise in Multi-modeling&lt;/b>&lt;br>&lt;i>Jean-Pierre Jacquot&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>IVOIRE Workshop&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>16:30 - 17:00&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Validation Obligations Manager&lt;/b>&lt;br>&lt;i>David Gele&amp;#223;us&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>IVOIRE Workshop&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>17:00 - 17:30&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>What Should I Verify?&lt;/b>&lt;br>&lt;i>Marie Farrell&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>IVOIRE Workshop&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>17:30 - 18:00&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Discussion and conclusion&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>IVOIRE Workshop&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#e89b26''>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>19:00 - 21:00&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Welcome Reception&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;/div>&lt;br>
&lt;div style='width:100%; display:inline-block; overflow-wrap: break-word;'>&lt;div>&lt;div style='display:inline-block; width:100%;'>&lt;center>&lt;h1>Conference Program&lt;/h1>&lt;/center>&lt;/div>&lt;div>
&lt;div style='width:100%; display:inline-block; overflow-wrap: break-word;'>&lt;div>&lt;div style='display:inline-block; width:100%;'>&lt;center>&lt;h1>June, 26th&lt;/h1>&lt;/center>&lt;/div>&lt;div>
&lt;div style='width:100%; display:inline-block; overflow-wrap: break-word;'>&lt;div>&lt;div style='display:inline-block; width:100%;'>&lt;center>&lt;h3>Conference Room: Room 5&lt;/h3>&lt;/center>&lt;/div>&lt;div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block;'>&lt;b>Time&lt;/b>&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;b>Talk&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;b>Topic&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#83a9c6''>&lt;div style='display:inline-block; width:75%;'>&lt;b>Session Chair: &lt;i>Elvinia Riccobene&lt;/i>&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>09:00 - 09:15&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Welcome Opening&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>09:15 - 10:15&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Formal Methods and Tools applied in the railway domain&lt;/b>&lt;/summary>ABZ and other state-based formal methods and tools are successfully applied to the development of safety-critical systems for decades now, in particular in the transport domain, without a single language or tool emerging as the dominant solution for system design. Formal methods are highly recommended by the current safety standards in the railway industry, but railway engineers often lack the knowledge to transform their semi-formal models into formal models, with a precise semantics, to serve as input to formal methods tools. We share the results of performing empirical studies in the railway domain, including usability analyses of formal methods tools involving railway practitioners. We discuss, in particular with respect to railway systems and their modelling, our experiences in applying rigorous state-based methods and tools to a variety of case studies, for which we interacted with a number of companies from the railway domain. We report on lessons learned from these experiences and provide pointers to drive future research towards facilitating further synergies between - on the one hand - researchers and developers of ABZ and other state-based formal methods and tools, and - on the other hand - practitioners from the railway industry.&lt;/details>&lt;i>Maurice ter Beek (Invited)&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Keynote&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#e89b26''>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>10:15 - 10:45&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Coffee break&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#83a9c6''>&lt;div style='display:inline-block; width:75%;'>&lt;b>Session Chair: &lt;i>Michael Leuschel&lt;/i>&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>10:45 - 11:15&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Formal Modeling and Analysis of Apache Kafka in Alloy 6&lt;/b>&lt;/summary>Apache Kafka is a distributed, fault-tolerant and highly available open-source technology that utilizes the publish-subscribe communication model to stream large volumes of data. It is widely being used in various domains such as finance, entertainment, online education, and e-commerce for real-time data processing and analytics. This paper demonstrates an application of Alloy 6 - the latest version of Alloy with built-in temporal logic operators - to modeling and analysis of a complex distributed system like Kafka. The architecture and key operations of Kakfa are modeled, and its various properties, including fault-tolerance, data availability, service availability, consistency, and recoverability, are verified using the Alloy Analyzer. The result of the analysis provides insights into how Kafka maintains the properties that it claims to have, and the circumstances under which these properties may be violated.&lt;/details>&lt;i>Saloni Sinha, Eunsuk Kang&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Modeling&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>11:15 - 11:45&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Event-B Development of Modelling Human Intervention Request in Self-Driving Vehicle Systems&lt;/b>&lt;/summary>In the design of autonomous systems, seamless integration with human operators is crucial, particularly when humans are considered as a fail-safe for intervening in hazardous situations. This study presents an Event-B intervention timing pattern designed to include human drivers' responses when they act as fallback mechanisms in Self-Driving Vehicle (SDV) systems. The proposed pattern outlines specific timings for driver interventions following alerts from SDVs, offering a clear set of expectations and conditions for human drivers during these critical takeover instances. The usability of this pattern is demonstrated through a case study, highlighting its importance for situations that require interventions. Ultimately, it sheds light on the operational aspects of SDVs, ensuring a safe and orderly transition from automated to manual control.&lt;/details>&lt;i>Fahad Alotaibi, Thai Son Hoang, Asieh Salehi Fathabadi, Michael Butler&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Modeling&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>11:45 - 12:05&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>An Event-B Formal Model for Access Control and Resource Management of Serverless Apps&lt;/b>&lt;/summary>Cloud computing technologies help developers build scalable distributed apps. Serverless architecture, or Function as a Service (FaaS), which separates app businesses into multiple functions, is one of the cloud-native architectures that has gained popularity. Those functions can be developed and deployed independently without provisioning in?frastructure. Despite the considerable advantages and increasing popularity of cloud?native apps, developers face many challenges when building their cloud?native applications. To ensure the robustness and security of cloud-native apps and protect crucial resources, the design and implementation of functions and associated access control systems play a pivotal role. In this paper, we have employed formal methods and tools to develop a set of patterns to help cloud-native application developers to design robust serverless apps. We have used Event-B and its associated toolset, Rodin, to construct these formal patterns and demonstrated how these patterns can be used in practical case studies.&lt;/details>&lt;i>Mehmet Said Nur Yagmahan, Abdolbaghi Rezazadeh, Michael Butler&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Modeling/Industrial&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>12:05 - 12:20&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Designing Exception Handling using Event-B&lt;/b>&lt;/summary>Exception handling is a well-known error recovery approach employed to improve robustness of software. While programming languages offer exception handling for responding to detected failures, the design of exception handling is a complex task that needs designers’ insights and domain expertise to identify exceptions and recover from them to put the system back in a safe state. The challenge is to ensure that a complex closed system including controller and its environment remain in a safe state while undertaking abnormal state changes in the controller as part of its exception recovery process. Formal methods supporting excep- tion handling can address this complexity, by addressing it in the abstract design stages utilising mathematical modelling and proofs. Event-B is a state-based formal method for modelling and verifying the consistency of discrete systems. However it lacks support for explicit handling of exceptions. In this paper, we use UML-B state machines to support the identification and handling of exceptions, followed by verification of exception handler recovery mechanisms using the built-in model checker and prover in the Event-B toolset. We also discuss an implementation of the modelled exception handling in the 'C' programming language as a first stage towards automatic code generation of exception handlers.&lt;/details>&lt;i>Asieh Salehi Fathabadi, Colin Snook, Thai Son Hoang, Robert Thorburn, Michael Butler, Leonardo Aniello, Vladimiro Sassone&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Modeling/Verification&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#e89b26''>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>12:30 - 14:00&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Lunch break&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#83a9c6''>&lt;div style='display:inline-block; width:75%;'>&lt;b>Session Chair: &lt;i>Dominique Mery&lt;/i>&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>14:00 - 14:30&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Alloy Goes Fuzzy&lt;/b>&lt;/summary>Humans are good at understanding subjective or vague statements which, however, are hard to express in classic logic. Fuzzy logic is an evolution of classic logic that can cope with vague terms by handling degrees of truth and not just the crisp values true and false. Logic is the formal basis of computing, enabling the formal design of systems supported by tools such as model checkers and theorem provers. This paper shows how a model checker such as Alloy can evolve to handle both classic and fuzzy logic, enabling the specification of high-level quantitative relational models in the fuzzy domain. In particular, the paper showcases how QAlloy-F (a conservative, general-purpose quantitative extension to standard Alloy) can be used to tackle fuzzy problems, namely in the context of validating the design of fuzzy controllers. The evaluation of QAlloy-F against examples taken from various classes of fuzzy case studies shows the approach to be feasible.&lt;/details>&lt;i>Pedro Silva, Alcino Cunha, J. N. Oliveira, Nuno Macedo&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Theory Extension&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>14:30 - 15:00&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Transpilation of Petri-nets into B: Shallow and Deep Embeddings&lt;/b>&lt;/summary>Petri-nets and their variants (Place/Transition nets, High-Level Petri Nets, etc) are widely used in the development of safety critical-systems. Their success is related to three major aspects: a formal semantics, a graphical syntax and the availability of verification tools. In our previous work we presented a new vision for the semantic definition of Petri-nets applying a Formal Model-Driven Engineering (FMDE) built on the B method. The approach is powered by Meeduse, a language workbench that we developed in order to formally instrument executable Domain-Specific Languages (xDSLs) by applying a deep embedding technique and the B method. However, because of the abstract nature of the underlying formal models, our deep embedding is suitable for the validation and verification activities at the design stage but not sufficient to generate code for target platforms. This paper advances our previous work with a shallow embedding technique taking benefit of the B method tools in order to safely synthesize executable Petri-net controllers that can be embedded in target platforms.&lt;/details>&lt;i>Akram Idani&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Theory Extension&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>15:00 - 15:20&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Property Ownership Formal Modelling Using Event-B and iUML-B&lt;/b>&lt;/summary>This paper introduces a novel approach to formal modelling and verification of ownership, addressing safety concerns in property transfer processes.The Event-B formal method, graphically represented using iUML-B notation, is used to establish a robust framework for modeling and verifying ownership systems. The verified Event-B model refines and enhances user requirements at the design stage before system implementation. The research focuses on property ownership within the legal framework of the Kingdom of Saudi Arabia, specifically property sales. The research uncovers that, despite conscientious efforts to scrutinise user requirements, the formal model development exposes limitations and inadequacies in the initial specifications. The verification process introduces essential requirements to mitigate potential fraudulent activities, enhancing the security and dependability of ownership claims.&lt;/details>&lt;i>Manar Altamimi, Nawfal Al Hashimy, Asieh Salehi Fathabadi, Gary Wills&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Modeling/Industrial&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>15:20 - 15:35&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>A Modeling and Verification Framework for Ethereum Smart Contracts&lt;/b>&lt;/summary>Blockchain has shown to be a versatile technology with applications ranging from financial services and supply chain management to healthcare, identity verification, and beyond. Thanks to the usage of smart contracts, blockchain can streamline and automate complex processes, eliminating the need for intermediaries and reducing administrative overhead. Smart contracts often handle valuable assets and execute critical functions, making them attractive targets for attackers. Thus, the need for secure and reliable smart contracts is crucial. The long-term research we present aims to face the problem of safety and security assurance of smart contracts at design time. We are investigating the usage of the Abstract State Machine (ASM) formal method for the specification, validation, and verification of Ethereum smart contracts. We provide (i) a set of ASM libraries that simplify smart contracts modeling, (ii) models of malicious contracts to be used to check the robustness of a contract against some given attacks, (iii) patterns of properties to be checked to guarantee the operational correctness of the contract and its adherence to certain predefined properties.&lt;/details>&lt;i>Simone Valentini, Chiara Braghin, Elvinia Riccobene&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Modeling/Verification&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#e89b26''>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>15:35 - 16:05&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Coffee break&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#83a9c6''>&lt;div style='display:inline-block; width:75%;'>&lt;b>Session Chair: &lt;i>Angelo Gargantini&lt;/i>&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>16:05 - 16:15&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>The Mechanical Lung Ventilator Case Study&lt;/b>&lt;/summary>This paper introduces the ABZ 2024 Case Study: Mechanical Lung Ventilator (MLV), inspired by the Mechanical Ventilator Milano developed during COVID-19. The case study reports the specification of the Mechanical Lung Ventilator used to ventilate patients who are not able to breathe on their own or need ventilation support. Expected contributions to the case study include, among others, modeling, validation and verification, management of temporal behavior, modeling of the graphical user interface or automatically generating executable source code.&lt;/details>&lt;i>Silvia Bonfanti, Angelo Gargantini&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Case Study&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>16:15 - 16:45&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Real-Time CCSL: Application to the Mechanical Lung Ventilator&lt;/b>&lt;/summary>This case-study paper reports on our experience in modelling the mechanical lung ventilator using the Clock Constraint Specification Language (CCSL). CCSL captures the causal and temporal behaviour of a system by specifying constraints on logical clocks. Logical clocks are integer counters where the occurrence of an event, a tick, advances the counter and marks the advance in time. In this framework, chronometric clocks become logical clocks just with a special external meaning. Encoding chronometric clocks as counters may result in verification inefficiency and hard-to-read specifications. The paper introduces in the language some real-time constructs to directly encode phenomena like clock drift, skew and jitter. This makes patterns explicit in turn enabling optimizations. To realize these optimizations, we alter the internal symbolic representation of clock constraints. We also introduce an explicit notion of parameters and intervals. While for some constraints it mainly consists of adding syntactic sugar and pre-processing facilities, we believe it improves the readability. We illustrate the new constructs on the mechanical lung ventilator system. We start with a purely logical specification, we point at the sources of inefficiencies and then we discuss the benefits of the extensions on specific parts.&lt;/details>&lt;i>Pavlo Tokariev, Frederic Mallet&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Case Study&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>16:45 - 17:15&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>An Event-B Model of a Mechanical Lung Ventilator&lt;/b>&lt;/summary>In this paper, we present a formal Event-B model of the Mechanical Lung Ventilator (MLV), the case study provided by the ABZ’24 conference. This system aims at helping patients maintain good breathing by providing mechanical ventilation. For this purpose, two modes are possible: Pressure Controlled Ventilation (PCV) and Pressure Support Ventilation (PSV). In the former mode, respiratory cycles are completely defined by the patient that is able to start breathing on its own. In the latter mode, the respiratory cycle is constant and controlled by the ventilator. Let us note that it is possible to move from a given mode to the other depending on the breathing capabilities of the patient under ventilation. In this paper, we illustrate the use of a correct-by-construction approach, the Event-B formal method and its refinement process, for the formal modeling and the verification of such a complex and critical system. The development of the formal models has been achieved under the Rodin platform that provides us with automatic and interactive provers used to verify the correctness of the models. We have also validated the built Event-B models using the ProB animator/model checker.&lt;/details>&lt;i>Amel Mammar&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Case Study&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#e89b26''>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>18:00 - 19:30&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Tour Città Alta&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#e89b26''>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>19:30 - 24:00&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Dinner in Città Alta&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;/div>&lt;br>
&lt;div style='width:100%; display:inline-block; overflow-wrap: break-word;'>&lt;div>&lt;div style='display:inline-block; width:100%;'>&lt;center>&lt;h1>June, 27th&lt;/h1>&lt;/center>&lt;/div>&lt;div>
&lt;div style='width:100%; display:inline-block; overflow-wrap: break-word;'>&lt;div>&lt;div style='display:inline-block; width:100%;'>&lt;center>&lt;h3>Conference Room: Room 5&lt;/h3>&lt;/center>&lt;/div>&lt;div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block;'>&lt;b>Time&lt;/b>&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;b>Talk&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;b>Topic&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#83a9c6''>&lt;div style='display:inline-block; width:75%;'>&lt;b>Session Chair: &lt;i>Yamine Ait-Ameur&lt;/i>&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>09:15 - 10:15&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Getting Electronic Payments Right&lt;/b>&lt;/summary>EMV is the international protocol standard for smartcard payments and is used in billions of payment cards worldwide. Despite the standard’s advertised security, various issues have been previously uncovered, deriving from logical flaws that are hard to spot in EMV’s lengthy and complex specification, running over 2,000 pages. We have formalized various models of EMV in Tamarin, a symbolic model checker for cryptographic protocols. Tamarin was extremely effective in finding critical flaws, both known and new. For example, we discovered multiple ways that an attacker can use a victim's EMV card (e.g., Mastercard or Visa Card) for high-valued purchases without the victim's supposedly required PIN. Said more simply, the PIN on your EMV card is useless! We report on this, as well as follow-up work with an EMV consortium member on verifying the latest, improved version of the protocol, the EMV Kernel C-8. Overall our work provides evidence that security protocol model checkers like Tamarin have an essential role to play in developing real-world payment protocols and that they are up to this challenge.&lt;/details>&lt;i>David Basin (Invited)&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Keynote&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#e89b26''>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>10:15 - 10:45&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Coffee break&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#83a9c6''>&lt;div style='display:inline-block; width:75%;'>&lt;b>Session Chair: &lt;i>Wolf Zimmermann&lt;/i>&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>10:45 - 11:15&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>The Meaning of Self-Modifying Programs for Sequential Machines&lt;/b>&lt;/summary>We propose a definition of a class of reflective Abstract State Machines (ASMs) that extends the class of Parallel Guarded Assignments (PGAs), a subclass of single-agent sequential ASMs, and can serve as ground model for refinements of reflectivity in concrete programming languages.&lt;/details>&lt;i>Egon Boerger, Vincenzo Gervasi&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Theory Extension&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>11:15 - 11:45&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Loose Observation in Event-B&lt;/b>&lt;/summary>Refinement of Event-B machines is based on changing internal variables to obtain different data representations. One approach is expressed only in terms of internal variables. In the extreme case it permits refining a machine by any other by choosing the gluing invariant ``true''. The other one is based on relating external variables that can be refined functionally, so that properties expressed in terms of external variables are preserved. In practice, the first approach is used and gluing invariants are suitably chosen to achieve a meaningful relationship between refined machines. The second approach is based on the idea of observing a machine in terms of its external variables. It is more complicated, restrictive and not commonly used. In this paper we propose a different approach to observing Event-B machines that is more constraining than the first approach but less complicated and restrictive than the second approach. We extend Event-B refinement by permitting introducing new events and eliminating old events. The concept of observation is made more flexible by permitting non-observation of certain states as well as observing sets of values related to a states. Although this complicates relating observed fixed points and traces of machines, the proof obligations remain uncomplicated.&lt;/details>&lt;i>Stefan Hallerstede&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Theory Extension&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>11:45 - 12:15&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Modal Extensions of the Logic of Abstract State Machines&lt;/b>&lt;/summary>Based on the logic of non-deterministic Abstract State Machines (ASMs) we define a modal extension MLASM by first introducing multi-step predicates and then adding quantification over the number of steps. We show that liveness conditions such as invariance, conditional and unconditional progress, and persistence on all or some runs of an ASM can be expressed in this logic. While MLASM is too powerful to preserve the completeness of the logic of ASMs, we show the existence of a complete fragment, which still contains the interesting liveness conditions. We demonstrate the usefulness of this complete fragment by an example concerning mutual exclusion.&lt;/details>&lt;i>Flavio Ferrarotti, Klaus-Dieter Schewe&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Theory Extension&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>12:15 - 12:30&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Semantics Formalisation -- From Event-B Contexts to Theories&lt;/b>&lt;/summary>The Event-B modelling language has been used to formalise the semantics of other modelling languages such as Time Mobility (TIMO) or State Chart XML (SCXML). Typically, the syntactical elements of the languages are captured as Event-B contexts while the semantical elements are formalised in Event-B machines. An alternative for capturing a modelling language's semantics is to use the Theory plug-in to build datatypes capturing the syntactical elements of the language and operators to represent the various semantical aspects of the language. This paper draws on our experience to compare the two approaches in both modelling and reasoning features.&lt;/details>&lt;i>Thai Son Hoang, Laurent Voisin, Colin Snook, Michael Butler, Karla Vanessa Morris Wright&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Theory Extension&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#e89b26''>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>12:30 - 14:00&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Lunch break&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#83a9c6''>&lt;div style='display:inline-block; width:75%;'>&lt;b>Session Chair: &lt;i>Silvia Bonfanti&lt;/i>&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>14:00 - 14:30&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Modelling the mechanical lung ventilation system using TASTD&lt;/b>&lt;/summary>For the ABZ2024 conference, the proposed case study consists of modelling the adaptive outdoor mechanical lung ventilation system. The mechanical lung ventilator is intended to provide ventilation support for patients that are in intensive therapy and that require mechanical ventilation. The system under study is made up of two main software components: the graphical user interface (GUI) and the controller, this paper introduces a model for the controller part of the software system using Timed Algebraic State-Transition Diagrams (TASTD). TASTD is an extension of Algebraic State-Transition Diagrams (ASTD) providing timing operators to express timing constraints. The specification makes extensive use of the TASTD modularity capabilities, thanks to its algebraic approach, to model the behaviour of different sensors and actuators separately. We validate our specification using the cASTD compiler, which translates the TASTD specification into a C++ program. This generated program can be executed in simulation mode to manually update the system clock to check timing constraints. The model is executed on the test sequences provided with the case study. The advantages of having modularisation, orthogonality, abstraction, hierarchy, real-time, and graphical representation in one notation are highlighted with the proposed model.&lt;/details>&lt;i>Alex Rodrigue Ndouna, Marc Frappier&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Case Study&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>14:30 - 15:00&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Modelling and Analysing a Mechanical Lung Ventilator in mCRL2&lt;/b>&lt;/summary>We model the Mechanical Lung Ventilator (MLV) in the process algebra mCRL2. The functional requirements of the MLV are formalised in the modal mu-calculus, and we use model checking to analyse whether these requirements hold true of our model. Our formalisation of the MLV and its requirements reveal a few subtle imprecisions and unclarities in the informal document and we analyse their impact.&lt;/details>&lt;i>Danny van Dortmont, Tim Willemse, Jeroen Keiren&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Case Study&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>15:00 - 15:30&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>FRETting and Formal Modelling: A Mechanical Lung Ventilator&lt;/b>&lt;/summary>In this paper, we use NASA's Formal Requirements Elicitation Tool (FRET) and the Event-B formal method to model and verify the requirements for the ABZ 2024 case study which is a mechanical lung ventilator. We use the FRET requirements to guide the development of a formal design model in Event-B. We provide details about the artefacts produced and reflect on our experience of using these tools in this case study. We focus on the functional and controller requirements for this system, as given in the case study documentation. This paper provides a first step towards using Event-B as part of a FRET-guided verification workflow in a large case study.&lt;/details>&lt;i>Marie Farrell, Matt Luckcuck, Rosemary Monahan, Conor Reynolds, Oisin Sheridan&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Case Study&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#e89b26''>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>15:30 - 16:00&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Coffee break&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#83a9c6''>&lt;div style='display:inline-block; width:75%;'>&lt;b>Session Chair: &lt;i>Alexander Raschke&lt;/i>&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>16:00 - 16:30&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>From Concept to Code: Unveiling a Tool for Translating Abstract State Machines into Java Code&lt;/b>&lt;/summary>Formal methods play a crucial role in modeling and quality assurance, but to be deployed on real systems, formal specifications need to be translated into implementation. Manually converting formal models into code poses challenges such as increased costs, limitations in specification reuse, and the potential for introducing errors. To overcome these limitations, Model-Driven Engineering (MDE) approaches enable developers to generate software code automatically. This paper proposes the Asmeta2Java tool for the automatic translation of formal Asmeta specifications into executable Java code. The designers start at an abstract level and perform refinement steps and verification activities. At the end, they automatically generate the code by applying the model-to-code transformation. Moreover, a process to validate and evaluate the transformation is presented.&lt;/details>&lt;i>Andrea Bombarda, Silvia Bonfanti, Angelo Gargantini&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Tools&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>16:30 - 16:45&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Using Symbolic Execution to Transform Turbo Abstract State Machines into Basic Abstract State Machines&lt;/b>&lt;/summary>This paper introduces a transformation method that uses symbolic execution to eliminate sequential composition (''seq'') rules from turbo ASM rules by translating them into equivalent rules without ''seq''. Under some circumstances ''iterate'' rules can also be eliminated. The material presented here is work in progress. A prototype implementation of the transformation is publicly available.&lt;/details>&lt;i>Giuseppe Del Castillo&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Tools&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>16:45 - 17:00&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Multi-model animation with Jeb&lt;/b>&lt;/summary>A challenge posed by model-based formal methods such as Event-B is the validation of the models. This has been recognized and some tools have been created to provide modelers with means to animate models and to explore their behaviour through graphical display. These tools are quite effective on standalone models but lack the ability to connect to other external models. CPS systems fall under this category, as well as systems built of components interacting through a communication network. In the context of Jeb, an animation tool for Event-B models based on JavaScript, we explore the possibility of connecting models through Websockets. The paper presents a simple protocol to connect simulations. Using an example inspired by the Lung Ventilator case study, it shows how the implementation expands JeB functionality without modifying its core.&lt;/details>&lt;i>Jean-Pierre Jacquot&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Tools&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>17:00 - 17:15&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Meta-Programming Event-B: Advancing Tool Support and Language Extensions&lt;/b>&lt;/summary>Transforming models based on their textual representation is a cumbersome task. This is particularly the case for Event-B, where the predominant representation is a set of XML files. As a consequence, tool support is lacking, even for minor refactoring operations. The contribution of this paper extends the lisb library with a front and backend based on Event-B. The aim is to bring benefits, that have been demonstrated for classical B, such as an easily transformable data representation of formal specifications as well as creation of custom DSLs and tooling, to Event-B. We see great benefits of such a meta-programming approach for formal specifications and advocate that similar mechanisms will be sensible extensions to the expressiveness of formal methods. Ultimately, our work facilitates language extensions (e.g., re-introducing if-then-else constructs to Event-B which generate multiple events or a proper macro system to avoid code duplication) and tool support (e.g., refactoring tools or automatic refinement).&lt;/details>&lt;i>Julius Armbrüster, Philipp Körner&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Tools&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:Gainsboro''>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>17:15 - 17:45&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>PC meeting&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#e89b26''>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>19:30 - 24:00&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Social Dinner in Città Alta&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;/div>&lt;br>
&lt;div style='width:100%; display:inline-block; overflow-wrap: break-word;'>&lt;div>&lt;div style='display:inline-block; width:100%;'>&lt;center>&lt;h1>June, 28th&lt;/h1>&lt;/center>&lt;/div>&lt;div>
&lt;div style='width:100%; display:inline-block; overflow-wrap: break-word;'>&lt;div>&lt;div style='display:inline-block; width:100%;'>&lt;center>&lt;h3>Conference Room: Room 5&lt;/h3>&lt;/center>&lt;/div>&lt;div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block;'>&lt;b>Time&lt;/b>&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;b>Talk&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;b>Topic&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#83a9c6''>&lt;div style='display:inline-block; width:75%;'>&lt;b>Session Chair: &lt;i>Patrizia Scandurra&lt;/i>&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>09:00 - 10:00&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>What happens when the Government starts encouraging the use of formal methods?&lt;/b>&lt;/summary>Over the past decade, US Government R&amp;amp;D RFPs have gone from never mentioning formal methods to frequently mandating formal methods. What's more, several recent White House reports have explicitly called out formal methods. For example, the 2016 NIST Interagency Report ''Dramatically Reducing Software Vulnerabilities: Report to the White House Office of Science and Technology Policy'' calls out formal methods as one of five key technical approaches critical to fulfilling the goals set forth in the US Government's 2016 Federal Cybersecurity R&amp;amp;D Strategic Plan. More recently, in February 2024 the Office of the National Cyber Director (ONCD) published the report ''Back to the Building Blocks: A Path Toward Secure and Measurable Software'' in response to President Biden's National Cybersecurity Strategy and in alignment with Executive Order 14028 on Improving the Nation's Cybersecurity, issued in 2021. Its abstract states: “In this report, the case is made that the technical community is well-positioned to drive progress on both strategic goals. First, in order to reduce memory safety vulnerabilities at scale, creators of software and hardware can better secure the building blocks of cyberspace. This report focuses on the programming language as a primary building block, and explores hardware architecture and formal methods as complementary approaches to achieve similar outcomes. Second, in order to establish accurate cybersecurity quality metrics, advances can be made to address the hard and complex research problem of software measurability. This report explores how such metrics can shift market forces to improve cybersecurity quality across the ecosystem. In essence, the US Government is now strongly recommending that nationally critical systems are written in safe programming languages, models and implementations of critical components must be formally assured, and that code should run on security-centric hardware architectures.'' This talk reflects upon this evolution over the past ten years from my point of view as a PI of dozens of major formal methods-centric R&amp;amp;D programs for the Government and industry. Why has there been such an uptick in interest? What are the R&amp;amp;D challenges that lie ahead? How might we, as a community, prioritize R&amp;amp;D activities for transition? What can the ABZ community learn from this arc? What's next?&lt;/details>&lt;i>Joe Kiniry (Invited)&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Keynote&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>10:00 - 10:30&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>An Analysis of the Impact of Field-Value Instance Navigation in Alloy’s Model Finding&lt;/b>&lt;/summary>The use of SAT-based model finding for specification analysis is a crucial characteristic of Alloy, and a main reason of its success as a language for software specification. When a property of a specification is analyzed and deemed satisfiable, the user usually explores instances of the corresponding satisfiability, in order to understand the analysis outcome. The order in which instances are obtained during exploration can impact the efficiency and effectiveness with which specification analysis is carried out. This has been observed by various researchers, and different instance exploration strategies have been proposed, besides the standard SAT-solver driven strategy implemented with the Alloy Analyzer. In this paper, we concentrate on a strategy recently proposed in the literature, that we refer to as ''field-value'' driven, and has been implemented in the tool HawkEye. The tool allows the user to interactively guide instance exploration, by enforcing constraints requiring fields to contain (resp., do not contain) specific values. We design an experiment involving faulty Alloy specifications featuring combinations of over constraints and under constraints, and perform a user study to analyze the impact of this instance exploration strategy, in comparison with the standard SAT-solver driven exploration. The study focuses on HawkEye’s facility of interactive instance querying and how it may favor users, in its current realization, during Alloy model analysis and debugging. We perform an assessment of the evaluation, and summarize some of the reasons that may diminish the impact of field-value exploration in model finding.&lt;/details>&lt;i>Cesar Cornejo, María Marta Novaira, Nazareno Aguirre, Marcelo Frias, Simón Emmanuel Gutiérrez Brida, Germán Regis, Sonia Permigiani&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Education&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#e89b26''>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>10:30 - 11:00&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Coffee break&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#83a9c6''>&lt;div style='display:inline-block; width:75%;'>&lt;b>Session Chair: &lt;i>Regine Laleau&lt;/i>&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>11:00 - 11:15&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Event-B as DSL in Isabelle and HOL&lt;/b>&lt;/summary>The proof assistant Isabelle/HOL is made available inside a flexible system framework allowing for logically safe extensions, which comprise both theories as well as implementations for code-generation, documentation, and specific support for a variety of formal methods. Following the techniques in [23] and the theoretical groundwork in [5], we show the major milestones for the implementation of a B-Tool and the resulting refinement method inside the Isabelle/HOL platform. The pro- totype HOL-B provides IDE support, documentation support, a theory for the Z-Mathematical Toolkit underlying the B-Method, and a gener- ated denotational semantics for the B-Machine concept implemented as specification construct in Isabelle/HOL. Extended by more automated proof machinery geared to refinements, HOL-B can serve as a more portable, flexible and extensible tool for Event-B that may profit from the large Isabelle/HOL libraries providing Algebra and Analysis theories.&lt;/details>&lt;i>Burkhart Wolff, Benoit Ballenghien&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Verification&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>11:15 - 11:30&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>ThoR: An Alloy5-based DSL for Interactive Theorem Proving in Coq&lt;/b>&lt;/summary>The steep learning curve associated with interactive theorem proving poses a significant entry barrier for the learner. While the Alloy specification language has simplified the introduction to and application of formal methods, transitioning to interactive theorem proving, such as with Coq, remains daunting due to the inherent complexity of formal reasoning and the sophisticated tooling required. We introduce ThoR, an extension for the Coq proof assistant that incorporates an Alloy-based domain-specific language: Specifications, propositions and proofs are formulated in an Alloy-like syntax. This reduces tool and language complexity, and makes interactive theorem proving more accessible. The implementation is based on Coq’s syntax extension capabilities and the mathematical components library (mathcomp). This paper reports on work in progress. It contributes an approach for the embedding of Alloy into Coq based on a set-theoretic interpretation, a proof calculus for Alloy with soundness by construction, a prototypical implementation and its validation via a simple token ring example.&lt;/details>&lt;i>Bodo Igler, Andreas Mayer&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Verification&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>11:30 - 11:45&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Verifying HyperLTL properties in Event-B&lt;/b>&lt;/summary>The study presented in this paper is motivated by the verification of properties related to hardware architectures, namely timing anomalies that qualify a counter-intuitive timing behaviour. They are avoided by a monotonicity property which is an Hyper-LTL property. We present how to prove some classes of Hyper-LTL properties with Event-B.&lt;/details>&lt;i>Jean-Paul Bodeveix, Thomas Carle, Elie Fares, Mamoun Filali Amine, Thai Son Hoang&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Verification&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>11:45 - 12:00&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Small Step Incremental Verification of Compilers&lt;/b>&lt;/summary>Previously, we introduced the idea of agile compiler development, i.e., starting from an initial compiler for the most simple program of a language and extending it in small versions, each introducing a new language concept. Following this idea, in this paper, we propose an approach for incrementally verifying the dynamic semantics specified with abstract state machines~(ASMs), such that definitions of previous versions must not be altered in subsequent versions. As a result, the compiler can be verified incrementally without revising the proofs of previous versions. As our first step, in this paper, we formalize and verify the memory mapping of the initial versions with ASMs and discuss their extensibility for the next increments. We plan to demonstrate this approach through the agile implementation and verification of a Sather-K compiler generating MIPS assembly language.&lt;/details>&lt;i>Wolf Zimmermann, Thomas Kühn, Mandy Weißbach, Edward Sabinus&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Verification&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#83a9c6''>&lt;div style='display:inline-block; width:75%;'>&lt;b>Session Chair: &lt;i>Philipp Körner&lt;/i>&lt;/b>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>12:15 - 12:30&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>From Event-B to Lambdapi&lt;/b>&lt;/summary>B, Event-B and TLA+ are development languages based on set theory. Dedukti/Lambdapi is a logical framework based on the λΠ- calculus modulo in which many theories and logics can be expressed. In the context of ICSPA (ANR project), Lambdapi will be used to ex- change models and proofs between the set theory-based formal methods B, Event-B and TLA+. They will rely on the encoding of the respective set theories in Lambdapi. Our current work focuses on translating the mathematical language of Event-B and proof trees obtained with the Rodin platform for Event-B.&lt;/details>&lt;i>Anne Grieu&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Doctoral Symposium&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray;'>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>12:30 - 12:45&lt;/div>&lt;div style='display:inline-block; width:75%;'>&lt;details>&lt;summary>&lt;b>Proof Construction and Checking on Evolving Abstract State Machines&lt;/b>&lt;/summary>Abstract State Machines (ASMs) are widely used in the formalization and verification of the semantics of software or hardware. However, tools for assisting this process for evolving specifications are still lacking. With evolving we denote adding extensions without refactoring. We want to create a tool assisting in the verification of evolving specifications. Our approach is to translate ASM specifications into the language of an existing proof checker, construct the proofs as far as possible automatically, and check the proofs with the proof checker. Further, we want proofs of evolvable specifications also to be evolvable. This paper gives a brief overview of the approach and discusses the first step of this work, namely the translation of ASM specifications into the language of an existing proof checker, with consideration of automation possibilities.&lt;/details>&lt;i>Edward Sabinus&lt;/i>&lt;/div>&lt;div style='width:10%; display:inline-block;'>Doctoral Symposium&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:Gainsboro''>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>12:45 - 13:00&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Closing session&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;div style='border-bottom: 0.2ex solid gray; background-color:#e89b26''>&lt;div style='width:15%; display:inline-block; overflow-wrap: break-word;'>13:00 - 14:00&lt;/div>&lt;div style='display:inline-block; width:75%; '>&lt;b>Lunch break and greetings&lt;/b>&lt;/div>&lt;div style='width:10%; display:inline-block;'>&lt;/div>&lt;/div>
&lt;/div>&lt;br></description></item><item><title>ABZ 2024 – 10th International Conference on Rigorous State Based Methods</title><link>/site/2024/registration/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0100</pubDate><guid>/site/2024/registration/</guid><description>&lt;h2 id="registration-fees-all-values-are-in-eur">Registration fees (all values are in EUR)&lt;/h2>
&lt;h3 id="follow-these-guidelines-for-the-payments-payment-guidelineshttpsdrivegooglecomfiled12f7umfdx9xjrjs0us8wmcgl9guoq6au3view">Follow these guidelines for the payments:
&lt;a href="https://drive.google.com/file/d/12f7umFDx9XjrjS0US8WMcGL9GUOq6aU3/view" target="_blank" rel="noopener">Payment Guidelines&lt;/a>&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Registration type&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Due date&lt;/strong>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;del>Author registration (workshops are included)&lt;/del>&lt;/td>
&lt;td>&lt;del>April 20, 2024&lt;/del>&lt;/td>
&lt;td>&lt;del>€480&lt;/del>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;del>Early full regstration (workshops are included)&lt;/del>&lt;/td>
&lt;td>&lt;del>May 25, 2024&lt;/del>&lt;/td>
&lt;td>&lt;del>€480&lt;/del>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;del>Early student registration (workshops are included)&lt;/del>&lt;/td>
&lt;td>&lt;del>May 25, 2024&lt;/del>&lt;/td>
&lt;td>&lt;del>€250&lt;/del>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;del>Early workshop registration only (1 day)&lt;/del>&lt;/td>
&lt;td>&lt;del>May 25, 2024&lt;/del>&lt;/td>
&lt;td>&lt;del>€120&lt;/del>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Late full registration (workshops are included)&lt;/td>
&lt;td>June 16, 2024&lt;/td>
&lt;td>€550&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Late student registration (workshops are included)&lt;/td>
&lt;td>June 16, 2024&lt;/td>
&lt;td>€300&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Late workshop registration only (1 day)&lt;/td>
&lt;td>June 16, 2024&lt;/td>
&lt;td>€180&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="what-is-included-in-the-price">What is included in the price:&lt;/h2>
&lt;p>Author/Full/Student registrations include:&lt;/p>
&lt;ul>
&lt;li>Gadgets&lt;/li>
&lt;li>Lunches and coffee breaks&lt;/li>
&lt;li>Welcome Reception on June 25th&lt;/li>
&lt;li>Social City Tour with dinner on June 26th&lt;/li>
&lt;li>Social dinner on June 27th&lt;/li>
&lt;/ul>
&lt;p>Workshop registration includes:&lt;/p>
&lt;ul>
&lt;li>Gadgets&lt;/li>
&lt;li>Lunches and coffee breaks on June 25th&lt;/li>
&lt;li>Welcome Reception on June 25th&lt;/li>
&lt;/ul>
&lt;h3 id="extra-tickets">Extra tickets&lt;/h3>
&lt;p>Extra tickets for Welcome Reception on June 25th, Social City Tour with dinner on June 26th, Social dinner on June 27th can be purchased during registration. Add the extra tickets amount to the registration fee, and make the payment accordingly.&lt;/p>
&lt;p>The fees for the extra tickets are the followings&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Ticket&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Amount&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Welcome Reception on June 25th&lt;/td>
&lt;td>€15&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Social City Tour with dinner on June 26th&lt;/td>
&lt;td>€50&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Social dinner on June 27th&lt;/td>
&lt;td>€80&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="author-policy">Author Policy&lt;/h2>
&lt;p>At least one “Author Registration” per paper accepted is required before April, 20th.&lt;/p>
&lt;h2 id="student-policy">Student Policy&lt;/h2>
&lt;p>For registrations at the student rate, a proof of student status – such as a confirmation of registration provided by the university or a confirmation letter by the PhD advisor - must be sent by email to
&lt;a href="mailto:abz2024@unibg.it">abz2024@unibg.it&lt;/a> together with the payment receipt.&lt;/p>
&lt;h2 id="visa-information">Visa Information&lt;/h2>
&lt;p>If you need a visa for traveling to Italy, we can provide you with an invitation letter needed for obtaining the visa. You have to explicitly indicate it in the email when you send the payment receipt to
&lt;a href="mailto:abz2024@unibg.it">abz2024@unibg.it&lt;/a>.&lt;/p></description></item><item><title>ABZ 2024 – 10th International Conference on Rigorous State Based Methods</title><link>/site/2024/team/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0100</pubDate><guid>/site/2024/team/</guid><description>&lt;h2 id="organization">Organization&lt;/h2>
&lt;h3 id="program-chairs">Program Chairs&lt;/h3>
&lt;ul>
&lt;li>
&lt;a href="https://riccobene.di.unimi.it/" target="_blank" rel="noopener">Elvinia Riccobene, Università degli Studi di Milano, Milano, Italy&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.cs.hhu.de/lehrstuehle-und-arbeitsgruppen/softwaretechnik-und-programmiersprachen/unser-team/team/leuschel" target="_blank" rel="noopener">Michael Leuschel, Heinrich-Heine-Universität, Düsseldorf, Germany&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="case-study-chairs">Case Study Chairs&lt;/h3>
&lt;ul>
&lt;li>
&lt;a href="https://cs.unibg.it/bonfanti/" target="_blank" rel="noopener">Silvia Bonfanti, University of Bergamo, Bergamo, Italy&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://cs.unibg.it/garganti/" target="_blank" rel="noopener">Angelo Gargantini, University of Bergamo, Bergamo, Italy&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="workshoptutorial-chairs">Workshop/Tutorial Chairs&lt;/h3>
&lt;ul>
&lt;li>
&lt;a href="https://claudiomenghi.github.io/" target="_blank" rel="noopener">Claudio Menghi, University of Bergamo, Bergamo, Italy&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.uni-ulm.de/in/sp/team/dr-alexander-raschke/" target="_blank" rel="noopener">Alexander Raschke, Ulm University, Ulm, Germany&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="sponsor-chair">Sponsor Chair&lt;/h3>
&lt;ul>
&lt;li>
&lt;a href="https://claudiomenghi.github.io/" target="_blank" rel="noopener">Claudio Menghi, University of Bergamo, Bergamo, Italy&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="doctoral-symposium-chairs">Doctoral Symposium Chairs&lt;/h3>
&lt;ul>
&lt;li>
&lt;a href="https://www.cs.hhu.de/lehrstuehle-und-arbeitsgruppen/softwaretechnik-und-programmiersprachen/unser-team/team/koerner" target="_blank" rel="noopener">Philipp Körner, Heinrich-Heine-Universität, Düsseldorf, Germany&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.unimi.it/it/ugov/person/chiara-braghin" target="_blank" rel="noopener">Chiara Braghin, Università degli Studi di Milano, Milano, Italy&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="socialpublicity-chairs">Social/Publicity Chairs&lt;/h3>
&lt;ul>
&lt;li>
&lt;a href="https://www.jku.at/en/institute-of-software-systems-engineering/about-us/team/atif-mashkoor/" target="_blank" rel="noopener">Atif Mashkoor, JKU Linz, Linz, Austria&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.researchgate.net/profile/Fabian-Vul" target="_blank" rel="noopener">Fabian Vu, Heinrich-Heine-Universität, Düsseldorf, Germany&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="web-chairs">Web Chairs&lt;/h3>
&lt;ul>
&lt;li>
&lt;a href="https://cs.unibg.it/bombarda/" target="_blank" rel="noopener">Andrea Bombarda, University of Bergamo, Bergamo, Italy&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://scholar.google.com/citations?user=twr3edgAAAAJ&amp;amp;hl=en" target="_blank" rel="noopener">Mario Lilli, Università degli Studi di Milano, Milano, Italy&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="local-chair">Local Chair&lt;/h3>
&lt;ul>
&lt;li>
&lt;a href="https://cs.unibg.it/scandurra/" target="_blank" rel="noopener">Patrizia Scandurra, University of Bergamo, Bergamo, Italy&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="registration-chair">Registration Chair&lt;/h3>
&lt;ul>
&lt;li>
&lt;a href="https://cs.unibg.it/bonfanti/" target="_blank" rel="noopener">Silvia Bonfanti, University of Bergamo, Bergamo, Italy&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="program-committee">Program Committee&lt;/h2>
&lt;ul>
&lt;li>Yamine Ait Ameur, IRIT/INPT-ENSEEIHT, France&lt;/li>
&lt;li>Nazareno Aguirre, Universidad Nacional de Río Cuarto, Argentina&lt;/li>
&lt;li>Étienne André, Université Sorbonne Paris Nord, LIPN, CNRS UMR, France&lt;/li>
&lt;li>Paolo Arcaini, National Institute of Informatics, Japan&lt;/li>
&lt;li>Richard Banach, University of Manchester, UK&lt;/li>
&lt;li>Egon Boerger, University of Pisa, Italy&lt;/li>
&lt;li>Chiara Braghin, University of Milan, Italy&lt;/li>
&lt;li>Adam Bryant, Galois Inc., USA&lt;/li>
&lt;li>Michael Butler, University of Southampton, UK&lt;/li>
&lt;li>José Creissac Campos, University of Minho &amp;amp; HASLab/INESC TEC, Portugal&lt;/li>
&lt;li>Maximiliano Cristiá, Universidad Nacional de Rosario, Argentina&lt;/li>
&lt;li>Alcino Cunha, University of Minho, Portugal&lt;/li>
&lt;li>Juergen Dingel, Queen&amp;rsquo;s University, Ontario&lt;/li>
&lt;li>Catherine Dubois, ENSIIE-Samovar, France&lt;/li>
&lt;li>Guillaume Dupont, IRIT/INPT-ENSEEIHT, France&lt;/li>
&lt;li>Gidon Ernst, LMU Munich, Germany&lt;/li>
&lt;li>Flavio Ferrarotti, Software Competence Centre Hagenberg, Austria&lt;/li>
&lt;li>Mamoun Filali Amine, IRIT CNRS Université Paul Sabatier, France&lt;/li>
&lt;li>Marc Frappier, Université de Sherbrooke, Canada&lt;/li>
&lt;li>Frederic Gervais, Univ Paris Est Creteil, LACL, France&lt;/li>
&lt;li>Vincenzo Gervasi, University of Pisa, Italy&lt;/li>
&lt;li>Stefan Hallerstede, Aarhus University, Denmark&lt;/li>
&lt;li>Klaus Havelund, Jet Propulsion Laboratory, USA&lt;/li>
&lt;li>Thai Son Hoang, University of Southampton, UK&lt;/li>
&lt;li>Fuyuki Ishikawa, National Institute of Informatics, Japan&lt;/li>
&lt;li>Philipp Körner, University of Düsseldorf, Germany&lt;/li>
&lt;li>Olga Kouchnarenko, University of Franche-Comté, France&lt;/li>
&lt;li>Régine Laleau, Paris Est Creteil University, France&lt;/li>
&lt;li>Thierry Lecomte, CLEARSY, France&lt;/li>
&lt;li>Alexei Lisitsa, University of Liverpool, UK&lt;/li>
&lt;li>Frederic Mallet, Université Côte d&amp;rsquo;Azur, France&lt;/li>
&lt;li>Amel Mammar, TELECOM Sud Paris, France&lt;/li>
&lt;li>Tiziana Margaria, University of Limerick, Ireland&lt;/li>
&lt;li>Atif Mashkoor, Johannes Kepler University, Austria&lt;/li>
&lt;li>Claudio Menghi, University of Bergamo, Italy&lt;/li>
&lt;li>Dominique Mery, Université de Lorraine, LORIA, France&lt;/li>
&lt;li>Stephan Merz, Inria, France&lt;/li>
&lt;li>Rosemary Monahan, Maynooth University, Ireland&lt;/li>
&lt;li>Philipp Paulweber, fiskaly GmbH, Austria&lt;/li>
&lt;li>Andreas Prinz, University of Agder, Norway&lt;/li>
&lt;li>Alexander Raschke, Ulm University, Germany&lt;/li>
&lt;li>Gerhard Schellhorn, Universitaet Augsburg, Germany&lt;/li>
&lt;li>Klaus-Dieter Schewe, Zhejiang University, China&lt;/li>
&lt;li>Neeraj Singh, INPT-ENSEEIHT / IRIT, University of Toulouse, France&lt;/li>
&lt;li>Maurice ter Beek, CNR, Italy&lt;/li>
&lt;li>Laurent Voisin, Systerel, France&lt;/li>
&lt;li>Wolf Zimmermann, Martin Luther University Halle-Wittenberg, Germany&lt;/li>
&lt;/ul></description></item><item><title>ABZ 2024 – 10th International Conference on Rigorous State Based Methods</title><link>/site/2024/tutorialworkshops/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0100</pubDate><guid>/site/2024/tutorialworkshops/</guid><description>&lt;h2 id="call-for-workshops-and-tutorials">Call for Workshops and Tutorials&lt;/h2>
&lt;p>Researchers and practitioners are invited to submit proposals for workshops and tutorials held in conjunction with ABZ 2024. Workshops and tutorials will be held on June 25, 2024 (right before the main conference on June 26 – June 28, 2024).&lt;/p>
&lt;p>ABZ workshops provide an opportunity for researchers and practitioners to exchange and explore innovative ideas and challenges on rigorous state-based methods, at an early stage.&lt;/p>
&lt;p>In addition, ABZ edition 2024 hosts tutorials on topics related to state-based formal methods from theoretical foundations to practical applications. Tutorials at ABZ provide a valuable opportunity for conference participants to expand their knowledge and skills in specific research and/or practical topics related to rigorous state-based methods.&lt;/p>
&lt;h3 id="workshop-proposal-submissions">Workshop Proposal Submissions&lt;/h3>
&lt;p>The proposal should include the following information:&lt;/p>
&lt;ul>
&lt;li>Workshop title and acronym&lt;/li>
&lt;li>Contact information for the workshop organizers (name, affiliation, email) and the main contact&lt;/li>
&lt;li>Abstract for ABZ 2024 website (if workshop is accepted)&lt;/li>
&lt;li>Description of the workshop&lt;/li>
&lt;li>Format
&lt;ul>
&lt;li>Workshop format (e.g., paper presentations, keynotes, breakout sessions, panel-like discussions) and plans for generating discussions&lt;/li>
&lt;li>Duration - half day or one day&lt;/li>
&lt;li>Special services, logistic and/or equipment constraints&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="tutorial-proposal-submissions">Tutorial Proposal Submissions&lt;/h3>
&lt;p>The proposal should include the following information:&lt;/p>
&lt;ul>
&lt;li>Tutorial title&lt;/li>
&lt;li>Contact information of tutorial presenter(s), including name, affiliation, email&lt;/li>
&lt;li>Tutorial summary for ABZ 2024 website (if tutorial is accepted)&lt;/li>
&lt;li>Description of the tutorial&lt;/li>
&lt;li>Format
&lt;ul>
&lt;li>How tutorial will be conducted (e.g., lecture, hands-on exercises, facilitated group discussion, group activities, role playing, games)&lt;/li>
&lt;li>Duration - half day or one day&lt;/li>
&lt;li>Special services, logistic and/or equipment constraints&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="submission-process">Submission Process&lt;/h3>
&lt;p>Proposals can be sent to the chairs
&lt;a href="mailto:claudio.menghi@unibg.it">claudio.menghi@unibg.it&lt;/a> and
&lt;a href="mailto:alexander.raschke@uni-ulm.de">alexander.raschke@uni-ulm.de&lt;/a> before the submission deadline (see
&lt;a href="../importantdates">here&lt;/a>).&lt;/p>
&lt;h3 id="important-dates">Important Dates&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Workshop proposal submission:&lt;/strong>&lt;/td>
&lt;td>December 01, 2023&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Workshop notification:&lt;/strong>&lt;/td>
&lt;td>December 15, 2023&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Tutorial proposal submission:&lt;/strong>&lt;/td>
&lt;td>March 16, 2024&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>ABZ 2024 – 10th International Conference on Rigorous State Based Methods</title><link>/site/2024/venue/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0100</pubDate><guid>/site/2024/venue/</guid><description>&lt;h2 id="venue-university-of-bergamo">Venue: University of Bergamo&lt;/h2>
&lt;h4 id="location">Location&lt;/h4>
&lt;p>
&lt;a href="https://en.unibg.it/services-facilities/facilities/campuses/santagostino" target="_blank" rel="noopener">&lt;strong>University of Bergamo - Department of Human and Social Sciences&lt;/strong>&lt;/a> &lt;br>
Piazzale S. Agostino, 2 &lt;br>
24129 Bergamo &lt;br>
Italy &lt;br>&lt;/p>
&lt;iframe src="https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d44580.57918470652!2d9.672382!3d45.705295!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x4781513d0fa828bb%3A0xd1867fa937e65199!2sSala%20Conferenze%2C%20San&amp;#39;t%20Agostino!5e0!3m2!1sit!2sus!4v1688026989070!5m2!1sit!2sus" width="600" height="450" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade">&lt;/iframe>
&lt;h2 id="how-to-reach-the-venue">How to reach the venue&lt;/h2>
&lt;h4 id="from-bergamo-airport-milan-bergamo-airport---orio-al-serio---bgy">From Bergamo airport (Milan-Bergamo Airport - Orio al Serio - BGY)&lt;/h4>
&lt;p>Take BUS Line 1 / airport to Porta S. Agostino stop.&lt;/p>
&lt;h4 id="from-linate-airport-lin">From Linate airport (LIN)&lt;/h4>
&lt;p>From Linate airport you can take the metro to the railway station (Centrale or Lambrate), and then the train to Bergamo. The ticket for the metro is €2,20.&lt;/p>
&lt;h4 id="from-malpensa-airport-mxp">From Malpensa airport (MXP)&lt;/h4>
&lt;p>From Malpensa airport you can reach the railway Central Station of Milan by bus (1h journey, every 10 minutes), operated by
&lt;a href="www.autostradale.it/?lang=en-GB">Autostradale&lt;/a> and
&lt;a href="www.malpensashuttle.com/en/index.html">Malpensashuttle&lt;/a>. There is also a
&lt;a href="www.malpensaexpress.it/en/">train&lt;/a> running from MXP and Milano Centrale (or Milano Cadorna, but then you need to take the metro). The train is faster than the bus, but be careful to take the right direction to Milano Centrale.&lt;/p>
&lt;h4 id="from-the-station">From the station&lt;/h4>
&lt;ul>
&lt;li>BUS Line 1 - From the train station to Città Alta (Colle Aperto) the bus has a frequency of 15 minutes.&lt;/li>
&lt;/ul>
&lt;p>You can also walk to Porta Nuova in a few minutes, where you can take:&lt;br>&lt;/p>
&lt;ul>
&lt;li>Bus Line 1&lt;/li>
&lt;li>Bus Line 1A (from Torre de &amp;lsquo;Roveri)&lt;/li>
&lt;li>Bus Line 1B (from Scanzo)&lt;/li>
&lt;li>Bus Line 1C (from Grassobbio)&lt;/li>
&lt;/ul>
&lt;p>The complete map of the ATB links is available at this
&lt;a href="https://www.atb.bergamo.it/user/download.aspx?FILE=OBJ00181.PDF&amp;amp;TIPO=FLE&amp;amp;NOME=mappa-della-rete.PDF" target="_blank" rel="noopener">link&lt;/a>.&lt;/p>
&lt;h4 id="by-car">By Car&lt;/h4>
&lt;p>We do not recommend reaching the venue by car, as the entire Città Alta area is a Limited Traffic Zone (only selected vehicles, e.g., residents, can access that area) and parking is limited. The Limited Traffic Zone is active on Sunday between 10:00 and 12:00, and between 14:00 and 19:00, while the other days it is active between 21:00 and 01:00.&lt;/p>
&lt;p>You can find the map of all areas involved in the Limited Traffic Zone, as well as the map of all the cameras surveilling the entries and the activation times,
&lt;a href="https://territorio.comune.bergamo.it/gfmaplet/?map=ZoneTL&amp;amp;highlightFeatures=ZTL%7c4%7cID_ZONA=1%20" target="_blank" rel="noopener">here&lt;/a> (unfortunately, only available in Italian).&lt;/p>
&lt;p>If you wish to park in Città Alta, there is a
&lt;a href="https://maps.app.goo.gl/ce2DAMZfRvy3WQzD7" target="_blank" rel="noopener">new parking&lt;/a> very close to the conference venue, and you can access the Limited Traffic Zone if you park there. It costs 3,50 €/h.&lt;/p>
&lt;h2 id="about-bergamo">About Bergamo&lt;/h2>
&lt;p>Bergamo is a small city in Lombardy, in the northern part of Italy, yet it is rich in history and culture. &lt;br>
The impressive &lt;strong>Venetian Walls&lt;/strong>, enclosing the beauties of the Upper Town for more than four centuries, are recognized as a &lt;strong>Unesco World Heritage&lt;/strong>.&lt;/p>
&lt;p>For touristic information, the official website is: &lt;br>&lt;/p>
&lt;p>
&lt;a href="https://www.visitbergamo.net/en/" target="_blank" rel="noopener">https://www.visitbergamo.net/en/&lt;/a>&lt;/p>
&lt;p>The value of Bergamo as touristic attraction has often been published on the news:&lt;/p>
&lt;ul>
&lt;li>See the recent article in the Travel section of the Financial Times
&lt;a href="https://www.ft.com/content/02497aca-c22d-431e-918f-011b91406ef1" target="_blank" rel="noopener">“Brescia and Bergamo — rediscovering Italy’s twin treasures”&lt;/a>&lt;/li>
&lt;li>There is also an older article on the New York Times
&lt;a href="https://www.nytimes.com/2016/06/26/travel/bergamo-northern-italy-jane-smiley.html" target="_blank" rel="noopener">“In the June Light of Northern Italy, the Bliss of Bergamo”&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>ABZ 2024 – 10th International Conference on Rigorous State Based Methods</title><link>/site/2024/workshop/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0100</pubDate><guid>/site/2024/workshop/</guid><description>&lt;h2 id="workshops">Workshops&lt;/h2>
&lt;p>ABZ 2024 will host the two following workshops.&lt;/p>
&lt;h3 id="rodin-workshop">Rodin workshop&lt;/h3>
&lt;p>Event-B is a formal method for system-level modeling and analysis. The Rodin Platform is an Eclipse-based toolset for Event-B that provides effective support for modeling and automated proof. The platform is open source and is further extendable with plug-ins. A range of plug-ins have already been developed.&lt;/p>
&lt;p>The purpose of this workshop is to bring together existing and potential users and developers of the Rodin toolset and to foster a broader community of Rodin users and developers.&lt;/p>
&lt;p>For Rodin users, the workshop will provide an opportunity to share tool experiences and gain an understanding of ongoing tool developments. For plug-in developers, the workshop will provide an opportunity to showcase their tools and to achieve better coordination of tool development efforts.&lt;/p>
&lt;p>Participants may attend or present both in person or remotely.
If you are willing to participate remotely, please contact the organizers.&lt;/p>
&lt;p>Additional details can be found at
&lt;a href="https://wiki.event-b.org/index.php/Rodin_Workshop_2024" target="_blank" rel="noopener">https://wiki.event-b.org/index.php/Rodin_Workshop_2024&lt;/a>&lt;/p>
&lt;h4 id="format-and-date">Format and date&lt;/h4>
&lt;p>The workshop will host presentations, with ample time for discussions.&lt;/p>
&lt;p>The Rodin workshop will be held on June 25, 2024.&lt;/p>
&lt;h4 id="organizers">Organizers&lt;/h4>
&lt;ul>
&lt;li>Asieh Salehi Fathabadi (University of Southampton)
&lt;a href="mailto:A.Salehi-Fathabadi@soton.ac.uk">A.Salehi-Fathabadi@soton.ac.uk&lt;/a>&lt;/li>
&lt;li>Guillaume Verdier (Université de Paris-Est Créteil)
&lt;a href="mailto:Guillaume.Verdier@irit.fr">Guillaume.Verdier@irit.fr&lt;/a>&lt;/li>
&lt;li>Neeraj Kumar Singh (INPT-ENSEEIHT / IRIT)
&lt;a href="mailto:neeraj.singh@toulouse-inp.fr">neeraj.singh@toulouse-inp.fr&lt;/a>&lt;/li>
&lt;li>Sebastian Stock (Johannes Kepler University)
&lt;a href="mailto:sebastian.stock@jku.at">sebastian.stock@jku.at&lt;/a>&lt;/li>
&lt;li>Kristin Rutenkolk (Heinrich Heine University Düsseldorf)
&lt;a href="mailto:kristin.rutenkolk@hhu.de">kristin.rutenkolk@hhu.de&lt;/a>&lt;/li>
&lt;li>Main contact: Laurent Voisin (Systerel)
&lt;a href="mailto:laurent.voisin@systerel.fr">laurent.voisin@systerel.fr&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="ivoire-workshop">IVOIRE workshop&lt;/h3>
&lt;p>Historically, formal methods and supported environments have focused more on only one-half of the quality-assurance process: verification (are we building the software right?).
The other half, validation (are we building the right software?), has been given much less attention, i.e., we have fewer automated/push-button tools available for validation, unlike verification.
The IVOIRE workshop focuses on developing an enhanced formal paradigm based on an extension of the refinement framework that includes a comprehensive validation process and toolchain to perform validation obligations.&lt;/p>
&lt;p>The main goal of this workshop is to provide a platform for formal methods practitioners, researchers, and academics to discuss various issues associated with validation for formal methods, including but not limited to:&lt;/p>
&lt;ul>
&lt;li>Validation obligations or other systematic approaches to validation&lt;/li>
&lt;li>Relation between refinement and validation and the interplay between verification and validation&lt;/li>
&lt;li>Environments and tools to manage the validation process&lt;/li>
&lt;li>Evaluations, benchmarking, case studies, etc.&lt;/li>
&lt;/ul>
&lt;p>Additional details can be found at
&lt;a href="https://isse.jku.at/ivoire/index.php/Main_Page" target="_blank" rel="noopener">https://isse.jku.at/ivoire/index.php/Main_Page&lt;/a>&lt;/p>
&lt;h4 id="format-and-date-1">Format and date&lt;/h4>
&lt;p>The workshop will host paper presentations.&lt;/p>
&lt;p>The IVOIRE workshop will be held on June 25, 2024.&lt;/p>
&lt;h4 id="organizers-1">Organizers&lt;/h4>
&lt;p>&lt;em>Workshop chairs&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Atif Mashkoor (JKU Linz, Austria)
&lt;a href="mailto:atif.mashkoor@jku.at">atif.mashkoor@jku.at&lt;/a>&lt;/li>
&lt;li>Michael Leuschel (HHU Düsseldorf, Germany)
&lt;a href="mailto:leuschel@hhu.de">leuschel@hhu.de&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;em>Workshop organizing committee&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Sebastian Stock (JKU Linz, Austria)
&lt;a href="mailto:sebastian.stock@jku.at">sebastian.stock@jku.at&lt;/a>&lt;/li>
&lt;li>Fabian Vu (HHU Düsseldorf, Germany)
&lt;a href="mailto:fabian.vu@uni-duesseldorf.de">fabian.vu@uni-duesseldorf.de&lt;/a>&lt;/li>
&lt;li>David Geleßus (HHU Düsseldorf, Germany)
&lt;a href="mailto:dagel101@hhu.de">dagel101@hhu.de&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Site Notice</title><link>/site/notice/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0100</pubDate><guid>/site/notice/</guid><description>&lt;p>Information disclosed under Digital Economy Law (575/2004), France:&lt;/p>
&lt;h3 id="contact">Contact&lt;/h3>
&lt;div class="container">
&lt;div class="row">
&lt;div class="col-4">
&lt;small>
Neeraj Kumar Singh &lt;br>
INPT-ENSEEIHT/IRIT &lt;br>
F-313, 2 Rue Charles Camichel, BP 7122 &lt;br>
31071 Toulouse, CEDEX 7, France &lt;br>
&lt;/small>
&lt;/div>
&lt;div class="col-4">
&lt;small>
Alexander Raschke &lt;br>
Universität Ulm &lt;br>
&lt;!-- Fakultät für Ingenieurwissenschaften, Informatik und Psychologie &lt;br -->
&lt;!-- Institut für Softwaretechnik und Programmiersprachen &lt;br -->
Albert-Einstein-Allee 11&lt;br>
89069 Ulm, Germany &lt;br>
&lt;/small>
&lt;/div>
&lt;div class="col-4">
&lt;small>
Philipp Paulweber&lt;br>
fiskaly Gmbh&lt;br>
Mariahilfer Straße 36&lt;br>
1070 Vienna, Austria&lt;br>
&lt;/small>
&lt;/div>
&lt;/div> &lt;!-- row -->
&lt;br>
&lt;div class="row">
&lt;div class="col-4">
&lt;small> $nsingh@enseeiht.fr$ &lt;/small> &lt;br>
&lt;small> +33-5-34-32-21-82 &lt;/small> &lt;br>
&lt;/div>
&lt;div class="col-4">
&lt;small> $alexander.raschke@uni-ulm.de$ &lt;/small> &lt;br>
&lt;small> +49-731-50-24172 &lt;/small> &lt;br>
&lt;/div>
&lt;div class="col-4">
&lt;small> $ppaulweber@fiskaly.com$ &lt;/small> &lt;br>
&lt;small> +43-1-997-4459-29 &lt;/small> &lt;br>
&lt;/div>
&lt;/div> &lt;!-- row -->
&lt;/div> &lt;!-- container -->
&lt;h3 id="notice-of-liability">Notice of liability&lt;/h3>
&lt;p>Despite careful examination, we assume no liability for external links.
Responsibility for the content of external links lies with the owners and responsible operators.&lt;/p>
&lt;h3 id="copyright">Copyright&lt;/h3>
&lt;p>All contents, texts, graphics, layouts, code or software are Copyright © 2024
ABZ Conference and Community.
All Rights reserved.
Any usage of material or information available on this website, including the reproduction, sales, alteration and publication is prohibited unless specifically approved by the ABZ Conference and Community.&lt;/p>
&lt;h3 id="domain-encryption-and-servers">Domain, Encryption and Servers&lt;/h3>
&lt;p>The Top-Level Domain (TLD)
&lt;a href="https://abz-conf.org" target="_blank" rel="noopener">https://abz-conf.org&lt;/a> and all sub-domains are provided by the services from
&lt;a href="https://namecheap.com" target="_blank" rel="noopener">https://namecheap.com&lt;/a>, the SSL/TLS certificate for encryption is provided by the services from
&lt;a href="https://letsencrypt.org" target="_blank" rel="noopener">https://letsencrypt.org&lt;/a>, and the (virtual) server infrastructure and hosting of this website is provided by
&lt;a href="https://pages.github.com" target="_blank" rel="noopener">https://pages.github.com&lt;/a>.&lt;/p>
&lt;h3 id="cookies-and-analytics">Cookies and Analytics&lt;/h3>
&lt;p>This website uses no analytics software of any kind.
The only cookie the website uses and stores is a &lt;code>cookieconsent_status&lt;/code>.
This cookie consent status is used to store that the page informed you about this page and does only appear the first time you visit this page.&lt;/p>
&lt;h3 id="twitter-plugin">Twitter Plugin&lt;/h3>
&lt;p>Our website contains social plugins from
&lt;a href="https://twitter.com" target="_blank" rel="noopener">https://twitter.com&lt;/a>.
These plugins are solely provided by Twitter Inc., 795 Folsom St., Suite 600, San Francisco, CA 94107, USA.
When you visit the start page of our website that contains the social plugin, your browser establishes a direct connection to the servers of Twitter, which is used to retrieve the contents of the plugin.
Through this process, Twitter is aware that you have visited this website.
If you are logged in to Twitter while browsing this website, Twitter can match your visit with your account.
By interacting with the plugin, this information is sent directly to Twitter and processed there.
If you would like to opt out, please log out of Twitter before visiting this website.
For the information on the purpose and scope of data collection and procession by Twitter, as well as your rights in this respect and settings options for protecting your privacy please visit Twitter’s privacy policy:
&lt;a href="https://twitter.com/privacy" target="_blank" rel="noopener">https://twitter.com/privacy&lt;/a>.&lt;/p></description></item></channel></rss>