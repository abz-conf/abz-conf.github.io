[{"authors":null,"categories":null,"content":"-- The ABZ conference is dedicated to the cross-fertilization of state-based and machine-based formal methods, like Abstract State Machines (ASM), Alloy, B, TLA, VDM and Z, that share a common conceptual foundation and are widely used in both academia and industry for the design and analysis of hardware and software systems. The conference aims for a vital exchange of knowledge and experience among the research communities around different formal methods.\n","date":1779062400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"31c0a09bff40bd2af75d3517a83b76c6","permalink":"/2026/","publishdate":"2025-07-19T00:00:00Z","relpermalink":"/2026/","section":"event","summary":"12th International Conference on Rigorous State-Based Methods","tags":["ABZ'26"],"title":"ABZ 2026 (Tokyo, Japan)","type":"event"},{"authors":null,"categories":null,"content":"Accomodation The accomodation information will appear inside the FM 2026 website.\n","date":1753783200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"811cbff4b3d6a35f84f0624e4e06f3a0","permalink":"/site/2026/accommodation/","publishdate":"2025-07-29T19:00:00+09:00","relpermalink":"/site/2026/accommodation/","section":"site","summary":"Accomodation The accomodation information will appear inside the FM 2026 website.","tags":null,"title":"ABZ 2026 – 12th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Case Study: Planetary Rover - Call for Papers As successfully practiced in previous editions of ABZ, the 12th edition of ABZ will include again special sessions dedicated to a shared case study.\nThe objective of this session is to enrich the set of case studies ( https://abz-conf.org/case-studies/) developed with Rigorous State Based Methods with a practical and real-life case study. Its goal is also cross-fertilisation, enabling practitioners of the individual formal methods to better understand each other.\nThe case study is about an autonomous planetary rover.\nRepository for Detailed Specification All the pdf versions of the specification document are available here (we keep track of all the changes in the documents): https://github.com/trarse-nii/ABZ2026-case-study. The current version is v1 of the specification document.\nAll the questions and doubts can be discussed here: https://github.com/trarse-nii/ABZ2026-case-study/issues\nIf you have any question/comment on the case study, you can contact Marie Farrell and Tsutomu Kobayashi: marie.farrell (AT) manchester.ac.uk, kobayashi.tsutomu (AT) jaxa.jp\nCall for Case Study Papers Case study papers are full papers reporting on the experiments conducted with any of the state based techniques in the scope of ABZ 2026 case study. A paper of no more than 16 pages (excluding references) in LNCS format is expected and will be reviewed.\nImportant Dates          Abstract submission: February 9, 2026 AOE   Paper submission: February 16, 2026 AOE   Notification: March 13, 2026   Final version: March 23, 2026    Submission Process  Accepted papers will appear in the Springer LNCS proceedings.\nPage limits (including references and all appendices) for the final versions are 18 pages for case study papers.\nAuthors should consult Springer Authors Guidelines and use their proceedings templates. Springer encourages authors to include their ORCIDs in their papers. Authors should also check Springer Authors Code of Conduct\nThe corresponding author of each paper, acting on behalf of all of the authors of that paper, must complete and sign a Consent-to-Publish form. The corresponding author signing the copyright form should match the corresponding author marked on the paper. Once the files have been sent to Springer, changes relating to the authorship of the papers cannot be made.\nAuthors interested in contributing to ABZ 2026 in Open Access or Open Choice should refer to the corresponding Springer webpage.\nSubmit contribution\nvia easychair\n","date":1753783200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"0521900efd777a0526b9a920a2056fa7","permalink":"/site/2026/casestudy/","publishdate":"2025-07-29T19:00:00+09:00","relpermalink":"/site/2026/casestudy/","section":"site","summary":"Case Study: Planetary Rover - Call for Papers As successfully practiced in previous editions of ABZ, the 12th edition of ABZ will include again special sessions dedicated to a shared case study.","tags":null,"title":"ABZ 2026 – 12th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Doctoral Symposium In the 2026 edition, information for the doctoral symposium will be found in the FM 2026 website (we don\u0026rsquo;t have ABZ-specific doctoral symposium).\n","date":1753783200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"84953d6a75d47e19ef4975386b6abb12","permalink":"/site/2026/doctoralsymposium/","publishdate":"2025-07-29T19:00:00+09:00","relpermalink":"/site/2026/doctoralsymposium/","section":"site","summary":"Doctoral Symposium In the 2026 edition, information for the doctoral symposium will be found in the FM 2026 website (we don\u0026rsquo;t have ABZ-specific doctoral symposium).","tags":null,"title":"ABZ 2026 – 12th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Important Dates Main Track          Abstract submission: February 9, 2026 AOE   Paper submission: February 16, 2026 AOE   Notification: March 13, 2026   Final version: March 23, 2026    ","date":1753783200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"4fb055d363c90cc336d450a5e7f5cdde","permalink":"/site/2026/importantdates/","publishdate":"2025-07-29T19:00:00+09:00","relpermalink":"/site/2026/importantdates/","section":"site","summary":"Important Dates Main Track          Abstract submission: February 9, 2026 AOE   Paper submission: February 16, 2026 AOE   Notification: March 13, 2026   Final version: March 23, 2026    ","tags":null,"title":"ABZ 2026 – 12th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Keynote Speakers Will be announced.\n","date":1753783200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c77de03361d977dc235ca77535995d26","permalink":"/site/2026/keynotes/","publishdate":"2025-07-29T19:00:00+09:00","relpermalink":"/site/2026/keynotes/","section":"site","summary":"Keynote Speakers Will be announced.","tags":null,"title":"ABZ 2026 – 12th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Call for Papers Contributions are solicited on all aspects of the theory and applications of ASMs, Alloy, B, TLA, VDM, Z and other state-based rigour approaches in software/hardware engineering, including the development of tools and industrial applications. The program spans from theoretical and methodological foundations to practical applications, emphasizing system engineering methods and tools that are distinguished by mathematical rigor and have proved to be industrially viable. The main goal of the conference is to contribute to the integration of accurate state- and machine-based system development methods, clarifying their commonalities and differences to better understand how to combine different approaches for accomplishing the various tasks in modeling, experimental validation, mathematical verification of reliable high-quality hardware/software systems. Although organized to host several formal methods in a single event, editorial control of the joint conference is vested in one integrated program committee.\nPaper Category  Full research papers: Full research papers which have to be original, unpublished and not submitted elsewhere. A paper of no more than 16 pages (excluding references) in LNCS format is expected and will be reviewed. Short papers: Short papers to present and validate a work in progress or tool demonstrations. A paper of no more than 6 pages (excluding references) in LNCS format is expected and will be reviewed. Application in industry papers: Reporting on work or experiences on the application of state based formal methods in industry. A paper of no more than 8 pages (excluding references) in LNCS format is expected and will be reviewed. It is also an interesting option for industrial practitioners who sometimes face too many constraints to prepare a full paper. Journal-First papers: Journal-First papers summarize recently published papers in high-quality journals. The aim of journal-first papers is to further enrich the program of ABZ and to provide more visibility to an already published journal papers in the scope of the ABZ conference. An extended abstract of no more than 6 pages (excluding references) in LNCS format is expected and will be reviewed.  Please refer to this page for the case study papers.\nImportant Dates          Abstract submission: February 9, 2026 AOE   Paper submission: February 16, 2026 AOE   Notification: March 13, 2026   Final version: March 23, 2026    Submission Process  Accepted papers will appear in the Springer LNCS proceedings.\nPage limits (including references and all appendices) for the final versions are 18 pages for full papers and 8 pages for short papers.\nAuthors should consult Springer Authors Guidelines and use their proceedings templates. Springer encourages authors to include their ORCIDs in their papers. Authors should also check Springer Authors Code of Conduct\nThe corresponding author of each paper, acting on behalf of all of the authors of that paper, must complete and sign a Consent-to-Publish form. The corresponding author signing the copyright form should match the corresponding author marked on the paper. Once the files have been sent to Springer, changes relating to the authorship of the papers cannot be made.\nAuthors interested in contributing to ABZ 2026 in Open Access or Open Choice should refer to the corresponding Springer webpage.\nSubmit contribution\nvia easychair\n","date":1753783200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"bdf335431558a0ebbc16ecfaccc9ad6d","permalink":"/site/2026/maintrack/","publishdate":"2025-07-29T19:00:00+09:00","relpermalink":"/site/2026/maintrack/","section":"site","summary":"Call for Papers Contributions are solicited on all aspects of the theory and applications of ASMs, Alloy, B, TLA, VDM, Z and other state-based rigour approaches in software/hardware engineering, including the development of tools and industrial applications.","tags":null,"title":"ABZ 2026 – 12th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Program The program information will appear inside the FM 2026 website.\n","date":1753783200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"3feb8c394cd278f888a1ebd62663694f","permalink":"/site/2026/program/","publishdate":"2025-07-29T19:00:00+09:00","relpermalink":"/site/2026/program/","section":"site","summary":"Program The program information will appear inside the FM 2026 website.","tags":null,"title":"ABZ 2026 – 12th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Registration The registration information will appear inside the FM 2026 website.\n","date":1753783200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"04ea00e01f6304921507cd87d0951d63","permalink":"/site/2026/registration/","publishdate":"2025-07-29T19:00:00+09:00","relpermalink":"/site/2026/registration/","section":"site","summary":"Registration The registration information will appear inside the FM 2026 website.","tags":null,"title":"ABZ 2026 – 12th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Organization Program Chairs    Fuyuki Ishikawa, National Institute of Informatics, Tokyo, Japan\n   Alcino Cunha, INESC TEC \u0026amp; University of Minho, Braga, Portugal\n  Case Study Track Chairs    Marie Farrell, The University of Manchester, Manchester, UK\n   Tsutomu Kobayashi, Japan Space Exploration Agency, Tsukuba, Japan\n  ","date":1753783200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"a932f97e69d67155fd39f94436b4daa2","permalink":"/site/2026/team/","publishdate":"2025-07-29T19:00:00+09:00","relpermalink":"/site/2026/team/","section":"site","summary":"Organization Program Chairs    Fuyuki Ishikawa, National Institute of Informatics, Tokyo, Japan\n   Alcino Cunha, INESC TEC \u0026amp; University of Minho, Braga, Portugal\n  Case Study Track Chairs    Marie Farrell, The University of Manchester, Manchester, UK","tags":null,"title":"ABZ 2026 – 12th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Workshops and Tutorials In the 2026 edition, information for workshops and tutorials will be found in the FM 2026 website (we don\u0026rsquo;t have ABZ-specific workshops or tutorials).\n","date":1753783200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"403eb5c7469a2aa202faacc0ef0f0516","permalink":"/site/2026/tutorialworkshops/","publishdate":"2025-07-29T19:00:00+09:00","relpermalink":"/site/2026/tutorialworkshops/","section":"site","summary":"Workshops and Tutorials In the 2026 edition, information for workshops and tutorials will be found in the FM 2026 website (we don\u0026rsquo;t have ABZ-specific workshops or tutorials).","tags":null,"title":"ABZ 2026 – 12th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Venue The venue information is found in the FM 2026 website.\n","date":1753783200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"998abd929919748c9e914c34c6155ebd","permalink":"/site/2026/venue/","publishdate":"2025-07-29T19:00:00+09:00","relpermalink":"/site/2026/venue/","section":"site","summary":"Venue The venue information is found in the FM 2026 website.","tags":null,"title":"ABZ 2026 – 12th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Workshops and Tutorials In the 2026 edition, information for workshops and tutorials will be found in the FM 2026 website (we don\u0026rsquo;t have ABZ-specific workshops or tutorials).\n","date":1753783200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7ac79e8fc89177ec78ef3d79bdc6cafb","permalink":"/site/2026/workshop/","publishdate":"2025-07-29T19:00:00+09:00","relpermalink":"/site/2026/workshop/","section":"site","summary":"Workshops and Tutorials In the 2026 edition, information for workshops and tutorials will be found in the FM 2026 website (we don\u0026rsquo;t have ABZ-specific workshops or tutorials).","tags":null,"title":"ABZ 2026 – 12th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Tokyo (Japan) - May 18 — May 20 2026 The ABZ conference is dedicated to the cross-fertilization of state-based and machine-based formal methods, like Abstract State Machines (ASM), Alloy, B, TLA, VDM and Z, that share a common conceptual foundation and are widely used in both academia and industry for the design and analysis of hardware and software systems. The conference aims for a vital exchange of knowledge and experience among the research communities around different formal methods.\nThe 12th instalment of the ABZ conference will be held in Tokyo, Japan, co-located with FM 2026 (The 27th International Symposium on Formal Methods).\n ","date":1752447600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"378cf063f71d0c38c7c5d3b4523ad076","permalink":"/site/2026/","publishdate":"2025-07-14T00:00:00+01:00","relpermalink":"/site/2026/","section":"site","summary":"Tokyo (Japan) - May 18 — May 20 2026 The ABZ conference is dedicated to the cross-fertilization of state-based and machine-based formal methods, like Abstract State Machines (ASM), Alloy, B, TLA, VDM and Z, that share a common conceptual foundation and are widely used in both academia and industry for the design and analysis of hardware and software systems.","tags":null,"title":"ABZ 2026 – 12th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"-- The ABZ conference is dedicated to the cross-fertilization of state-based and machine-based formal methods, like Abstract State Machines (ASM), Alloy, B, TLA, VDM and Z, that share a common conceptual foundation and are widely used in both academia and industry for the design and analysis of hardware and software systems. The conference aims for a vital exchange of knowledge and experience among the research communities around different formal methods.\n","date":1749513600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e7fb22e2147ec68946c40868320797c1","permalink":"/2025/","publishdate":"2024-06-15T00:00:00Z","relpermalink":"/2025/","section":"event","summary":"11th International Conference on Rigorous State-Based Methods","tags":["ABZ'25"],"title":"ABZ 2025 (Düsseldorf, Germany)","type":"event"},{"authors":null,"categories":null,"content":"Düsseldorf (Germany) - Jun 10, 2025 — Jun 13, 2025 The ABZ conference is dedicated to the cross-fertilization of state-based and machine-based formal methods, like Abstract State Machines (ASM), Alloy, B, TLA, VDM and Z, that share a common conceptual foundation and are widely used in both academia and industry for the design and analysis of hardware and software systems. The conference aims for a vital exchange of knowledge and experience among the research communities around different formal methods.\nThe 11th instalment of the ABZ conference will be held at the Tribe hotel, located in the centre of Düsseldorf with easy access to the airport and central rail station.\nAuthors interested in contributing to ABZ 2025 in Open Access or Open Choice should refer to the corresponding Springer webpage.\nSubmit contribution\nvia easychair\n     -- ","date":1726527600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"dbd967424be6408b094430f84130208e","permalink":"/site/2025/","publishdate":"2024-09-17T00:00:00+01:00","relpermalink":"/site/2025/","section":"site","summary":"Düsseldorf (Germany) - Jun 10, 2025 — Jun 13, 2025 The ABZ conference is dedicated to the cross-fertilization of state-based and machine-based formal methods, like Abstract State Machines (ASM), Alloy, B, TLA, VDM and Z, that share a common conceptual foundation and are widely used in both academia and industry for the design and analysis of hardware and software systems.","tags":null,"title":"ABZ 2025 – 11th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Accommodation We have secured a contigent of rooms at a guaranteed rate of 95 Euro per night with the Tribe hotel near the central station of Düsseldorf. It is a three minute walk from the central station and thus ideal for everybody arriving by train or plane (as are direct S-Bahn train from the airport to the central station taking 14 minutes).\nTo book the accommodation for ABZ'2025 you can use this email address: hc1t5@mytribehotel.com You can also book rooms at the hotel via other platforms. If you wish you can also stay in another hotel.\nThe conference and all workshops will be held in the hotel.\n","date":1726527600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"915f4edff44df94e877b78345c8af915","permalink":"/site/2025/accommodation/","publishdate":"2024-09-17T00:00:00+01:00","relpermalink":"/site/2025/accommodation/","section":"site","summary":"Accommodation We have secured a contigent of rooms at a guaranteed rate of 95 Euro per night with the Tribe hotel near the central station of Düsseldorf. It is a three minute walk from the central station and thus ideal for everybody arriving by train or plane (as are direct S-Bahn train from the airport to the central station taking 14 minutes).","tags":null,"title":"ABZ 2025 – 11th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Call for papers The ABZ conference is dedicated to the cross-fertilization of state-based and machine-based formal methods, like Abstract State Machines (ASM), Alloy, B, TLA, VDM and Z, that share a common conceptual foundation and are widely used in both academia and industry for the design and analysis of hardware and software systems. The conference aims for a vital exchange of knowledge and experience among the research communities around different formal methods.\nThe name ABZ goes back to the first conference in London in 2008, where the ASM, B and Z conference series were merged into a joint event. In the following years other formal methods were added, e.g. Alloy in 2010 (Orford, Canada), VDM in 2012 (Pisa, Italy), and TLA+ in 2014 (Toulouse, France). After the also successful 2016 conferences in Linz, Austria, and 2018 in Southampton, UK, it was decided to name the conference \u0026ldquo;ABZ: International Conference on Rigorous State Based Methods\u0026rdquo;, to stress the openness for further state-based formal methods. We hope to continue many fruitful discussions between representatives of the individual methods in the past, which will bring us closer to the common goal of this research community: the creation of reliable and safe software and systems.\nABZ 2025 will have a main conference track, a case study track, a doctoral symposium, tutorials, and workshops.\n  Main Conference  Case Study  Doctoral Symposium  Tutorials and Workshops  Submissions deadlines have been extended (abstract: March 1st, full submission: March 2nd).\nAccepted papers will appear in the Springer LNCS proceedings.\n Submission Process Authors should consult Springer\u0026rsquo;s authors' guidelines and use their proceedings templates, either for LaTeX or for Word, for the preparation of their papers. Springer encourages authors to include their ORCIDs in their papers. In addition, the corresponding author of each paper, acting on behalf of all of the authors of that paper, must complete and sign a Consent-to-Publish form. The corresponding author signing the copyright form should match the corresponding author marked on the paper. Once the files have been sent to Springer, changes relating to the authorship of the papers cannot be made.\nAuthors interested in contributing to ABZ 2025 in Open Access or Open Choice should refer to the corresponding\nSubmit contribution\nvia easychair\n Springer webpage.\n","date":1726527600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"9f6edfb151b8c8783d60ffe10c62aa19","permalink":"/site/2025/calls/","publishdate":"2024-09-17T00:00:00+01:00","relpermalink":"/site/2025/calls/","section":"site","summary":"Call for papers The ABZ conference is dedicated to the cross-fertilization of state-based and machine-based formal methods, like Abstract State Machines (ASM), Alloy, B, TLA, VDM and Z, that share a common conceptual foundation and are widely used in both academia and industry for the design and analysis of hardware and software systems.","tags":null,"title":"ABZ 2025 – 11th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Case Study: Safety Controller for Autonomous Driving - Call for Papers As successfully practiced in previous editions of ABZ, the 11th edition of ABZ will include again special sessions dedicated to a shared real-life case study.\nThe objective of this session is to enrich the set of case studies ( https://abz-conf.org/case-studies/) developed with Rigorous State Based Methods with a practical and real-life case study. Its goal is also cross-fertilisation, enabling practitioners of the individual formal methods to better understand each other.\nThe case study is about a safety controller for autonomous driving on a highway. The description contains two variations of the case study. First, in the simpler setting, we just consider a single-lane highway where each vehicle can accelerate and brake. The goal is to keep a safe distance to the preceding car. Second, we consider a multi-lane highway where each vehicle can also change lanes.\nThe challenge is to model the system and its environment, and to derive assumptions and model a controller for which the safety can be guaranteed. The challenge is also to present the safety case in such a way that it is convincing to readers not entirely familiar with the formal method employed.\nThe case study is designed such that the formal model can be used as a safety shield within a highway simulation environment. We provide pre-trained unsafe AI agents, which can be used to experiment with. This part of the case study is optional.\n All the pdf versions of the specification document are available here (we keep track of all the changes in the documents): https://github.com/hhu-stups/abz2025_casestudy_autonomous_driving/tree/main/case_study. The current version is v3 of the specification document.\nAll the questions and doubts can be discussed here: https://github.com/hhu-stups/abz2025_casestudy_autonomous_driving/issues\nIf you have any question/comment on the case study, you can contact:\n  Fabian Vu, Heinrich-Heine-Universität, Germany  ABZ 2025 invites:  Case study papers: Full papers reporting on the experiments conducted with any of the state based techniques in the scope of ABZ 2025 case study. A paper of no more than 16 pages (excluding references) in LNCS format is expected and will be reviewed.   Accepted papers will appear in the Springer LNCS proceedings.\nSubmission Process Authors should consult Springer\u0026rsquo;s authors' guidelines and use their proceedings templates, either for LaTeX or for Word, for the preparation of their papers. Springer encourages authors to include their ORCIDs in their papers. In addition, the corresponding author of each paper, acting on behalf of all of the authors of that paper, must complete and sign a Consent-to-Publish form. The corresponding author signing the copyright form should match the corresponding author marked on the paper. Once the files have been sent to Springer, changes relating to the authorship of the papers cannot be made.\nAuthors interested in contributing to ABZ 2025 in Open Access or Open Choice should refer to the corresponding Springer webpage.\nSubmit contribution\nvia easychair\nThe page limit (including references and all appendices) for the final version is 18 pages for case study papers.\nImportant Dates Submissions deadlines have been extended:\n         Abstract submission: March 1, 2025 AOE   Paper submission: March 2, 2025 AOE   Notification: March 29, 2025   Final version: April 9, 2025    ","date":1726527600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"89b77a1578677c6a393d68879f1c038c","permalink":"/site/2025/casestudy/","publishdate":"2024-09-17T00:00:00+01:00","relpermalink":"/site/2025/casestudy/","section":"site","summary":"Case Study: Safety Controller for Autonomous Driving - Call for Papers As successfully practiced in previous editions of ABZ, the 11th edition of ABZ will include again special sessions dedicated to a shared real-life case study.","tags":null,"title":"ABZ 2025 – 11th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Doctoral Symposium - Call for Papers The ABZ PhD Symposium is an international forum for PhD students studying all areas related to state based formal methods for software and system development.\nThis forum is a good opportunity to\n bring together PhD students and established and known researchers of the state based formal methods community, provide PhD students with fruitful feedback and advice on their research approach, enable PhD students to interact with other PhD students and to stimulate exchange of ideas suggestions and experiences among participants, provide PhD students an opportunity to present, share and discuss their research in a constructive and critical atmosphere.  We seek PhD students who have either determined the direction of their thesis research (probably with some preliminary results already published), but who still have substantial work to complete, or PhD student participants who are in the early stages of their dissertations. It is not required to have a paper accepted for the main conference in order to participate in the ABZ 2025 Doctoral Symposium.\nABZ 2025 invites:  Contribution to doctoral symposium: This is an excellent opportunity for PhD students to present their ongoing work and receive valuable feedback from the ABZ community. A paper of no more than 4 pages (excluding references) in LNCS format is expected and will be reviewed.  Preferably, submissions should include\n Title of the paper and the author name Problem statement, motivations, and progress Current development and related work Proposed solutions, approach and methodology, and their significance Current results and assessement Future work   Accepted papers will be published in the Springer LNCS proceedings.\nSubmission Process Authors should consult Springer\u0026rsquo;s authors' guidelines and use their proceedings templates, either for LaTeX or for Word, for the preparation of their papers.Springer encourages authors to include their ORCIDs in their papers. In addition, the corresponding author of each paper, acting on behalf of all of the authors of that paper, must complete and sign a Consent-to-Publish form. The corresponding author signing the copyright form should match the corresponding author marked on the paper. Once the files have been sent to Springer, changes relating to the authorship of the papers cannot be made.\nAuthors interested in contributing to ABZ 2025 in Open Access or Open Choice should refer to the corresponding Springer webpage.\nSubmit contribution\nvia easychair\nImportant Dates          Paper submission: March 2, 2025 AOE   Notification: March 29, 2025   Final version: April 10, 2025    ","date":1726527600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f9309e5e2e3829341e513d9999309873","permalink":"/site/2025/doctoralsymposium/","publishdate":"2024-09-17T00:00:00+01:00","relpermalink":"/site/2025/doctoralsymposium/","section":"site","summary":"Doctoral Symposium - Call for Papers The ABZ PhD Symposium is an international forum for PhD students studying all areas related to state based formal methods for software and system development.","tags":null,"title":"ABZ 2025 – 11th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Important Dates Below are the important submission and notification dates. All submission dates anywhere on earth. Submissions deadlines have been extended!\nWorkshops/Tutorials Please contact the organisers directly as soon as possible for workshop or tutorial proposals. There is no special call for workshops or tutorials this year.\nCase Study Track          Abstract submission: March 1, 2025 AOE   Paper submission: March 2, 2025 AOE   Notification: March 29, 2025   Final version: April 9, 2025    Main Track          Abstract submission: March 1, 2025 AOE   Paper submission (including research/short/industry/journal-first papers): March 2, 2025 AOE   Notification: March 29, 2025   Final version: April 9, 2025    Doctoral Symposium          Paper submission: March 2, 2025 AOE   Notification: March 29, 2025   Final version: April 9, 2025    Conference          Workshops and Tutorials (Düsseldorf, Germany) June 10, 2025   ABZ 2025 Conference (Düsseldorf, Germany) June 11-13, 2025    ","date":1726527600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"57f9a41c4f629e4677b9e90794c2615a","permalink":"/site/2025/importantdates/","publishdate":"2024-09-17T00:00:00+01:00","relpermalink":"/site/2025/importantdates/","section":"site","summary":"Important Dates Below are the important submission and notification dates. All submission dates anywhere on earth. Submissions deadlines have been extended!\nWorkshops/Tutorials Please contact the organisers directly as soon as possible for workshop or tutorial proposals.","tags":null,"title":"ABZ 2025 – 11th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Keynote speakers Here it is the list of keynote speakers (in alphabetic order by name).\nMichael Butler @ University of Southampton       The role of abstraction and refinement in safety of intelligent systems\n  Abstract Rapid developments in artificial intelligence (AI) and robotics pose challenges to conventional methods of safety assurance. Machine learning is a very different programming approach to algorithm design, and notions of correctness for machine learning systems are still evolving. Increasing levels of autonomy being deployed in robotic systems means weaker concepts of control and predictability, increasing risk of accidents, and challenging conventional safety assurance methods. The role of abstraction/refinement formal methods, such as Event-B, is quite well established for traditional safety-critical systems, but it remains an open question whether and how such methods are applicable to systems with autonomy and learning-based control. Recent ideas on guaranteed safe AI from leading formal methods researchers propose the use of three components to ensure safe AI systems: a safety specification, a world model, and a verifier. At a high level this represents a systems approach to safety analysis which aligns well with common usage of Event-B in conventional system design. Constructing specifications and world (or environment) models for complex systems remains challenging, and abstraction and refinement approaches are aimed at addressing system complexity through incremental modelling and verification. Systematic approaches to analysis of (informal) requirements and of safety hazards also play in important role. We explore how existing work on hierarchical analysis and verification could be extended and relaxed to deal with autonomy and machine learning. The focus is on physical safety rather than broader issues of influences of AI on human behaviours and ethics. The ideas are influenced by collaboration with Asieh Salehi Fathabadi, Colin Snook, Dana Dghaym, Fahad Alotaibi, Haider Al-Shareefy, and Thai Son Hoang.   Short Bio Michael Butler is the Dean of Engineering and Physical Science at the University of Southampton. Michael has made many key theoretical and methodological contributions to the refinement calculus and to the B and Event-B formal methods. He has worked on tools such as ProB, U2B, csp2B and the Rodin toolset for Event-B.       Nils Jansen @ Ruhr-University Bochum       Neurosymbolic Learning Systems: Artificial Intelligence and Formal Methods\n  Abstract Artificial Intelligence (AI) has emerged as a disruptive force in our society. Increasing applications in healthcare, transport, military, and other fields underscore the critical need for a comprehensive understanding and the robustness of an AI’s decision-making process. Neurosymbolic AI aims to create robust AI systems by integrating neural and symbolic AI techniques. We highlight the role of formal methods in such techniques, serving as a rigorous and structured backbone for symbolic AI methods. Moreover, as a specific machine learning technique, we look at deep reinforcement learning (RL) with the promise that autonomous systems can learn to operate in unfamiliar environments with minimal human intervention. However, why haven’t most autonomous systems implemented RL yet? The answer is simple: there are significant unsolved challenges. One of the most important ones is obvious: Autonomous systems operate in unfamiliar, unknown environments. This lack of knowledge is called uncertainty. This talk will explore why making decisions that account for this uncertainty is essential to achieving trustworthiness, reliability, and safety in RL.   Short Bio Nils Jansen is Professor of Artificial Intelligence and Formal Methods at the Ruhr-University Bochum. He is also an Associate Professor with the Institute for Computing and Information Sciences at Radboud University Nijmegen, The Netherlands. Nils' mission is to increase the trustworthiness of Artificial Intelligence, bringing together the areas of machine learning and formal methods, in particular, formal verification. He tackles problems that are inspired by autonomous systems and planning problems in robotics. Nils Jansen has been awarded an ERC Starting Grant named DEUCE: Data-Driven Verification and Learning under Uncertainty.       Thierry Lecomte @ CLEARSY       Mathematical Proofs and Moving Trains: The Double Life of Atelier B\n  Abstract Atelier B has played a crucial role in ensuring the safety of critical systems for over three decades. This presentation explores the recent evolution of the Atelier B, from the last keynote in 2016 in Linz to its current, expanded role in system engineering across industries. We will revisit key milestones, such as the modeling of complex systems, the development and programming of the CLEARSY Safety Platform, and its use in educating students and engineers. The session will also showcase how the versatility of Atelier B has been harnessed to model, prove, and implement robust systems—from automated metros to industrial control. Through these advancements, Atelier B continues to shape the landscape of high-integrity software development, merging mathematical rigor with practical, real-world applications.   Short Bio With 30 years of experience in R\u0026D, Thierry Lecomte has worked on industrial projects in the automotive, healthcare, microelectronics, nuclear energy, railway and space industries. Today he is R\u0026D director of CLEARSY, a French SME specialized in the invention of safety critical systems, where he has worked since its creation in 2001. His current subjects of interest are safety and security co-engineering, safe artificial intelligence, and autonomous mobility - all related to formal methods.       ","date":1726527600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"06472306bd1d41d5372e9230f8950c02","permalink":"/site/2025/keynotes/","publishdate":"2024-09-17T00:00:00+01:00","relpermalink":"/site/2025/keynotes/","section":"site","summary":"Keynote speakers Here it is the list of keynote speakers (in alphabetic order by name).\nMichael Butler @ University of Southampton       The role of abstraction and refinement in safety of intelligent systems","tags":null,"title":"ABZ 2025 – 11th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Main ABZ Track - Call for Papers Contributions are solicited on all aspects of the theory and applications of ASMs, Alloy, B, TLA, VDM, Z and other state-based rigour approaches in software/hardware engineering, including the development of tools and industrial applications. The program spans from theoretical and methodological foundations to practical applications, emphasizing system engineering methods and tools that are distinguished by mathematical rigor and have proved to be industrially viable. The main goal of the conference is to contribute to the integration of accurate state- and machine-based system development methods, clarifying their commonalities and differences to better understand how to combine different approaches for accomplishing the various tasks in modeling, experimental validation, mathematical verification of reliable high-quality hardware/software systems. Although organized to host several formal methods in a single event, editorial control of the joint conference is vested in one integrated program committee.\nABZ 2025 invites:  Full research papers: Full research papers which have to be original, unpublished and not submitted elsewhere. A paper of no more than 16 pages (excluding references) in LNCS format is expected and will be reviewed. Short papers: Short papers to present and validate a work in progress or tool demonstrations. A paper of no more than 6 pages (excluding references) in LNCS format is expected and will be reviewed. Application in industry papers: Reporting on work or experiences on the application of state based formal methods in industry. A paper of no more than 8 pages (excluding references) in LNCS format is expected and will be reviewed. It is also an interesting option for industrial practitioners who sometimes face too many constraints to prepare a full paper. Journal-First papers: Journal-First papers summarize recently published papers in high-quality journals. The aim of journal-first papers is to further enrich the program of ABZ and to provide more visibility to an already published journal papers in the scope of the ABZ conference. An extended abstract of no more than 6 pages (excluding references) in LNCS format is expected and will be reviewed.  Important Dates Submissions deadlines have been extended:\n         Abstract submission: March 1, 2025 AOE   Paper submission (including research/short/industry/journal-first papers): March 2, 2025 AOE   Notification: March 29, 2025   Final version: April 9, 2025     Accepted papers will appear in the Springer LNCS proceedings. Page limits (including references and all appendices) for the final versions are 18 pages for full papers, 18 pages for case study papers, 8 pages for short papers and 5 pages for PhD symposium papers.\nSubmission Process Authors should consult Springer\u0026rsquo;s authors' guidelines and use their proceedings templates, either for LaTeX or for Word, for the preparation of their papers. Springer encourages authors to include their ORCIDs in their papers. In addition, the corresponding author of each paper, acting on behalf of all of the authors of that paper, must complete and sign a Consent-to-Publish form. The corresponding author signing the copyright form should match the corresponding author marked on the paper. Once the files have been sent to Springer, changes relating to the authorship of the papers cannot be made.\nAuthors interested in contributing to ABZ 2025 in Open Access or Open Choice should refer to the corresponding Springer webpage.\nSubmit contribution\nvia easychair\n","date":1726527600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"0d75a791d899571d2bd4c67cb8867649","permalink":"/site/2025/maintrack/","publishdate":"2024-09-17T00:00:00+01:00","relpermalink":"/site/2025/maintrack/","section":"site","summary":"Main ABZ Track - Call for Papers Contributions are solicited on all aspects of the theory and applications of ASMs, Alloy, B, TLA, VDM, Z and other state-based rigour approaches in software/hardware engineering, including the development of tools and industrial applications.","tags":null,"title":"ABZ 2025 – 11th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Workshop Program June, 10th TimeTalkTopic 12th Rodin User and Developer Workshop Session Chair: Asieh Salehi Fathabadi 09:00 - 09:25Rodin 3.10 and its plug-ins\nGuillaume Verdier, Laurent Voisin and Idir Ait-SadouneRodin Workshop 09:25 - 09:50Constructing an Event-B Model using Promise-Driven Modeling\nFelix SchaberRodin Workshop 09:50 - 10:15Verification of Event-B proofs throught their translation to Lambdapi\nAnne Grieu and Jean-Paul BodeveixRodin Workshop 10:15 - 10:40Interactive Trace Replay for Event-B Models\nJan Gruteser and Michael LeuschelRodin Workshop 10:40 - 11:05Interactive Proving with ProB\nKatharina Engels, Jan Gruteser and Michael LeuschelRodin Workshop 11:05 - 11:20Coffee break Session Chair: Neeraj Kumar Singh 11:20 - 11:45Minimal Bad Sequence on Quasi-Orders\nDominique CansellRodin Workshop 11:45 - 12:10Project Allocation with Event-B and ProB\nThai Son Hoang, Abdolbaghi Rezazadeh and Michael ButlerRodin Workshop 12:10 - 12:35EB[ASTD]: Meta-modelling framework for ASTD\nChristophe Chen, Peter Rivi\u0026egrave;re, Neeraj Kumar Singh, Guillaume Dupont, Yamine Ait Ameur and Marc FrappierRodin Workshop 12:35 - 13:00Extending EB4EB for Parameterised Events\nPeter Rivi\u0026egrave;re, Neeraj Kumar Singh, Guillaume Dupont, Yamine Ait AmeurRodin Workshop 13:00 - 14:00Lunch break Tutorial and Workshop: Exploring Formal Methods for Unmanned Aerial Vehicles 14:00 - 14:10Introduction\nMichael LeuschelDrone Workshop 14:10 - 14:35Tutorial: Real World-Execution of Drones with ProB\nFabian VuDrone Workshop Session Chair: Fabian Vu 14:35 - 15:00Introducing Feasible Safety to Autonomous Firefighting DroneWe are presenting the formalization of the safety function of an autonomous aerial firefighting drone, from its system level RoboSim modelling to its implementation in B on a safety computer. The safety function implies a return to the base in case of power shortage or loss of communication with the base. The presentation provides a bird view on the overall experiment with a focus on the technical analyses and low-level formal modeling.Thierry LecomteDrone Workshop 15:00 - 15:25Sharper Specs for Smarter Drones: Formalising Requirements with FRETIn this talk I will summarise our recent work on formalising requirements for an autonomous tilt-rotor drone in the ProVANT Emergentia research project. I will describe the process of formalising the natural-language requirements using NASA's Formal Requirements Elicitation Tool (FRET). I will present the progress made in each of the four sequential iterations of the requirements set as new information was elicited and incorporated.Marie FarrellDrone Workshop 15:25 - 15:55Coffee break Session Chair: Michael Leuschel/Fabian Vu 15:55 - 16:20Designing safe Cyber-Physical System with a proof and refinement based approachThis talk presents a comprehensive formal framework for the formal verification and validation of Cyber-Physical Systems (CPS) in Event-B. The idea is to propose a correct-by-construction way of modelling CPS by integrating continuous and communication aspects in Event-B models. Event-B's powerful refinement operation is extended to encompass continuous behaviours and leverage to propose a general methodology for CPS design.Guillaume DupontDrone Workshop 16:20 - 16:45Developing a Trustworthy Integrated Mission Management System for Autonomous Vehicles\nThai Son HoangDrone Workshop 16:45 - 17:00Discussion\nDrone Workshop 19:00 - 21:00Welcome Reception (conference venue) \nConference Program June, 11th TimeTalkTopic Session Chair: Michael Leuschel 09:00 - 9:15Welcome to ABZ and Tribute to Jean-Raymond AbrialJean-Raymond Abrial is the inventor of the B and Z formal methods. He sadly passed away on May 26th 2025. In this tribute we will honor him and his foundational work for computer science in general, and formal methods in particular.Tribute 09:15 - 10:15Mathematical Proofs and Moving Trains: The Double Life of Atelier BAtelier B has played a crucial role in ensuring the safety of critical systems for over three decades. This presentation explores the recent evolution of the Atelier B, from the last keynote in 2016 in Linz to its current, expanded role in system engineering across industries. We will revisit key milestones, such as the modeling of complex systems, the development and programming of the CLEARSY Safety Platform, and its use in educating students and engineers. The session will also showcase how the versatility of Atelier B has been harnessed to model, prove, and implement robust systems—from automated metros to industrial control. Through these advancements, Atelier B continues to shape the landscape of high-integrity software development, merging mathematical rigor with practical, real-world applications.Thierry Lecomte (Invited)Keynote 10:15 - 10:45Coffee break Session Chair: Yamine Ait Ameur 10:45 - 11:15Safely Encoding B Proof Obligations in SMT-LIBThis paper presents a sound encoding of B proof obligations in SMT-LIB 2.7, leveraging the recent extensions of SMT-LIB to higher-order logic. Our encoding improves upon previous approaches by eliminating uninterpreted membership predicates and by avoiding the complexity of encoding functions as relations. Through SMT-LIB's support for higher-order constructs, we achieve a more natural representation of B's set theory, while ensuring soundness of the translation. Preliminary experimental results are promising and indicate that our encoding allows solvers to efficiently handle certain proof obligations that previously failed.Vincent Tr\u0026eacute;latB 11:15 - 11:45Insider Threat Simulation Through Ant Colonies and ProBIn cyber-security, insider threats are particularly challenging to prevent because they are carried out by individuals who already have legitimate access to the information system (IS). In fact, insiders exploit their privileges to perform unauthorized actions. In previous works we proposed to tackle this problem via a backward symbolic search built on a formal B specification of the IS. Unfortunately this approach is not performant because many proof obligations and constraints must be solved interactively. In this paper, we provide a heuristic-based forward search based on the ant colony optimization algorithm (API); that we implemented using ProB. We show how the API algorithm can be used to search for malicious scenarios and we present the results of our experiments in comparison with other approaches.Akram Idani and Aur\u0026eacute;lien PepinB 11:45 - 12:15Translating Event-B models and development proofs to TLAThe work presented here is done in the context of the French ANR ICSPA (https://anr.fr/Projet-ANR-21-CE25-0015) project which aims at studying formal methods based on set theory (B, Event-B, TLA+). The first goal of this project concerns the verification of the proofs built with this systems through their translation to the pivot language LambdaPi. The second goal is the exchange of models and proofs between the considered set-based environments (Rodin, TLAPS, Atelier B). In this paper, we present our preliminary work were we translate Event-B models, proof obligations and their proofs to the TLA+ environment. The translation of models has already been studied in [HL16]. Here, we also generate the proof obligations linked to invariant preservation in TLA+. Lastly, we translate proof interactively built using the Rodin platform to the TLA+ proof language.Anne Grieu, Jean-Paul Bodeveix and Mamoun Filali-AmineB 12:15 - 13:30Lunch break Session Chair: Silvia Bonfanti 13:30 - 14:00Behavioural Theory of Reflective Parallel AlgorithmsWe develop a behavioural theory of reflective parallel algorithms (RAs), i.e. synchronous parallel algorithms that can modify their own behaviour. The theory comprises a set of postulates defining the class of RAs, an abstract machine model, and the proof that all RAs are captured by this machine model. RAs are sequential-time, parallel algorithms, where every state includes a representation of the algorithm in that state, thus enabling linguistic reflection. Bounded exploration is preserved using multiset comprehension terms as values. The model of reflective abstract state machines (rASMs) extends ASMs using extended states that include an updatable representation of the main ASM rule to be executed by the machine in that state.Klaus-Dieter Schewe and Flavio FerrarottiASM 14:00 - 14:30Using Symbolic Model Execution to Detect Vulnerabilities of Smart ContractsSmart contracts are programs that automate agreements between parties without the need for intermediaries. Embedded in a blockchain, they ensure transparency, immutability, and trustworthiness. While efficient, their immutable nature and reliance on internet-connected nodes make them susceptible to attacks. Identifying vulnerabilities before deployment is critical to mitigate risks, prevent catastrophic events, and avoid significant financial losses. This paper presents an approach to detecting vulnerable aspects of smart contracts written in Solidity and running on the Ethereum blockchain. Starting from an Abstract State Machine (ASM) model of a smart contract, the absence of certain vulnerabilities is expressed as model invariants. Symbolic execution of the ASM model is then used to reveal faulty execution paths resulting in invariant violations. In this way, vulnerable execution scenarios of the smart contract can be generated. As a proof of concept, we show the approach on a running case study, the \"Auction\" smart contract. Furthermore, we discuss the results of applying the technique to a number of Solidity smart contracts.Chiara Braghin, Giuseppe Del Castillo, Elvinia Riccobene and Simone ValentiniASM 14:30 - 15:00A reasoning and explicit algebraic theory for BBSL in Event-B: EB4BBSL frameworkAutomated Driving Systems (ADS) are major engineering and research topics, and ensuring the safety of such a critical system becomes crucial. Nevertheless, ADS are inherently complex, with many of their components, particularly sensors, relying on Artificial Intelligence. In addition to traditional environment data, ADS now processes object recognition outputs. To handle this new type of information, the Bounding Box Specification Language (BBSL) has been formalised to capture the relation between the abstraction of the image with the bounding box and the correct action to be performed. However, this language has a lightweight semantics, leading to multiple interpretations when no tools are available and its semantics remain implicit. In this paper, we propose a framework that fully formalises the language and allows the manipulation of the elements of the language as a first-class citizen in algebraic theory. We introduce three BBSL proof obligations and a mechanism to automatically generate and discharge the proof obligation. We also propose an extension of BBSL by explicitly formalising the semantics and behaviour of external interactions, such as importing information from outside sources. Furthermore, we also propose two instantiation mechanisms, deep-modelling and shallow-modelling, and we use an interpretation of BBSL in an Event-B machine. We demonstrate our approach in an example of BBSL specifications for the braking systems.Peter Riviere, Duong Dinh Tran, Takashi Tomita and Toshiaki AokiB 15:00 - 15:30Coffee break Session Chair: Marie Farrell 15:30 - 15:45Case Study: Safety Controller for Autonomous Driving on HighwaysThis requirements document presents the case study for the ABZ conference 2025. The case study is about a safety controller for autonomous driving on a highway. The description contains two variations of the case study. First, in the simpler setting, we just consider a single- lane highway where each vehicle can accelerate and brake. The goal is to keep a safe distance to the preceding car. Second, we consider a multi-lane highway where each vehicle can also change lanes.\nThe challenge is to model the system and its environment, derive assump- tions, and model a controller that guarantees safety. The challenge is also to present the safety case in such a way that it is convincing to readers not entirely familiar with the formal method employed.\nThe case study is designed so that the formal model can be used as a safety shield within a highway simulation environment. We provide pre-trained (unsafe) AI agents for experimental purposes. This part of the case study is optional.Michael Leuschel, Fabian Vu and Kristin RutenkolkCase Study 15:45 - 16:15Safety enforcement for autonomous driving on a simulated highway using Asmeta models@run.timeMission-critical systems, such as autonomous vehicles, operate in dynamic environments where unexpected events should be managed while guaranteeing safe behavior. Ensuring the safety of these complex systems is a major open challenge and requires robust mechanisms to enforce correct behavior during runtime. This paper illustrates a run-time safety enforcement framework for the output sanitization of an autonomous driving agent on a highway. The enforcement mechanism is based on a (formally validated and verified) Asmeta model representing the enforcement rules and used at run-time to eventually steer the driving agent to behave safely and avoid collisions. We demonstrate both efficacy and efficiency of the proposed enforcement approach by conducting an experimental evaluation. We connected our safety enforcer with the highway simulation environment and co-executed it with the pre-trained (unsafe) AI agents as provided by the ABZ 2025 case study. We consider the single-lane case with the safety requirement and one scenario of the multi-lane case about preferring the right-most lane.Andrea Bombarda, Silvia Bonfanti, Angelo Gargantini, Nico Pellegrinelli and Patrizia ScandurraCase Study 16:15 - 16:45Modelling and Analysis of Autonomous Driving with StarkThe Stark tool has been introduced for the the specification, analysis and verification of cyber-physical systems operating under uncertainty. In this paper, we apply it to the modelling and safety analysis of several instances of a highway environment with autonomous vehicles: one vehicle will be controlled by a Stark agent, while the others are modelled as part of a Stark environment. Given the unpredictable behaviour of the environment, we analyse some safety guarantees on the behaviour of the agent in terms of its robustness against perturbations. To this end, we make use of the temporal logic RobTL and statistical model checking. We then discuss the use of Stark for the validation of the behaviour of reinforcement learning agents in the highway environment with the temporal logic DisTL.Sebastian Betancourt and Valentina CastiglioniCase Study 16:45 - 17:00PhD Symposium Lightning Talk Session 18:00 - 20:00City Walk to the Altstadt (starting at the Tribe hotel) \nJune, 12th TimeTalkTopic Session Chair: Michael Leuschel 09:00 - 10:00The role of abstraction and refinement in safety of intelligent systemsRapid developments in artificial intelligence (AI) and robotics pose challenges to conventional methods of safety assurance. Machine learning is a very different programming approach to algorithm design, and notions of correctness for machine learning systems are still evolving. Increasing levels of autonomy being deployed in robotic systems means weaker concepts of control and predictability, increasing risk of accidents, and challenging conventional safety assurance methods. The role of abstraction/refinement formal methods, such as Event-B, is quite well established for traditional safety-critical systems, but it remains an open question whether and how such methods are applicable to systems with autonomy and learning-based control. Recent ideas on guaranteed safe AI from leading formal methods researchers propose the use of three components to ensure safe AI systems: a safety specification, a world model, and a verifier. At a high level this represents a systems approach to safety analysis which aligns well with common usage of Event-B in conventional system design. Constructing specifications and world (or environment) models for complex systems remains challenging, and abstraction and refinement approaches are aimed at addressing system complexity through incremental modelling and verification. Systematic approaches to analysis of (informal) requirements and of safety hazards also play in important role. We explore how existing work on hierarchical analysis and verification could be extended and relaxed to deal with autonomy and machine learning. The focus is on physical safety rather than broader issues of influences of AI on human behaviours and ethics.\nThe ideas are influenced by collaboration with Asieh Salehi Fathabadi, Colin Snook, Dana Dghaym, Fahad Alotaibi, Haider Al-Shareefy, and Thai Son Hoang.Michael Butler (Invited)Keynote 10:00 - 10:30Coffee break Session Chair: Marc Frappier 10:30 - 11:00State-Based Modelling with a Concept DSLConcept-based design is a new emerging formalism that uses concepts to facilitate the construction of modular and reusable software. Concepts are independent and generic units of functionality that can be composed to form complex applications. This work presents Conceptual, a domain-specific language for defining and composing concepts. A compiler from this language to Alloy6 is implemented, establishing a way to formally model and validate concept specifications of software. The practical application of Conceptual is examined qualitatively by leveraging Alloy’s analysis tools to reason about existing concept specifications in the literature.Nikolaj JakobsenAlloy 11:00 - 11:30On Writing Alloy Models: Metrics and a new DatasetAlloy is a modeling language that combines relational first-order logic and temporal logic while providing powerful automated analyses via the Alloy Analyzer. Recent efforts in tool development and teaching of Alloy have contributed the Alloy4Fun dataset enabling many analyses of fine-grained model editing histories. We present a smaller, but complementary dataset of similar editing granularity. While the Alloy4Fun dataset captures users filling in predefined predicates, our dataset is more diverse and users develop all parts of Alloy models including signatures, fields, facts, and commands. We illustrate the differences between the datasets, define a Halstead metric to measure the difficulty of models, and evaluate model revision histories from both datasets on various metrics.Soaibuzzaman, Salar Kalantari and Jan Oliver RingertAlloy 11:30 - 12:00On Quantitative Solution Iteration in QAlloyA key feature of model finding techniques allows users to enumerate and explore alternative solutions. However, it is challenging to guarantee that the generated instances are relevant to the user, representing effectively different scenarios. This challenge is exacerbated in quantitative modeling, where one must consider both the qualitative, structural part of a model, and the quantitative data on top of it. This results in a search space of possibly infinite candidate solutions, often infinitesimally similar to one another. Thus, research on instance enumeration in qualitative model finding is not directly applicable to the quantitative context, which requires more sophisticated methods to navigate the solution space effectively. The goal of this paper is to explore and showcase different, generic strategies for navigating quantitative solution spaces, aiming to generate instances that differ considerably from those previously seen, ensuring a larger coverage of the search space. Such generic strategies are implemented in QAlloy – a quantitative extension to Alloy – and are evaluated against several examples ranging, in particular, over the integer and fuzzy domains.Pedro Silva, Nuno Macedo and Jos\u0026eacute; N. OliveiraAlloy 12:00 - 13:30Lunch break Session Chair: Thierry Lecomte 13:30 - 14:00Proof Semantics of Railway InterlockingSafeCap is a modern toolkit for modelling, simulation and formal verification of railway networks, focused on fully-automated scalable safety verification of solid state interlocking (SSI) programs – a technology at the heart of many railway signalling solutions worldwide. In this paper, we elaborate on the formal foundations of the employed method by presenting the formal proof semantics of the modelled systems and the properties we are interested in verifying. We discuss the composite nature of this semantics, namely, interrelationships between signalling programs, signalling plan data, and the safety principles we need to ensure. The main focus is to formally justify derivation of a number of proof obligations that a specific interlocking solution must satisfy. The semantic definitions, properties, and inference rules are formalised with the proof assistant Coq.Linas Laibinis, Alexei Iliasov and Alexander RomanovskyRailway, Industry 14:00 - 14:30Towards an End-to-End Tool Chain for Traceable and Verifiable Railway Signalling SpecificationsSpecifications for safety-critical railway signaling systems have traditionally been expressed in natural language. Due to a lack of trace- ability features, these requirements are difficult to reason about and thus very resistant to change. Validation and verification processes of cyber- physical components based on such specifications require extensive man- ual review and are prone to inefficiencies. This paper describes our work towards a comprehensive methodology for deriving formal specifications for railway signaling and generating veri- fied software for it. Our method focuses on accessibility for domain ex- perts and industrial applicability. To this effect, we integrate established techniques into a unified tool chain comprising (1) fault tree analysis, (2) the goal-oriented requirements engineering method KAOS, and (3) formal modelling with AdaCore SPARK. We aim to facilitate end-to-end traceability of requirements through all artifacts. Currently, we are ap- plying our methodology to a case study that involves the specification of a new ETCS-based moving block signalling system.Frederic Reiter, Roman Wetenkamp, Robert Schmid, Richard Kretzschmar and Lukas Iffl\u0026auml;nderRailway, Industry 14:30 - 15:00Developing safe exception recovery mechanisms for CHERI capability hardware using UML-B formal analysisWhile detection of suspicious or erroneous CPU behaviour can be achieved by generic mechanisms such as memory safe processors, recovering safely from the resulting exceptions is an application specific problem. The challenge is to ensure that a complex closed system including controller and its environment remain in a safe state while undertaking abnormal state changes in the controller as part of its exception recovery process. Handling exceptional error events is a complex task requiring insight and domain expertise to ensure that potential abnormal conditions are identified and a recovery process is designed to return the system to a safe state. Exception handling relies on a notion of transactions in order to identify how the system can be systematically returned to a consistent state. Formal methods can address this complexity, by supporting the analysis of transactions and exception handling at the abstract design stages utilising mathematical modelling and proofs. Event-B is a state-based formal method for modelling and verifying the consistency of discrete systems, however it lacks explicit support for analysing the handling of exceptions. UML-B is a diagrammatic front-end for Event-B modelling which allows models to be constructed using class diagrams and state-machines. In this paper, we use UML-B state machines to support the modelling of normal behaviour, with a notion of consistency and augment this with a technique for modelling 'transactions' which may either complete to reach a consistent state or encounter exceptional errors that have to return the system to a consistent state despite the non-completion of the transaction. We also discuss an implementation of the modelled exception handling in the `C' programming language as a first stage towards automatic code generation of exception handlers.Colin Snook, Asieh Salehi Fathabadi, Thai Son Hoang, Robert Thorburn, Michael Butler, Leonardo Aniello and Vladimiro SassoneB 15:00 - 15:30Coffee break Session Chair: Guillaume Dupont 15:30 - 16:00Polychronous RSS in a Process-Algebraic Framework - A Case Study in Autonomous Driving SafetyThe ABZ 2025 conference case study focuses on developing a safety controller for autonomous highway driving. Within this context, we present a model of interacting agents that synchronize with a global state at specific points in time. These agents follow the differential equations of standard kinematics, operating within a physical environment. They can make non-deterministic decisions regarding acceleration and follow strategies to avoid collisions. We instantiate our model according to the Responsibility-Sensitive Safety (RSS) setting. By defining agent properties such as extensions, cycle times, and acceleration limits, we concentrate on the single-lane model specified in the case study requirements document. A key feature of our instantiation is the consideration of agents operating with independent clocks. We demonstrate that the safety invariants defined by RSS still hold even when agents have independent and mutually unknown clocks. This enhances the model’s realism and makes it well-suited for refinement into implementations using synchronous languages such as Lustre and SCADE, enabling the development of safe and certifiable systems for the automotive industry.Paolo Crisafulli, Adrien Durier, Benjamin Puyobro and Burkhart WolffCase Study 16:00 - 16:30Enhancing Decision-making Safety in Autonomous Driving Through Online Model CheckingWhile artificial intelligence (AI) offers promising approaches for developing intelligent autonomous driving (AD) agents, ensuring the safety of these AI-driven AD systems is a critical challenge. This paper proposes an approach to enhancing AD safety through the development of a safety shield based on online model checking. The safety shield acts as a real-time verification layer, monitoring and validating the actions proposed by the AI agent before execution. We demonstrate the practicality and efficiency of our approach through a highway driving case study with different AI agents trained. We construct a formal model of the driving environment, capturing the states and behaviors of the ego vehicle and surrounding traffic, and specify the safety requirements within this model. For each proposed action, we leverage Maude’s invariant model checker to determine if executing the action would violate the safety requirements. Our experimental results demonstrate the capability of online model checking to enhance the safety of AI-driven autonomous vehicles.Duong Dinh Tran, Akira Hasegawa, Peter Riviere, Takashi Tomita and Toshiaki AokiCase Study 16:30 - 17:00Modelling and Verification of Highway Car Control with KeYmaera XThis article presents a formal model and formal safety proofs for the ABZ’25 case study in differential dynamic logic (dL). The case study considers an autonomous car driving on a highway avoiding collisions with neighbouring cars. Using KeYmaera X’s dL implementation, we prove absence of collision on an infinite time horizon which ensures that safety is preserved independently of trip length. The safety guarantees hold for time-varying reaction time and brake force. Our dL model considers the single lane scenario with cars ahead or behind. We demonstrate that dL with its tools is a rigorous foundation for runtime monitoring, shielding, and neural network verification. Doing so sheds light on inconsistencies between the provided specification and simulation environment highway-env of the ABZ’25 study. We attempt to fix these inconsistencies and uncover numerous counterexamples which also indicate issues in the provided reinforcement learning environment.Enguerrand Prebet, Samuel Teuber and Andr\u0026eacute; PlatzerCase Study 19:00 - 24:00Conference Dinner (Tribe hotel) \nJune, 13th TimeTalkTopic Session Chair: Michael Leuschel 09:00 - 10:00Neurosymbolic Learning Systems: Artificial Intelligence and Formal MethodsArtificial Intelligence (AI) has emerged as a disruptive force in our society. Increasing applications in healthcare, transport, military, and other fields underscore the critical need for a comprehensive understanding and the robustness of an AI’s decision-making process. Neurosymbolic AI aims to create robust AI systems by integrating neural and symbolic AI techniques. We highlight the role of formal methods in such techniques, serving as a rigorous and structured backbone for symbolic AI methods.\nMoreover, as a specific machine learning technique, we look at deep reinforcement learning (RL) with the promise that autonomous systems can learn to operate in unfamiliar environments with minimal human intervention. However, why haven’t most autonomous systems implemented RL yet? The answer is simple: there are significant unsolved challenges. One of the most important ones is obvious: Autonomous systems operate in unfamiliar, unknown environments. This lack of knowledge is called uncertainty. This talk will explore why making decisions that account for this uncertainty is essential to achieving trustworthiness, reliability, and safety in RL.Nils Jansen (Invited)Keynote 10:00 - 10:30Coffee break Session Chair: Philipp K\u0026ouml;rner 10:30 - 11:00The Proved Construction of a Protocol with an ExampleThis paper present a complete proved development of a protocol inspired by the Lamport's Paxos protocol. Our protocol is not fault-tolerant. This work was carried out at the end of 2019.Dominique Cansell and Jean-Raymond AbrialB 11:00 - 11:30Model-Based Testing of Non-Deterministic SystemsTesting non-deterministic systems is challenging due to un- predictable behaviours arising from timing, concurrency, and random in- puts. This paper explores the application of model-based testing (MBT) to tackle these challenges, leveraging formal methods and tools to en- sure systematic test coverage. We employ ProB, a model checker for the B method, to analyse a formal model of the system under test (SUT) and generate test scenarios from the formal B model. As a proof of con- cept, we apply MBT to the TLS 1.3 protocol, a widely used complex cryptographic standard, and test one of its implementation using the BouncyCastle OpenSSL Java API. While the TLS handshake is primar- ily deterministic, it includes non-deterministic components like cipher selection and random value generation, making it an excellent candidate for evaluating MBT’s effectiveness. We present the design and logic of our proof of concept, showcasing its flexibility to support various mod- els and SUTs. This study demonstrates that combining formal meth- ods, non-deterministic analysis, and state-based testing can effectively address the challenges of non-deterministic systems, enabling improved testing strategies and greater system reliability.Alexander Onofrei, Marc Frappier and \u0026Eacute;milie BernardB 11:30 - 12:00Weakening Goals in Logical SpecificationsLogical specifications are widely used to represent software systems and their desired properties. Under system degradation or environmental changes, commonly seen in complex real-world robotic systems, these properties may no longer hold and so traditional verification methods will simply fail to construct a proof. However, weaker versions of these properties do still hold and can be useful for understanding the system’s behaviour in uncertain conditions, as well as aiding compositional verification. We present a counterexample-guided technique for iteratively weakening properties, apply it to propositional logic specifications, and discuss planned extensions to state-based representations.Ben M. AndrewDoctoral Symposium 12:00 - 12:30Formal modelling and reasoning on Assurance Cases expressed with GSN in Event-BAn Assurance Case (AC) is a structured argumentation for certification describing how industrial activities support system requirements. The principle of AC relies on a goal (requirement) decomposition strategy that recursively breaks down an abstract goal into more concrete sub-goals until evidences become directly relevant to substantiate the goal. The most widely used notation for AC is the Goal Structuring Notation (GSN), which provides a graphical representation of argument structures. Despite the advances in the definition of a methodology for developing AC using the GSN, establishing the soundness of ACs relies essentially on experts reviews. Indeed, the lack of rigorous semantics for the GSN hinders the application of formal methods to check the consistency of ACs. The objective of our work is to design a logical (i.e., proof-based) framework supporting the definition of formalised ACs, in order to assist system designers and certification authorities in building goal structures and check their consistency with respect to the formalised semantics and domain knowledge model formalising system specific concepts. The proposed framework will be grounded on the Event-B method and associated algebraic theories. The proposed framework shall define formal semantics for each GSN component (goal, evidence, assumption, strategy, etc. ) and formalise the implicit rationale behind goal decomposition. By leveraging a clear proof mechanism for the AC expressed in GSN, the impact analysis on argument modification will be controlled. Moreover, references to knowledge models and system models will be made explicit in order to enhance traceability.Christophe ChenDoctoral Symposium 12:30 - 14:00Lunch break and greetings \nAccepted Papers Main Track  Klaus-Dieter Schewe and Flavio Ferrarotti. Behavioural Theory of Reflective Parallel Algorithms. We develop a behavioural theory of reflective parallel algorithms (RAs), i.e. synchronous parallel algorithms that can modify their own behaviour. The theory comprises a set of postulates defining the class of RAs, an abstract machine model, and the proof that all RAs are captured by this machine model. RAs are sequential-time, parallel algorithms, where every state includes a representation of the algorithm in that state, thus enabling linguistic reflection. Bounded exploration is preserved using multiset comprehension terms as values. The model of reflective abstract state machines (rASMs) extends ASMs using extended states that include an updatable representation of the main ASM rule to be executed by the machine in that state.   Chiara Braghin, Giuseppe Del Castillo, Elvinia Riccobene and Simone Valentini. Using Symbolic Model Execution to Detect Vulnerabilities of Smart Contracts. Smart contracts are programs that automate agreements between parties without the need for intermediaries. Embedded in a blockchain, they ensure transparency, immutability, and trustworthiness. While efficient, their immutable nature and reliance on internet-connected nodes make them susceptible to attacks. Identifying vulnerabilities before deployment is critical to mitigate risks, prevent catastrophic events, and avoid significant financial losses. This paper presents an approach to detecting vulnerable aspects of smart contracts written in Solidity and running on the Ethereum blockchain. Starting from an Abstract State Machine (ASM) model of a smart contract, the absence of certain vulnerabilities is expressed as model invariants. Symbolic execution of the ASM model is then used to reveal faulty execution paths resulting in invariant violations. In this way, vulnerable execution scenarios of the smart contract can be generated. As a proof of concept, we show the approach on a running case study, the \"Auction\" smart contract. Furthermore, we discuss the results of applying the technique to a number of Solidity smart contracts.   Vincent Trélat. Safely Encoding B Proof Obligations in SMT-LIB. This paper presents a sound encoding of B proof obligations in SMT-LIB 2.7, leveraging the recent extensions of SMT-LIB to higher-order logic. Our encoding improves upon previous approaches by eliminating uninterpreted membership predicates and by avoiding the complexity of encoding functions as relations. Through SMT-LIB's support for higher-order constructs, we achieve a more natural representation of B's set theory, while ensuring soundness of the translation. Preliminary experimental results are promising and indicate that our encoding allows solvers to efficiently handle certain proof obligations that previously failed.   Nikolaj Jakobsen. State-Based Modelling with a Concept DSL. Concept-based design is a new emerging formalism that uses concepts to facilitate the construction of modular and reusable software. Concepts are independent and generic units of functionality that can be composed to form complex applications. This work presents Conceptual, a domain-specific language for defining and composing concepts. A compiler from this language to Alloy6 is implemented, establishing a way to formally model and validate concept specifications of software. The practical application of Conceptual is examined qualitatively by leveraging Alloy’s analysis tools to reason about existing concept specifications in the literature.   Soaibuzzaman, Salar Kalantari and Jan Oliver Ringert. On Writing Alloy Models: Metrics and a new Dataset. Alloy is a modeling language that combines relational first-order logic and temporal logic while providing powerful automated analyses via the Alloy Analyzer. Recent efforts in tool development and teaching of Alloy have contributed the Alloy4Fun dataset enabling many analyses of fine-grained model editing histories. We present a smaller, but complementary dataset of similar editing granularity. While the Alloy4Fun dataset captures users filling in predefined predicates, our dataset is more diverse and users develop all parts of Alloy models including signatures, fields, facts, and commands. We illustrate the differences between the datasets, define a Halstead metric to measure the difficulty of models, and evaluate model revision histories from both datasets on various metrics.   Linas Laibinis, Alexei Iliasov and Alexander Romanovsky. Proof Semantics of Railway Interlocking. SafeCap is a modern toolkit for modelling, simulation and formal verification of railway networks, focused on fully-automated scalable safety verification of solid state interlocking (SSI) programs – a technology at the heart of many railway signalling solutions worldwide. In this paper, we elaborate on the formal foundations of the employed method by presenting the formal proof semantics of the modelled systems and the properties we are interested in verifying. We discuss the composite nature of this semantics, namely, interrelationships between signalling programs, signalling plan data, and the safety principles we need to ensure. The main focus is to formally justify derivation of a number of proof obligations that a specific interlocking solution must satisfy. The semantic definitions, properties, and inference rules are formalised with the proof assistant Coq.   Frederic Reiter, Roman Wetenkamp, Robert Schmid, Richard Kretzschmar and Lukas Iffländer. Towards an End-to-End Tool Chain for Traceable and Verifiable Railway Signalling Specifications. Specifications for safety-critical railway signaling systems have traditionally been expressed in natural language. Due to a lack of trace- ability features, these requirements are difficult to reason about and thus very resistant to change. Validation and verification processes of cyber- physical components based on such specifications require extensive man- ual review and are prone to inefficiencies. This paper describes our work towards a comprehensive methodology for deriving formal specifications for railway signaling and generating veri- fied software for it. Our method focuses on accessibility for domain ex- perts and industrial applicability. To this effect, we integrate established techniques into a unified tool chain comprising (1) fault tree analysis, (2) the goal-oriented requirements engineering method KAOS, and (3) formal modelling with AdaCore SPARK. We aim to facilitate end-to-end traceability of requirements through all artifacts. Currently, we are ap- plying our methodology to a case study that involves the specification of a new ETCS-based moving block signalling system.   Pedro Silva, Nuno Macedo and José N. Oliveira. On Quantitative Solution Iteration in QAlloy. A key feature of model finding techniques allows users to enumerate and explore alternative solutions. However, it is challenging to guarantee that the generated instances are relevant to the user, representing effectively different scenarios. This challenge is exacerbated in quantitative modeling, where one must consider both the qualitative, structural part of a model, and the quantitative data on top of it. This results in a search space of possibly infinite candidate solutions, often infinitesimally similar to one another. Thus, research on instance enumeration in qualitative model finding is not directly applicable to the quantitative context, which requires more sophisticated methods to navigate the solution space effectively. The goal of this paper is to explore and showcase different, generic strategies for navigating quantitative solution spaces, aiming to generate instances that differ considerably from those previously seen, ensuring a larger coverage of the search space. Such generic strategies are implemented in QAlloy – a quantitative extension to Alloy – and are evaluated against several examples ranging, in particular, over the integer and fuzzy domains.   Peter Riviere, Duong Dinh Tran, Takashi Tomita and Toshiaki Aoki. A reasoning and explicit algebraic theory for BBSL in Event-B: EB4BBSL framework. Automated Driving Systems (ADS) are major engineering and research topics, and ensuring the safety of such a critical system becomes crucial. Nevertheless, ADS are inherently complex, with many of their components, particularly sensors, relying on Artificial Intelligence. In addition to traditional environment data, ADS now processes object recognition outputs. To handle this new type of information, the Bounding Box Specification Language (BBSL) has been formalised to capture the relation between the abstraction of the image with the bounding box and the correct action to be performed. However, this language has a lightweight semantics, leading to multiple interpretations when no tools are available and its semantics remain implicit. In this paper, we propose a framework that fully formalises the language and allows the manipulation of the elements of the language as a first-class citizen in algebraic theory. We introduce three BBSL proof obligations and a mechanism to automatically generate and discharge the proof obligation. We also propose an extension of BBSL by explicitly formalising the semantics and behaviour of external interactions, such as importing information from outside sources. Furthermore, we also propose two instantiation mechanisms, deep-modelling and shallow-modelling, and we use an interpretation of BBSL in an Event-B machine. We demonstrate our approach in an example of BBSL specifications for the braking systems.   Anne Grieu, Jean-Paul Bodeveix and Mamoun Filali-Amine. Translating Event-B models and development proofs to TLA. The work presented here is done in the context of the French ANR ICSPA (https://anr.fr/Projet-ANR-21-CE25-0015) project which aims at studying formal methods based on set theory (B, Event-B, TLA+). The first goal of this project concerns the verification of the proofs built with this systems through their translation to the pivot language LambdaPi. The second goal is the exchange of models and proofs between the considered set-based environments (Rodin, TLAPS, Atelier B). In this paper, we present our preliminary work were we translate Event-B models, proof obligations and their proofs to the TLA+ environment. The translation of models has already been studied in [HL16]. Here, we also generate the proof obligations linked to invariant preservation in TLA+. Lastly, we translate proof interactively built using the Rodin platform to the TLA+ proof language.   Dominique Cansell and Jean-Raymond Abrial. The Proved Construction of a Protocol with an Example. This paper present a complete proved development of a protocol inspired by the Lamport's Paxos protocol. Our protocol is not fault-tolerant. This work was carried out at the end of 2019.   Akram Idani and Aurélien Pepin. Insider Threat Simulation Through Ant Colonies and ProB. In cyber-security, insider threats are particularly challenging to prevent because they are carried out by individuals who already have legitimate access to the information system (IS). In fact, insiders exploit their privileges to perform unauthorized actions. In previous works we proposed to tackle this problem via a backward symbolic search built on a formal B specification of the IS. Unfortunately this approach is not performant because many proof obligations and constraints must be solved interactively. In this paper, we provide a heuristic-based forward search based on the ant colony optimization algorithm (API); that we implemented using ProB. We show how the API algorithm can be used to search for malicious scenarios and we present the results of our experiments in comparison with other approaches.   Alexander Onofrei, Marc Frappier and Émilie Bernard. Model-Based Testing of Non-Deterministic Systems. Testing non-deterministic systems is challenging due to un- predictable behaviours arising from timing, concurrency, and random in- puts. This paper explores the application of model-based testing (MBT) to tackle these challenges, leveraging formal methods and tools to en- sure systematic test coverage. We employ ProB, a model checker for the B method, to analyse a formal model of the system under test (SUT) and generate test scenarios from the formal B model. As a proof of con- cept, we apply MBT to the TLS 1.3 protocol, a widely used complex cryptographic standard, and test one of its implementation using the BouncyCastle OpenSSL Java API. While the TLS handshake is primar- ily deterministic, it includes non-deterministic components like cipher selection and random value generation, making it an excellent candidate for evaluating MBT’s effectiveness. We present the design and logic of our proof of concept, showcasing its flexibility to support various mod- els and SUTs. This study demonstrates that combining formal meth- ods, non-deterministic analysis, and state-based testing can effectively address the challenges of non-deterministic systems, enabling improved testing strategies and greater system reliability.   Colin Snook, Asieh Salehi Fathabadi, Thai Son Hoang, Robert Thorburn, Michael Butler, Leonardo Aniello and Vladimiro Sassone. Developing safe exception recovery mechanisms for CHERI capability hardware using UML-B formal analysis. While detection of suspicious or erroneous CPU behaviour can be achieved by generic mechanisms such as memory safe processors, recovering safely from the resulting exceptions is an application specific problem. The challenge is to ensure that a complex closed system including controller and its environment remain in a safe state while undertaking abnormal state changes in the controller as part of its exception recovery process. Handling exceptional error events is a complex task requiring insight and domain expertise to ensure that potential abnormal conditions are identified and a recovery process is designed to return the system to a safe state. Exception handling relies on a notion of transactions in order to identify how the system can be systematically returned to a consistent state. Formal methods can address this complexity, by supporting the analysis of transactions and exception handling at the abstract design stages utilising mathematical modelling and proofs. Event-B is a state-based formal method for modelling and verifying the consistency of discrete systems, however it lacks explicit support for analysing the handling of exceptions. UML-B is a diagrammatic front-end for Event-B modelling which allows models to be constructed using class diagrams and state-machines. In this paper, we use UML-B state machines to support the modelling of normal behaviour, with a notion of consistency and augment this with a technique for modelling 'transactions' which may either complete to reach a consistent state or encounter exceptional errors that have to return the system to a consistent state despite the non-completion of the transaction. We also discuss an implementation of the modelled exception handling in the `C' programming language as a first stage towards automatic code generation of exception handlers.   Ben M. Andrew. Weakening Goals in Logical Specifications. Logical specifications are widely used to represent software systems and their desired properties. Under system degradation or environmental changes, commonly seen in complex real-world robotic systems, these properties may no longer hold and so traditional verification methods will simply fail to construct a proof. However, weaker versions of these properties do still hold and can be useful for understanding the system’s behaviour in uncertain conditions, as well as aiding compositional verification. We present a counterexample-guided technique for iteratively weakening properties, apply it to propositional logic specifications, and discuss planned extensions to state-based representations.   Christophe Chen. Formal modelling and reasoning on Assurance Cases expressed with GSN in Event-B. An Assurance Case (AC) is a structured argumentation for certification describing how industrial activities support system requirements. The principle of AC relies on a goal (requirement) decomposition strategy that recursively breaks down an abstract goal into more concrete sub-goals until evidences become directly relevant to substantiate the goal. The most widely used notation for AC is the Goal Structuring Notation (GSN), which provides a graphical representation of argument structures. Despite the advances in the definition of a methodology for developing AC using the GSN, establishing the soundness of ACs relies essentially on experts reviews. Indeed, the lack of rigorous semantics for the GSN hinders the application of formal methods to check the consistency of ACs. The objective of our work is to design a logical (i.e., proof-based) framework supporting the definition of formalised ACs, in order to assist system designers and certification authorities in building goal structures and check their consistency with respect to the formalised semantics and domain knowledge model formalising system specific concepts. The proposed framework will be grounded on the Event-B method and associated algebraic theories. The proposed framework shall define formal semantics for each GSN component (goal, evidence, assumption, strategy, etc. ) and formalise the implicit rationale behind goal decomposition. By leveraging a clear proof mechanism for the AC expressed in GSN, the impact analysis on argument modification will be controlled. Moreover, references to knowledge models and system models will be made explicit in order to enhance traceability.  Case Study  Andrea Bombarda, Silvia Bonfanti, Angelo Gargantini, Nico Pellegrinelli and Patrizia Scandurra. Safety enforcement for autonomous driving on a simulated highway using Asmeta models@run.time. Mission-critical systems, such as autonomous vehicles, operate in dynamic environments where unexpected events should be managed while guaranteeing safe behavior. Ensuring the safety of these complex systems is a major open challenge and requires robust mechanisms to enforce correct behavior during runtime. This paper illustrates a run-time safety enforcement framework for the output sanitization of an autonomous driving agent on a highway. The enforcement mechanism is based on a (formally validated and verified) Asmeta model representing the enforcement rules and used at run-time to eventually steer the driving agent to behave safely and avoid collisions. We demonstrate both efficacy and efficiency of the proposed enforcement approach by conducting an experimental evaluation. We connected our safety enforcer with the highway simulation environment and co-executed it with the pre-trained (unsafe) AI agents as provided by the ABZ 2025 case study. We consider the single-lane case with the safety requirement and one scenario of the multi-lane case about preferring the right-most lane.   Duong Dinh Tran, Akira Hasegawa, Peter Riviere, Takashi Tomita and Toshiaki Aoki. Enhancing Decision-making Safety in Autonomous Driving Through Online Model Checking. While artificial intelligence (AI) offers promising approaches for developing intelligent autonomous driving (AD) agents, ensuring the safety of these AI-driven AD systems is a critical challenge. This paper proposes an approach to enhancing AD safety through the development of a safety shield based on online model checking. The safety shield acts as a real-time verification layer, monitoring and validating the actions proposed by the AI agent before execution. We demonstrate the practicality and efficiency of our approach through a highway driving case study with different AI agents trained. We construct a formal model of the driving environment, capturing the states and behaviors of the ego vehicle and surrounding traffic, and specify the safety requirements within this model. For each proposed action, we leverage Maude’s invariant model checker to determine if executing the action would violate the safety requirements. Our experimental results demonstrate the capability of online model checking to enhance the safety of AI-driven autonomous vehicles.   Enguerrand Prebet, Samuel Teuber and André Platzer. Modelling and Verification of Highway Car Control with KeYmaera X. This article presents a formal model and formal safety proofs for the ABZ’25 case study in differential dynamic logic (dL). The case study considers an autonomous car driving on a highway avoiding collisions with neighbouring cars. Using KeYmaera X’s dL implementation, we prove absence of collision on an infinite time horizon which ensures that safety is preserved independently of trip length. The safety guarantees hold for time-varying reaction time and brake force. Our dL model considers the single lane scenario with cars ahead or behind. We demonstrate that dL with its tools is a rigorous foundation for runtime monitoring, shielding, and neural network verification. Doing so sheds light on inconsistencies between the provided specification and simulation environment highway-env of the ABZ’25 study. We attempt to fix these inconsistencies and uncover numerous counterexamples which also indicate issues in the provided reinforcement learning environment.   Paolo Crisafulli, Adrien Durier, Benjamin Puyobro and Burkhart Wolff. Polychronous RSS in a Process-Algebraic Framework - A Case Study in Autonomous Driving Safety. The ABZ 2025 conference case study focuses on developing a safety controller for autonomous highway driving. Within this context, we present a model of interacting agents that synchronize with a global state at specific points in time. These agents follow the differential equations of standard kinematics, operating within a physical environment. They can make non-deterministic decisions regarding acceleration and follow strategies to avoid collisions. We instantiate our model according to the Responsibility-Sensitive Safety (RSS) setting. By defining agent properties such as extensions, cycle times, and acceleration limits, we concentrate on the single-lane model specified in the case study requirements document. A key feature of our instantiation is the consideration of agents operating with independent clocks. We demonstrate that the safety invariants defined by RSS still hold even when agents have independent and mutually unknown clocks. This enhances the model’s realism and makes it well-suited for refinement into implementations using synchronous languages such as Lustre and SCADE, enabling the development of safe and certifiable systems for the automotive industry.   Sebastian Betancourt and Valentina Castiglioni. On The Road Again (Safely): Modelling and Analysis of Autonomous Driving with Stark. The Stark tool has been introduced for the the specification, analysis and verification of cyber-physical systems operating under uncertainty. In this paper, we apply it to the modelling and safety analysis of several instances of a highway environment with autonomous vehicles: one vehicle will be controlled by a Stark agent, while the others are modelled as part of a Stark environment. Given the unpredictable behaviour of the environment, we analyse some safety guarantees on the behaviour of the agent in terms of its robustness against perturbations. To this end, we make use of the temporal logic RobTL and statistical model checking. We then discuss the use of Stark for the validation of the behaviour of reinforcement learning agents in the highway environment with the temporal logic DisTL.  ","date":1726527600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"11efbc8e8f85cf99398a083500459467","permalink":"/site/2025/program/","publishdate":"2024-09-17T00:00:00+01:00","relpermalink":"/site/2025/program/","section":"site","summary":"Workshop Program June, 10th TimeTalkTopic 12th Rodin User and Developer Workshop Session Chair: Asieh Salehi Fathabadi 09:00 - 09:25Rodin 3.10 and its plug-ins\nGuillaume Verdier, Laurent Voisin and Idir Ait-SadouneRodin Workshop 09:25 - 09:50Constructing an Event-B Model using Promise-Driven Modeling","tags":null,"title":"ABZ 2025 – 11th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Registration fees The full author registration fee will be 385 EUR. Note: if sufficient persons attend ABZ'2025 we will be able to lower the cost, and may even allow you to only pay for actual days attended.\nFull registration will include: coffee breaks, lunch for Tuesday-Friday, a reception dinner on Tuesday and a conference dinner on Thursday. The registration fees will be invoiced by the Hotel Tribe Düsseldorf on site. You can either pay in cash, via EC card or via credit card. Unfortunately, the hotel does not offer advance payment options or advanced billing.\nIn addition you can book rooms at the guaranteed rate of 95 EUR per night (for regular-sized rooms). Please book rooms direct with the hotel, see our Accommodation page. You can also book rooms at the Tribe hotel via other platforms or you can stay in another hotel if you prefer.\nAuthor Registration Author Registration Link (by Email) — Please register by 23 May.\nRegular Registration Regular Registration Link (by Email) — Please register by 23 May.\nAuthor Policy At least one “Author Registration” per paper accepted is required.\nStudent Policy We will (later) offer student rates at cost, 331 EUR for the whole event.\nFor registrations at the student rate, a proof of student status – such as a confirmation of registration provided by the university or a confirmation letter by the PhD advisor - must be sent by email together with the registration email. The student rate is not available for author registrations.\nVisa Information If you need a visa for traveling to Germany, we can provide you with an invitation letter needed for obtaining the visa. You have to explicitly indicate it in the email when you send the payment receipt.\n","date":1726527600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"2d3ad9e933717e97abbc1a712d0139ee","permalink":"/site/2025/registration/","publishdate":"2024-09-17T00:00:00+01:00","relpermalink":"/site/2025/registration/","section":"site","summary":"Registration fees The full author registration fee will be 385 EUR. Note: if sufficient persons attend ABZ'2025 we will be able to lower the cost, and may even allow you to only pay for actual days attended.","tags":null,"title":"ABZ 2025 – 11th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Organization Program Chairs   Michael Leuschel, Heinrich-Heine-Universität, Germany  Fuyuki Ishikawa, National Institute of Informatics, Tokyo, Japan  Case Study Chairs   Fabian Vu, Heinrich-Heine-Universität, Germany  Doctoral Symposium Chairs   Asieh Salehi Fathabadi, University of Southampton, UK  Philipp Körner, Heinrich-Heine-Universität, Germany  Publicity/Social/Web Chairs   Jan Gruteser, Heinrich-Heine-Universität, Germany  Fabian Vu, Heinrich-Heine-Universität, Germany  Local Chair   Michael Leuschel, Heinrich-Heine-Universität, Germany  Registration Chair  Claudia Kiometzis, Heinrich-Heine-Universität, Germany  Program Committee  Yamine Ait Ameur, ENSEEIHT, France Toshiaki Aoki, JAIST, Japan Paolo Arcaini, National Institute of Informatics, Japan Richard Banach, University of Manchester, UK Silvia Bonfanti, University of Bergramo, Italy Chiara Braghin, University of Milan, Italy Maximiliano Cristiá, Universidad Nacional de Rosario, Argentina Alcino Cunha, University of Minho, Portugal Catherine Dubois, ENSIIE, France Guillaume Dupont, ENSEEIHT, France Marie Farell, University of Manchester, UK Flavio Ferrarotti, Software Competence Centre Hagenberg, Austria Marc Frappier, Université de Sherbrooke, Canada Angelo Gargantini, University of Bergamo, Italy Uwe Glässer, Simon Fraser University, Canada Stefan Hallerstede, Aarhus University, Denmark Thai Son Hoang, University of Southampton, UK Akram Idani, Univ. Grenoble Alpes, VERIMAG lab, France Fuyuki Ishikawa, National Institute of Informatics, Japan Ensuk Kang, Carnegie Mellon University, USA Tsutomu Kobayashi, Japan Aerospace Exploration Agency, Japan Philipp Körner, University of Düsseldorf, Germany Igor Konnov, Austria Régine Laleau, Paris Est Creteil University, France Thierry Lecomte, CLEARSY, France Michael Leuschel, University of Düsseldorf, Germany Frederic Mallet, Université Côte d\u0026rsquo;Azur, France Atif Mashkoor, Johannes Kepler University, Austria Dominique Mery, Université de Lorraine, LORIA, France Stephan Merz, Inria, France Alexander Raschke, Ulm University, Germany Elvinia Riccobene, University of Milan, Italy Asieh\tSalehi Fathabadi, University of Southampton, UK Patrizia Scandurra, University of Bergamo, Italy Gerhard Schellhorn, Universitaet Augsburg, Germany Klaus-Dieter Schewe, Zhejiang University, China Emil Sekerinski, McMaster University, Canada Neeraj Singh, ENSEEIHT, France Maurice ter Beek, CNR, Italy Laurent Voisin, Systerel, France Hillel Wayne, USA  ","date":1726527600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f98c989a93c143d8b469984ba2ee258d","permalink":"/site/2025/team/","publishdate":"2024-09-17T00:00:00+01:00","relpermalink":"/site/2025/team/","section":"site","summary":"Organization Program Chairs   Michael Leuschel, Heinrich-Heine-Universität, Germany  Fuyuki Ishikawa, National Institute of Informatics, Tokyo, Japan  Case Study Chairs   Fabian Vu, Heinrich-Heine-Universität, Germany  Doctoral Symposium Chairs   Asieh Salehi Fathabadi, University of Southampton, UK  Philipp Körner, Heinrich-Heine-Universität, Germany  Publicity/Social/Web Chairs   Jan Gruteser, Heinrich-Heine-Universität, Germany  Fabian Vu, Heinrich-Heine-Universität, Germany  Local Chair   Michael Leuschel, Heinrich-Heine-Universität, Germany  Registration Chair  Claudia Kiometzis, Heinrich-Heine-Universität, Germany  Program Committee  Yamine Ait Ameur, ENSEEIHT, France Toshiaki Aoki, JAIST, Japan Paolo Arcaini, National Institute of Informatics, Japan Richard Banach, University of Manchester, UK Silvia Bonfanti, University of Bergramo, Italy Chiara Braghin, University of Milan, Italy Maximiliano Cristiá, Universidad Nacional de Rosario, Argentina Alcino Cunha, University of Minho, Portugal Catherine Dubois, ENSIIE, France Guillaume Dupont, ENSEEIHT, France Marie Farell, University of Manchester, UK Flavio Ferrarotti, Software Competence Centre Hagenberg, Austria Marc Frappier, Université de Sherbrooke, Canada Angelo Gargantini, University of Bergamo, Italy Uwe Glässer, Simon Fraser University, Canada Stefan Hallerstede, Aarhus University, Denmark Thai Son Hoang, University of Southampton, UK Akram Idani, Univ.","tags":null,"title":"ABZ 2025 – 11th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Venue: Tribe hotel Location  Tribe Düsseldorf Graf-Adolf-Strasse 81-87 40215 Düsseldorf Germany It is a three minute walk from the central station and thus ideal for everybody arriving by train or plane (as are direct S-Bahn train from the airport to the central station taking 14 minutes).\n How to get to Düsseldorf To Düsseldorf by Air Düsseldorf is quite convenient to reach as it has an international airport with direct connections to numerous cities.\n Düsseldorf International Airport is 6 km north-east of Düsseldorf\u0026rsquo;s city center. From there, regional and suburban trains will get you to the central station (Hauptbahnhof).\nAlternatively the Köln-Bonn Airport provides more destinations and many with budget airlines. The Köln Bonn Airport is located about 60 km south of Düsseldorf. By train you will need one hour to Düsseldorf Central Station. Available connections and timetables you can find here (enter Köln Bonn Airport as start and Düsseldorf Hbf as destination).\nInternational Airport Weeze is 80 km north of Düsseldorf and provides a wide range of low-cost flights. Weeze train station is only 5 minutes, Kevelaer train station 10 minutes away by bus. The local train RE10 to Düsseldorf runs Mondays to Fridays half-hourly, on weekends hourly. Connections and timetables you can find here (enter Weeze Terminal 1 as start and Düsseldorf Hbf as destination). From Düsseldorf Central Station, the Tribe hotel is just a few steps away.\nTo Düsseldorf by Rail Düsseldorf Central Station (Hauptbahnhof) is frequented by a regular train service throughout Germany since it is situated on the main north/south route between Munich, Frankfurt, Cologne, Dortmund, Hamburg. High speed trains (ICE, EC and IC) as well as regional trains will stop here. For rail travel information please visit the following website: int.bahn.de and enter as your destination \u0026lsquo;Düsseldorf Hbf\u0026rsquo;.\nParis can also be reached using the Eurostar train service from Düsseldorf.\nFrom Düsseldorf Central Station, the Tribe hotel is just a few steps away. You can either walk (300 m) or take tram lines 708 and 709 (one stop to Stresemannplatz) to the conference venue.\nLocal Transport Please note that 9 June is a public holiday and that there is a school holiday on 10 June. Some local transport services may run less frequently.\nThe city centre and the conference venue can be easily and quickly reached from the airport or the central station by bus, tram and subway trains. From Düsseldorf Central Station, the Tribe hotel is just a few steps away. You can either walk (300 m) or take tram lines 708 and 709 (one stop to Stresemannplatz) to the conference venue.\nFor travel in Düsseldorf with bus, tram or S-Bahn you will need a ticket with price level A:\n Single ticket: 3,60 € 4-trip ticket: 14,40 € 24 hour pass, 1 person: 8,80 €  Alternatively, you can use eezy.\nTickets are available from the ticket machines, several apps (e.g. Rheinbahn, VRR, DB Navigator), from Rheinbahn\u0026rsquo;s customer centres and from many sales partners. Single tickets can also be bought from the bus driver; in trams you can find ticket machines. It is not possible to buy a ticket in the S-Bahn, so be sure you have one before entering an S-Bahn. Most paper tickets have to be stamped before you commence your journey (the single tickets are usually already stamped).\nFor timetables and further information please refer to: www.vrr.de or www.rheinbahn.com.\n","date":1726527600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c4beae7bc37c2b7d9e24369b571c76b2","permalink":"/site/2025/venue/","publishdate":"2024-09-17T00:00:00+01:00","relpermalink":"/site/2025/venue/","section":"site","summary":"Venue: Tribe hotel Location  Tribe Düsseldorf Graf-Adolf-Strasse 81-87 40215 Düsseldorf Germany It is a three minute walk from the central station and thus ideal for everybody arriving by train or plane (as are direct S-Bahn train from the airport to the central station taking 14 minutes).","tags":null,"title":"ABZ 2025 – 11th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Workshops ABZ 2025 will host the following workshops (to be completed).\nRodin Workshop Event-B is a formal method for system-level modeling and analysis. The Rodin Platform is an Eclipse-based toolset for Event-B that provides effective support for modeling and automated proof. The platform is open source and is further extendable with plug-ins. A range of plug-ins have already been developed.\nThe purpose of this workshop is to bring together existing and potential users and developers of the Rodin toolset and to foster a broader community of Rodin users and developers.\nFor Rodin users, the workshop will provide an opportunity to share tool experiences and gain an understanding of ongoing tool developments. For plug-in developers, the workshop will provide an opportunity to showcase their tools and to achieve better coordination of tool development efforts.\nParticipants may attend or present both in person or remotely. If you are willing to participate remotely, please contact the organizers.\nFormat and Date The workshop will host presentations, with ample time for discussions.\nThe Rodin workshop will be held on June 10, 2025.\nSubmission If you are interested in giving a presentation at the Rodin workshop or have a plug-in to demonstrate, send a short abstract (1 or 2 pages PDF) to rodin@ecs.soton.ac.uk by 10th May. We will endeavour to accommodate all submissions that are clearly relevant to Rodin and Event-B. The proceedings of the workshop will be available as a technical report at the University of Southampton.\nAdditional details can be found at https://wiki.event-b.org/index.php/Rodin_Workshop_2025\nExclusive Opportunity: Special Issue Publication This year, we are excited to announce that a special issue is in the planning stages, and the selected high-quality submissions will be invited to contribute to a Special Issue. (Note: The finalisation of the special issue is currently underway.)\nOrganisers  Asieh Salehi Fathabadi, University of Southampton Laurent Voisin, Systerel Neeraj Kumar Singh, INPT-ENSEEIHT / IRIT, University of Toulouse Michael Leuschel, Heinrich-Heine-Universität, Germany Son Hoang, University of Southampton  Tutorial and Workshop: Exploring Formal Methods for Unmanned Aerial Vehicles Unmanned aerial vehicle, including drones and electric flying taxis, will be essential in the future, supporting areas like logistics, transportation, infrastructure monitoring, disaster response, defense, and surveillance. Accidents involving unmanned aerial vehicle could lead to serious threats to human lives, the environment, or cause significant financial damages. Therefore, ensuring the safety of unmanned aerial vehicle is crucial. This event focuses on using formal methods as a key approach to improve and ensure the safety of unmanned aerial vehicles.\nThis event will consist of two parts:\n a presentation and tutorial on using B and ProB in the classroom to enable students to write formal B models for high-level control of drones additional contributions by participants  Part I. Tutorial In an educational setting, we assigned students the task of selecting a drone-related problem (collision avoidance, exploring the environment, chasing another drone, etc.), modeling it with Classical B and Event-B, and formulating, validating, and verifying safety properties using ProB and Rodin. The formal models were then connected to Crazyflie drones for real-life demonstration. On the technical side, we enhanced ProB to enable communication with the drones, allowing us to read sensor data and control them. In the first part of the workshop, we present a tutorial on writing formal B models to control drones and present our experiences on teaching and getting the high-level control for drones to work.\nPart 2. Workshop In the second part, we invite other participants to give a presentation. Our goal is to provide a platform for discussing challenges, issues and solutions in using formal methods for unmanned aerial vehicles and robotic systems, and explore new research and teaching directions together.\nRelevant topics include, but are not limited to:\n Formal modeling, validation, and verification of aerial vehicles or robotic systems, including multi-agent systems Validation and verification of AI-driven systems Formal methods tool support: simulation, co-simulation, runtime monitoring, runtime verification, \u0026hellip; High-level control for aerial vehicles or robotic systems Application of formal methods to real-world aerial vehicles or robotic systems Teaching resources for formal models and aerial vehicles or robotic systems  If you are interested in giving a presentation at the workshop, we encourage you to send a short abstract (1 or 2 pages of PDF) to Fabian.Vu@hhu.de by May 10th 2025 (but ideally as soon as possible).\nWe already have the following invited talks confirmed:\nMarie Farrell. Sharper Specs for Smarter Drones: Formalising Requirements with FRET.\n Abstract: In this talk I will summarise our recent work on formalising requirements for an autonomous tilt-rotor drone in the ProVANT Emergentia research project. I will describe the process of formalising the natural-language requirements using NASA\u0026rsquo;s Formal Requirements Elicitation Tool (FRET). I will present the progress made in each of the four sequential iterations of the requirements set as new information was elicited and incorporated.  Thierry Lecomte. Introducing Feasible Safety to Autonomous Firefighting Drone.\n Abstract: We are presenting the formalization of the safety function of an autonomous aerial firefighting drone, from its system level RoboSim modelling to its implementation in B on a safety computer. The safety function implies a return to the base in case of power shortage or loss of communication with the base. The presentation provides a bird view on the overall experiment with a focus on the technical analyses and low-level formal modeling.  ","date":1726527600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"574e63915491fd6ae0d3b49d0a891b94","permalink":"/site/2025/workshop/","publishdate":"2024-09-17T00:00:00+01:00","relpermalink":"/site/2025/workshop/","section":"site","summary":"Workshops ABZ 2025 will host the following workshops (to be completed).\nRodin Workshop Event-B is a formal method for system-level modeling and analysis. The Rodin Platform is an Eclipse-based toolset for Event-B that provides effective support for modeling and automated proof.","tags":null,"title":"ABZ 2025 – 11th International Conference on Rigorous State Based Methods","type":"site"},{"authors":["Amel Mammar"],"categories":[],"content":"Abstract In this paper, we present a formal Event-B model of the Mechanical Lung Ventilator (MLV), the case study provided by the ABZ’24 conference. This system aims at helping patients maintain good breathing by providing mechanical ventilation. For this purpose, two modes are possible: Pressure Controlled Ventilation (PCV) and Pressure Support Ventilation (PSV). In the former mode, respiratory cycles are completely defined by the patient that is able to start breathing on its own. In the latter mode, the respiratory cycle is constant and controlled by the ventilator. Let us note that it is possible to move from a given mode to the other depending on the breathing capabilities of the patient under ventilation. In this paper, we illustrate the use of a correct-by-construction approach, the Event-B formal method and its refinement process, for the formal modeling and the verification of such a complex and critical system. The development of the formal models has been achieved under the Rodin platform that provides us with automatic and interactive provers used to verify the correctness of the models. We have also validated the built Event-B models using the ProB animator/model checker.\nDocument    var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_25.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{Mammar2024abz, author=\u0026quot;Mammar, Amel\u0026quot;, editor=\u0026quot;Bonfanti, Silvia and Gargantini, Angelo and Leuschel, Michael and Riccobene, Elvinia and Scandurra, Patrizia\u0026quot;, title=\u0026quot;An Event-B Model of a Mechanical Lung Ventilator\u0026quot;, booktitle=\u0026quot;Rigorous State-Based Methods\u0026quot;, year=\u0026quot;2024\u0026quot;, publisher=\u0026quot;Springer Nature Switzerland\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;307--323\u0026quot;, abstract=\u0026quot;In this paper, we present a formal Event-B model of the Mechanical Lung Ventilator (MLV), the case study provided by the ABZ'24 conference. This system aims at helping patients maintain good breathing by providing mechanical ventilation. For this purpose, two modes are possible: Pressure Controlled Ventilation (PCV) and Pressure Support Ventilation (PSV). In the former mode, respiratory cycles are completely defined by the patient that is able to start breathing on its own. In the latter mode, the respiratory cycle is constant and controlled by the ventilator. Let us note that it is possible to move from a given mode to the other depending on the breathing capabilities of the patient under ventilation. In this paper, we illustrate the use of a correct-by-construction approach, the Event-B formal method and its refinement process, for the formal modeling and the verification of such a complex and critical system. The development of the formal models has been achieved under the Rodin platform that provides us with automatic and interactive provers used to verify the correctness of the models. We have also validated the built Event-B models using the ProB animator/model checker.\u0026quot;, isbn=\u0026quot;978-3-031-63790-2\u0026quot; }  Sources   Model Archive: GitHub\n  Presentation: PDF\n  Used formal method: Event-B\nFor more information, please contact the authors\n  ","date":1719964800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"cf6693bf120550934673c563e36f9159","permalink":"/publication/mammar24/","publishdate":"2024-07-03T00:00:00Z","relpermalink":"/publication/mammar24/","section":"publication","summary":"Abstract In this paper, we present a formal Event-B model of the Mechanical Lung Ventilator (MLV), the case study provided by the ABZ’24 conference. This system aims at helping patients maintain good breathing by providing mechanical ventilation.","tags":["ABZ'24"],"title":"An Event-B Model of a Mechanical Lung Ventilator","type":"publication"},{"authors":["Marie Farrell","Matt Luckcuck","Rosemary Monahan","Conor Reynolds","Oisin Sheridan"],"categories":[],"content":"Abstract In this paper, we use NASA\u0026rsquo;s Formal Requirements Elicitation Tool (FRET) and the Event-B formal method to model and verify the requirements for the ABZ 2024 case study which is a mechanical lung ventilator. We use the FRET requirements to guide the development of a formal design model in Event-B. We provide details about the artefacts produced and reflect on our experience of using these tools in this case study. We focus on the functional and controller requirements for this system, as given in the case study documentation. This paper provides a first step towards using Event-B as part of a FRET-guided verification workflow in a large case study.\nDocument    var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_28.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-031-63790-2_28, author=\u0026quot;Farrell, Marie and Luckcuck, Matt and Monahan, Rosemary and Reynolds, Conor and Sheridan, Ois{\\'i}n\u0026quot;, editor=\u0026quot;Bonfanti, Silvia and Gargantini, Angelo and Leuschel, Michael and Riccobene, Elvinia and Scandurra, Patrizia\u0026quot;, title=\u0026quot;FRETting and Formal Modelling: A Mechanical Lung Ventilator\u0026quot;, booktitle=\u0026quot;Rigorous State-Based Methods\u0026quot;, year=\u0026quot;2024\u0026quot;, publisher=\u0026quot;Springer Nature Switzerland\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;360--383\u0026quot;, abstract=\u0026quot;In this paper, we use NASA's Formal Requirements Elicitation Tool (FRET) and the Event-B formal method to model and verify the requirements for the ABZ 2024 case study, the Mechanical Lung Ventilator. We use the FRET requirements to guide the development of a formal design model in Event-B. We provide details about the artefacts produced and reflect on our experience of using these tools in this case study. We focus on the Functional and Controller requirements for the system, as given in the case study documentation. This paper provides a first step towards using Event-B as part of a FRET-guided verification workflow in a large case study.\u0026quot;, isbn=\u0026quot;978-3-031-63790-2\u0026quot; }  Sources   Model Archive: GitHub\n  Presentation: PDF\n  Used formal method: Event-B\n  Resources and tools: FRET\nFor more information, please contact the authors\n  ","date":1719964800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"2c388ccc18e6360add0da6801fcfc22a","permalink":"/publication/farrelllmrs24/","publishdate":"2024-07-03T00:00:00Z","relpermalink":"/publication/farrelllmrs24/","section":"publication","summary":"Abstract In this paper, we use NASA\u0026rsquo;s Formal Requirements Elicitation Tool (FRET) and the Event-B formal method to model and verify the requirements for the ABZ 2024 case study which is a mechanical lung ventilator.","tags":["ABZ'24"],"title":"FRETting and Formal Modelling: A Mechanical Lung Ventilator","type":"publication"},{"authors":["Danny van Dortmont","Tim Willemse","Jeroen Keiren"],"categories":[],"content":"Abstract We model the Mechanical Lung Ventilator (MLV) in the process algebra mCRL2. The functional requirements of the MLV are formalised in the modal mu-calculus, and we use model checking to analyse whether these requirements hold true of our model. Our formalisation of the MLV and its requirements reveal a few subtle imprecisions and unclarities in the informal document and we analyse their impact.\nDocument    var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_27.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-031-63790-2_27, author=\u0026quot;van Dortmont, Danny and Keiren, Jeroen J. A. and Willemse, Tim A. C.\u0026quot;, editor=\u0026quot;Bonfanti, Silvia and Gargantini, Angelo and Leuschel, Michael and Riccobene, Elvinia and Scandurra, Patrizia\u0026quot;, title=\u0026quot;Modelling and Analysing a Mechanical Lung Ventilator in mCRL2\u0026quot;, booktitle=\u0026quot;Rigorous State-Based Methods\u0026quot;, year=\u0026quot;2024\u0026quot;, publisher=\u0026quot;Springer Nature Switzerland\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;341--359\u0026quot;, abstract=\u0026quot;We model the Mechanical Lung Ventilator (MLV) in the process algebra mCRL2. The functional requirements of the MLV are formalised in the modal {\\$}{\\$}{\\backslash}mu {\\$}{\\$}$\\mu$-calculus, and we use model checking to analyse whether these requirements hold true of our model. Our formalisation of the MLV and its requirements reveal a few subtle imprecisions and unclarities in the informal document and we analyse their impact.\u0026quot;, isbn=\u0026quot;978-3-031-63790-2\u0026quot; }  Sources   Model Archive: GitHub\n  Presentation: PDF\n  Used formal method: mCRL2\nFor more information, please contact the authors\n  ","date":1719964800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c914e3033dd9437baafe0709a316a221","permalink":"/publication/dortmontkw24/","publishdate":"2024-07-03T00:00:00Z","relpermalink":"/publication/dortmontkw24/","section":"publication","summary":"Abstract We model the Mechanical Lung Ventilator (MLV) in the process algebra mCRL2. The functional requirements of the MLV are formalised in the modal mu-calculus, and we use model checking to analyse whether these requirements hold true of our model.","tags":["ABZ'24"],"title":"Modelling and Analysing a Mechanical Lung Ventilator in mCRL2","type":"publication"},{"authors":["Alex Rodrigue Ndouna","Marc Frappier"],"categories":[],"content":"Abstract For the ABZ2024 conference, the proposed case study consists of modelling the adaptive outdoor mechanical lung ventilation system. The mechanical lung ventilator is intended to provide ventilation support for patients that are in intensive therapy and that require mechanical ventilation. The system under study is made up of two main software components: the graphical user interface (GUI) and the controller, this paper introduces a model for the controller part of the software system using Timed Algebraic State-Transition Diagrams (TASTD). TASTD is an extension of Algebraic State-Transition Diagrams (ASTD) providing timing operators to express timing constraints. The specification makes extensive use of the TASTD modularity capabilities, thanks to its algebraic approach, to model the behaviour of different sensors and actuators separately. We validate our specification using the cASTD compiler, which translates the TASTD specification into a C++ program. This generated program can be executed in simulation mode to manually update the system clock to check timing constraints. The model is executed on the test sequences provided with the case study. The advantages of having modularisation, orthogonality, abstraction, hierarchy, real-time, and graphical representation in one notation are highlighted with the proposed model.\nDocument    var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_26.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-031-63790-2_26, author=\u0026quot;Rodrigue Ndouna, Alex and Frappier, Marc\u0026quot;, editor=\u0026quot;Bonfanti, Silvia and Gargantini, Angelo and Leuschel, Michael and Riccobene, Elvinia and Scandurra, Patrizia\u0026quot;, title=\u0026quot;Modelling a Mechanical Lung Ventilation System Using TASTD\u0026quot;, booktitle=\u0026quot;Rigorous State-Based Methods\u0026quot;, year=\u0026quot;2024\u0026quot;, publisher=\u0026quot;Springer Nature Switzerland\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;324--340\u0026quot;, abstract=\u0026quot;For the ABZ2024 conference, the proposed case study consists of modelling an adaptive outdoor mechanical lung ventilation system. The mechanical lung ventilator is intended to provide ventilation support for patients that are in intensive therapy and that require mechanical ventilation. The system under study is made up of two main software components: the graphical user interface (GUI) and the controller, this paper introduces a model for the controller part of the software system using Timed Algebraic State-Transition Diagrams (TASTD). TASTD is an extension of Algebraic State-Transition Diagrams (ASTD) providing timing operators to express timing constraints. The specification makes extensive use of the TASTD modularity capabilities, thanks to its algebraic approach, to model the behaviour of different sensors and actuators separately. We validate our specification using the cASTD compiler, which translates the TASTD specification into a C++ program. This generated program can be executed in simulation mode to manually update the system clock to check timing constraints. The model is executed on the test sequences provided with the case study. The advantages of having modularisation, orthogonality, abstraction, hierarchy, real-time, and graphical representation in one notation are highlighted with the proposed model.\u0026quot;, isbn=\u0026quot;978-3-031-63790-2\u0026quot; }  Sources   Model Archive: GitHub\n  Presentation: PDF\n  Used formal method: TASTD\nFor more information, please contact the authors\n  ","date":1719964800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"389290aa20b8ae0f849765cc0e92f22b","permalink":"/publication/ndounaf24/","publishdate":"2024-07-03T00:00:00Z","relpermalink":"/publication/ndounaf24/","section":"publication","summary":"Abstract For the ABZ2024 conference, the proposed case study consists of modelling the adaptive outdoor mechanical lung ventilation system. The mechanical lung ventilator is intended to provide ventilation support for patients that are in intensive therapy and that require mechanical ventilation.","tags":["ABZ'24"],"title":"Modelling the mechanical lung ventilation system using TASTD","type":"publication"},{"authors":["Pavlo Tokariev","Fredric Mallet"],"categories":[],"content":"Abstract This case-study paper reports on our experience in modelling the mechanical lung ventilator using the Clock Constraint Specification Language (CCSL). CCSL captures the causal and temporal behaviour of a system by specifying constraints on logical clocks. Logical clocks are integer counters where the occurrence of an event, a tick, advances the counter and marks the advance in time. In this framework, chronometric clocks become logical clocks just with a special external meaning. Encoding chronometric clocks as counters may result in verification inefficiency and hard-to-read specifications. The paper introduces in the language some real-time constructs to directly encode phenomena like clock drift, skew and jitter. This makes patterns explicit in turn enabling optimizations. To realize these optimizations, we alter the internal symbolic representation of clock constraints. We also introduce an explicit notion of parameters and intervals. While for some constraints it mainly consists of adding syntactic sugar and pre-processing facilities, we believe it improves the readability. We illustrate the new constructs on the mechanical lung ventilator system. We start with a purely logical specification, we point at the sources of inefficiencies and then we discuss the benefits of the extensions on specific parts.\nDocument    var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_24.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-031-63790-2_24, author=\u0026quot;Tokariev, Pavlo and Mallet, Fr{\\'e}d{\\'e}ric\u0026quot;, editor=\u0026quot;Bonfanti, Silvia and Gargantini, Angelo and Leuschel, Michael and Riccobene, Elvinia and Scandurra, Patrizia\u0026quot;, title=\u0026quot;Real-Time CCSL: Application to the Mechanical Lung Ventilator\u0026quot;, booktitle=\u0026quot;Rigorous State-Based Methods\u0026quot;, year=\u0026quot;2024\u0026quot;, publisher=\u0026quot;Springer Nature Switzerland\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;289--306\u0026quot;, abstract=\u0026quot;This case-study paper reports on our experience in modelling the mechanical lung ventilator using the Clock Constraint Specification Language (CCSL). CCSL captures the causal and temporal behaviour of a system by specifying constraints on logical clocks. Logical clocks are integer counters where the occurrence of an event, a tick, advances the counter and marks the advance in time. In this framework, chronometric clocks become logical clocks just with a special external meaning. Encoding chronometric clocks as counters may result in verification inefficiency and hard-to-read specifications.\u0026quot;, isbn=\u0026quot;978-3-031-63790-2\u0026quot; }  Sources   Model Archive: GitHub\n  Presentation: PDF\n  Used formal method: CCSL\nFor more information, please contact the authors\n  ","date":1719964800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"1b930ec4007bf23b22de554e352d2740","permalink":"/publication/tokarievm24/","publishdate":"2024-07-03T00:00:00Z","relpermalink":"/publication/tokarievm24/","section":"publication","summary":"Abstract This case-study paper reports on our experience in modelling the mechanical lung ventilator using the Clock Constraint Specification Language (CCSL). CCSL captures the causal and temporal behaviour of a system by specifying constraints on logical clocks.","tags":["ABZ'24"],"title":"Real-Time CCSL: Application to the Mechanical Lung Ventilator","type":"publication"},{"authors":null,"categories":null,"content":"-- The ABZ conference is dedicated to the cross-fertilization of state-based and machine-based formal methods, like Abstract State Machines (ASM), Alloy, B, TLA, VDM and Z, that share a common conceptual foundation and are widely used in both academia and industry for the design and analysis of hardware and software systems. The conference aims for a vital exchange of knowledge and experience among the research communities around different formal methods.\n","date":1719273600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"44dcb91153d72ce2f838366b1ca1456e","permalink":"/2024/","publishdate":"2023-06-15T00:00:00Z","relpermalink":"/2024/","section":"event","summary":"10th International Conference on Rigorous State-Based Methods","tags":["ABZ'24"],"title":"ABZ 2024 (Bergamo, Italy)","type":"event"},{"authors":["Egon Börger","Vincenzo Gervasi"],"categories":[],"content":"Abstract We propose a definition of a class of reflective Abstract State Machines (ASMs) that extends the class of Parallel Guarded Assignments (PGAs), a subclass of single-agent sequential ASMs, and can serve as ground model for refinements of reflectivity in concrete programming languages.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_6.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BorgerG24, author = {Egon B{\\\u0026quot;{o}}rger and Vincenzo Gervasi}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {A Lean Reflective Abstract State Machine Definition}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {99--104}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_6}, doi = {10.1007/978-3-031-63790-2\\_6}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/BorgerG24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"1f79b25ddb94c44d538f46d5804ff0e2","permalink":"/publication/borgerg24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/borgerg24/","section":"publication","summary":"Abstract We propose a definition of a class of reflective Abstract State Machines (ASMs) that extends the class of Parallel Guarded Assignments (PGAs), a subclass of single-agent sequential ASMs, and can serve as ground model for refinements of reflectivity in concrete programming languages.","tags":["ABZ'24"],"title":"A Lean Reflective Abstract State Machine Definition","type":"publication"},{"authors":["Simone Valentini","Chiara Braghin","Elvinia Riccobene"],"categories":[],"content":"Abstract Blockchain has shown to be a versatile technology with applications ranging from financial services and supply chain management to healthcare, identity verification, etc. Thanks to the usage of smart contracts, blockchain can streamline and automate complex processes, eliminating the need for intermediaries and reducing administrative overhead. Smart contracts often handle valuable assets and execute critical functions, making them attractive targets for attackers. Thus, secure and reliable smart contracts are necessary. The long-term research we present aims to face the problem of safety and security assurance of smart contracts at design time. We are investigating the usage of the Abstract State Machine (ASM) formal method for the specification, validation, and verification of Ethereum smart contracts. We provide (i) a set of ASM libraries that simplify smart contracts modeling, (ii) models of malicious contracts to be used to check the robustness of a contract against some given attacks, (iii) patterns of properties to be checked to guarantee the operational correctness of the contract and its adherence to certain predefined properties.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_13.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ValentiniBR24, author = {Simone Valentini and Chiara Braghin and Elvinia Riccobene}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {A Modeling and Verification Framework for Ethereum Smart Contracts}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {201--207}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_13}, doi = {10.1007/978-3-031-63790-2\\_13}, timestamp = {Fri, 19 Jul 2024 23:15:46 +0200}, biburl = {https://dblp.org/rec/conf/zum/ValentiniBR24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e3a7fed318310cff47daffd39ffc8dcd","permalink":"/publication/valentinibr24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/valentinibr24/","section":"publication","summary":"Abstract Blockchain has shown to be a versatile technology with applications ranging from financial services and supply chain management to healthcare, identity verification, etc. Thanks to the usage of smart contracts, blockchain can streamline and automate complex processes, eliminating the need for intermediaries and reducing administrative overhead.","tags":["ABZ'24"],"title":"A Modeling and Verification Framework for Ethereum Smart Contracts","type":"publication"},{"authors":["Pedro Silva","Alcino Cunha","Nuno Macedo 0001","José N. Oliveira"],"categories":[],"content":"Abstract Humans are good at understanding subjective or vague statements which, however, are hard to express in classical logic. Fuzzy logic is an evolution of classical logic that can cope with vague terms by handling degrees of truth and not just the crisp values true and false. Logic is the formal basis of computing, enabling the formal design of systems supported by tools such as model checkers and theorem provers.This paper shows how a model checker such as Alloy can evolve to handle both classical and fuzzy logic, enabling the specification of high-level quantitative relational models in the fuzzy domain. In particular, the paper showcases how QAlloy-F (a conservative, general-purpose quantitative extension to standard Alloy) can be used to tackle fuzzy problems, namely in the context of validating the design of fuzzy controllers. The evaluation of QAlloy-F against examples taken from various classes of fuzzy case studies shows the approach to be feasible.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_4.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SilvaCMO24, author = {Pedro Silva and Alcino Cunha and Nuno Macedo and Jos{\\'{e}} N. Oliveira}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {Alloy Goes Fuzzy}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {61--79}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_4}, doi = {10.1007/978-3-031-63790-2\\_4}, timestamp = {Fri, 19 Jul 2024 23:15:46 +0200}, biburl = {https://dblp.org/rec/conf/zum/SilvaCMO24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"90aa921a4ef3d88f7f665d14cc626a79","permalink":"/publication/silvacmo24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/silvacmo24/","section":"publication","summary":"Abstract Humans are good at understanding subjective or vague statements which, however, are hard to express in classical logic. Fuzzy logic is an evolution of classical logic that can cope with vague terms by handling degrees of truth and not just the crisp values true and false.","tags":["ABZ'24"],"title":"Alloy Goes Fuzzy","type":"publication"},{"authors":["César Cornejo","María Marta Novaira","Sonia Permigiani","Nazareno Aguirre","Marcelo F. Frias","Simón Gutiérrez Brida","Germán Regis"],"categories":[],"content":"Abstract The use of SAT-based model finding for specification analysis is a crucial characteristic of Alloy, and a main reason of its success as a language for software specification. When a property of a specification is analyzed and deemed satisfiable, the user usually explores instances of the corresponding satisfiability, in order to understand the analysis outcome. The order in which instances are obtained during exploration can impact the efficiency and effectiveness with which specification analysis is carried out. This has been observed by various researchers, and different instance exploration strategies have been proposed, besides the standard SAT-solver driven strategy implemented with the Alloy Analyzer. In this paper, we concentrate on a strategy recently proposed in the literature, that we refer to as “field-value” driven, and has been implemented in the tool HawkEye. The tool allows the user to interactively guide instance exploration, by enforcing constraints requiring fields to contain (resp., do not contain) specific values. We design an experiment involving faulty Alloy specifications featuring combinations of over constraints and under constraints, and perform a user study to analyze the impact of this instance exploration strategy, in comparison with the standard SAT-solver driven exploration. The study focuses on HawkEye’s facility of interactive instance querying and how it may favor users, in its current realization, during Alloy model analysis and debugging. We perform an assessment of the evaluation, and summarize some of the reasons that may diminish the impact of field-value exploration in model finding.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_9.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{CornejoNPAFBR24, author = {C{\\'{e}}sar Cornejo and Mar{\\'{\\i}}a Marta Novaira and Sonia Permigiani and Nazareno Aguirre and Marcelo F. Frias and Sim{\\'{o}}n Guti{\\'{e}}rrez Brida and Germ{\\'{a}}n Regis}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {An Analysis of the Impact of Field-Value Instance Navigation in Alloy's Model Finding}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {141--159}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_9}, doi = {10.1007/978-3-031-63790-2\\_9}, timestamp = {Mon, 03 Mar 2025 21:25:08 +0100}, biburl = {https://dblp.org/rec/conf/zum/CornejoNPAFBR24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"ba2bed12a968d21811f3f884d2f1be02","permalink":"/publication/cornejonpafbr24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/cornejonpafbr24/","section":"publication","summary":"Abstract The use of SAT-based model finding for specification analysis is a crucial characteristic of Alloy, and a main reason of its success as a language for software specification. When a property of a specification is analyzed and deemed satisfiable, the user usually explores instances of the corresponding satisfiability, in order to understand the analysis outcome.","tags":["ABZ'24"],"title":"An Analysis of the Impact of Field-Value Instance Navigation in Alloy\u0026apos;s Model Finding","type":"publication"},{"authors":["Mehmet Said Nur Yagmahan","Abdolbaghi Rezazadeh","Michael J. Butler"],"categories":[],"content":"Abstract Cloud computing technologies help developers build scalable distributed apps. Serverless architecture, or Function as a Service (FaaS), which separates app businesses into multiple functions, is one of the cloud-native architectures that has gained popularity. Those functions can be developed and deployed independently without provisioning infrastructure. Despite the considerable advantages and increasing popularity of cloud-native apps, developers face many challenges when building their cloud-native applications. To ensure the robustness and security of cloud-native apps and protect crucial resources, the design and implementation of functions and associated access control systems play a pivotal role. In this paper, we have employed formal methods and tools to develop a set of patterns to help cloud-native application developers to design robust serverless apps. We have used Event-B and its associated toolset, Rodin, to construct these formal patterns and demonstrated how these patterns can be used in practical case studies.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_11.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{YagmahanRB24, author = {Mehmet Said Nur Yagmahan and Abdolbaghi Rezazadeh and Michael J. Butler}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {An Event-B Formal Model for Access Control and Resource Management of Serverless Apps}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {181--190}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_11}, doi = {10.1007/978-3-031-63790-2\\_11}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/YagmahanRB24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"1e379539986a2f71b2e7c900ec3138da","permalink":"/publication/yagmahanrb24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/yagmahanrb24/","section":"publication","summary":"Abstract Cloud computing technologies help developers build scalable distributed apps. Serverless architecture, or Function as a Service (FaaS), which separates app businesses into multiple functions, is one of the cloud-native architectures that has gained popularity.","tags":["ABZ'24"],"title":"An Event-B Formal Model for Access Control and Resource Management of Serverless Apps","type":"publication"},{"authors":["Asieh Salehi Fathabadi","Colin F. Snook","Thai Son Hoang","Robert Thorburn","Michael J. Butler","Leonardo Aniello","Vladimiro Sassone"],"categories":[],"content":"Abstract The design of exception handling is a complex task requiring insight and domain expertise to ensure that potential abnormal conditions are identified and a recovery process is designed to return the system to a safe state. Formal methods can address this complexity, by supporting the analysis of exception handling at the abstract design stages utilising mathematical modelling and proofs. Event-B is a state-based formal method for modelling and verifying the consistency of discrete systems. However it lacks explicit support for analysing the handling of exceptions. In this paper, we use UML-B state machines to support the modelling of normal behaviour assisting the identification and handling of exceptions. This is followed by verification of exception handler recovery mechanisms using the built-in model checker and provers of the Event-B tool-set.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_22.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{FathabadiSHTBAS24, author = {Asieh Salehi Fathabadi and Colin F. Snook and Thai Son Hoang and Robert Thorburn and Michael J. Butler and Leonardo Aniello and Vladimiro Sassone}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {Designing Exception Handling Using Event-B}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {270--277}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_22}, doi = {10.1007/978-3-031-63790-2\\_22}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/FathabadiSHTBAS24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"800f217dfd99ff4fe03c67b78b0d21d6","permalink":"/publication/fathabadishtbas24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/fathabadishtbas24/","section":"publication","summary":"Abstract The design of exception handling is a complex task requiring insight and domain expertise to ensure that potential abnormal conditions are identified and a recovery process is designed to return the system to a safe state.","tags":["ABZ'24"],"title":"Designing Exception Handling Using Event-B","type":"publication"},{"authors":["Benoît Ballenghien","Burkhart Wolff"],"categories":[],"content":"Abstract The proof assistant Isabelle/HOL is made available inside a flexible system framework allowing for logically safe extensions, which comprise both theories as well as implementations for code-generation, documentation, and specific support for a variety of formal methods. Following the techniques in [9] and the theoretical groundwork in [4], we show the major milestones for the implementation of a B-Tool and the resulting refinement method inside the Isabelle/HOL platform. The prototype HOL-B provides IDE support, documentation support, a theory for the Z-Mathematical Toolkit underlying the B-Method, and a generated denotational semantics for a B MACHINE specification implemented as a specification construct in Isabelle/HOL. Extended by more automated proof machinery geared to refinements, HOL-B can serve as a more portable, flexible and extensible tool for Event-B that may profit from the large Isabelle/HOL libraries providing Algebra and Analysis theories.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_18.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BallenghienW24, author = {Beno{\\^{\\i}}t Ballenghien and Burkhart Wolff}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {Event-B as {DSL} in Isabelle and {HOL} Experiences from a Prototype}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {241--247}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_18}, doi = {10.1007/978-3-031-63790-2\\_18}, timestamp = {Fri, 19 Jul 2024 23:15:46 +0200}, biburl = {https://dblp.org/rec/conf/zum/BallenghienW24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"18ee02cf4019ab9245033860be0555c9","permalink":"/publication/ballenghienw24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/ballenghienw24/","section":"publication","summary":"Abstract The proof assistant Isabelle/HOL is made available inside a flexible system framework allowing for logically safe extensions, which comprise both theories as well as implementations for code-generation, documentation, and specific support for a variety of formal methods.","tags":["ABZ'24"],"title":"Event-B as DSL in Isabelle and HOL Experiences from a Prototype","type":"publication"},{"authors":["Fahad Alotaibi","Thai Son Hoang","Asieh Salehi Fathabadi","Michael J. Butler"],"categories":[],"content":"Abstract In the design of autonomous systems, seamless integration with human operators is crucial, particularly when humans are considered as a fail-safe for intervening in hazardous situations. This study presents an Event-B intervention timing pattern designed to include human drivers’ responses when they act as fallback mechanisms in Self-Driving Vehicle (SDV) systems. The proposed pattern outlines specific timings for driver interventions following alerts from SDVs, offering a clear set of expectations and conditions for human drivers during these critical takeover instances. The usability of this pattern is demonstrated through a case study, highlighting its importance for situations that require interventions. Ultimately, it sheds light on the operational aspects of SDVs, ensuring a safe and orderly transition from automated to manual control.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_3.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{AlotaibiHFB24, author = {Fahad Alotaibi and Thai Son Hoang and Asieh Salehi Fathabadi and Michael J. Butler}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {Event-B Development of Modelling Human Intervention Request in Self-driving Vehicle Systems}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {43--60}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_3}, doi = {10.1007/978-3-031-63790-2\\_3}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/AlotaibiHFB24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"726e12fa3e0522306f20a6198ff9d0b6","permalink":"/publication/alotaibihfb24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/alotaibihfb24/","section":"publication","summary":"Abstract In the design of autonomous systems, seamless integration with human operators is crucial, particularly when humans are considered as a fail-safe for intervening in hazardous situations. This study presents an Event-B intervention timing pattern designed to include human drivers’ responses when they act as fallback mechanisms in Self-Driving Vehicle (SDV) systems.","tags":["ABZ'24"],"title":"Event-B Development of Modelling Human Intervention Request in Self-driving Vehicle Systems","type":"publication"},{"authors":["Maurice H. ter Beek"],"categories":[],"content":"Abstract ABZ and other state-based formal methods and tools are successfully applied to the development of safety-critical systems for decades now, in particular in the transport domain, without a single language or tool emerging as the dominant solution for system design. Formal methods are highly recommended by the current safety standards in the railway industry, but railway engineers often lack the knowledge to transform their semi-formal models into formal models, with a precise semantics, to serve as input to formal methods tools. We share the results of performing empirical studies in the railway domain, including usability analyses of formal methods tools involving railway practitioners. We discuss, in particular with respect to railway systems and their modelling, our experiences in applying rigorous state-based methods and tools to a variety of case studies, for which we interacted with a number of companies from the railway domain. We report on lessons learned from these experiences and provide pointers to drive future research towards facilitating further synergies between—on the one hand—researchers and developers of ABZ and other state-based formal methods and tools, and—on the other hand—practitioners from the railway industry.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_1.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Beek24, author = {Maurice H. ter Beek}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {Formal Methods and Tools Applied in the Railway Domain}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {3--21}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_1}, doi = {10.1007/978-3-031-63790-2\\_1}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/Beek24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"70d0dcccb03b8862e467205dfe0c0701","permalink":"/publication/beek24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/beek24/","section":"publication","summary":"Abstract ABZ and other state-based formal methods and tools are successfully applied to the development of safety-critical systems for decades now, in particular in the transport domain, without a single language or tool emerging as the dominant solution for system design.","tags":["ABZ'24"],"title":"Formal Methods and Tools Applied in the Railway Domain","type":"publication"},{"authors":["Saloni Sinha","Eunsuk Kang"],"categories":[],"content":"Abstract Apache Kafka is a distributed, fault-tolerant and highly available open-source technology that utilizes a publish-subscribe communication model to stream large volumes of data. It is widely being used in various domains such as finance, entertainment, online education, and e-commerce for real-time data processing and analytics. This paper demonstrates an application of Alloy 6—the latest version of Alloy with built-in temporal logic operators—to formal modeling and analysis of a complex distributed system like Kafka. The architecture and key operations of Kakfa are modeled, and its various properties, including fault-tolerance, data availability, service availability, consistency, and recoverability, are analyzed using the Alloy Analyzer. The result of the analysis provides insights into how Kafka maintains the properties that it claims to have, and the circumstances under which these properties may be violated.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_2.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SinhaK24, author = {Saloni Sinha and Eunsuk Kang}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {Formal Modeling and Analysis of Apache Kafka in Alloy 6}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {25--42}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_2}, doi = {10.1007/978-3-031-63790-2\\_2}, timestamp = {Thu, 27 Jun 2024 16:32:24 +0200}, biburl = {https://dblp.org/rec/conf/zum/SinhaK24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"4204908e699c10d5a88ae3580729273f","permalink":"/publication/sinhak24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/sinhak24/","section":"publication","summary":"Abstract Apache Kafka is a distributed, fault-tolerant and highly available open-source technology that utilizes a publish-subscribe communication model to stream large volumes of data. It is widely being used in various domains such as finance, entertainment, online education, and e-commerce for real-time data processing and analytics.","tags":["ABZ'24"],"title":"Formal Modeling and Analysis of Apache Kafka in Alloy 6","type":"publication"},{"authors":["Andrea Bombarda","Silvia Bonfanti","Angelo Gargantini"],"categories":[],"content":"Abstract Formal methods play a crucial role in modeling and quality assurance, but to be deployed on real systems, formal specifications need to be translated into implementation. Manually converting formal models into code poses challenges such as increased costs, limitations in specification reuse, and the potential for introducing errors. To overcome these limitations, Model-Driven Engineering (MDE) approaches enable developers to generate software code automatically. This paper proposes the Asmeta2Java tool for the automatic translation of formal Asmeta specifications into executable Java code. The designers start at an abstract level and perform refinement steps and verification activities. At the end, they automatically generates the code by applying the model-to-code transformation. Moreover, a process to validate and evaluate the transformation is presented.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_10.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BombardaBG24, author = {Andrea Bombarda and Silvia Bonfanti and Angelo Gargantini}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {From Concept to Code: Unveiling a Tool for Translating Abstract State Machines into Java Code}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {160--178}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_10}, doi = {10.1007/978-3-031-63790-2\\_10}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/BombardaBG24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"596dd3563aeedd59b2d3444c22878742","permalink":"/publication/bombardabg24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/bombardabg24/","section":"publication","summary":"Abstract Formal methods play a crucial role in modeling and quality assurance, but to be deployed on real systems, formal specifications need to be translated into implementation. Manually converting formal models into code poses challenges such as increased costs, limitations in specification reuse, and the potential for introducing errors.","tags":["ABZ'24"],"title":"From Concept to Code: Unveiling a Tool for Translating Abstract State Machines into Java Code","type":"publication"},{"authors":["Anne Grieu"],"categories":[],"content":"Abstract B, Event-B and TLA+ are modelling notations based on set theory. Dedukti/Lambdapi is a logical framework based on the (\\lambda \\Pi )-calculus modulo rewriting in which many theories and logics can be expressed. In the context of ICSPA (ANR project), Lambdapi will be used to exchange models and proofs between the set theory-based formal methods B, Event-B and TLA+. They will rely on the encoding of the respective set theories in Lambdapi. Our current work focuses on translating the mathematical language of Event-B and proof trees obtained with the Rodin platform for Event-B.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_29.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Grieu24, author = {Anne Grieu}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {From Event-B to Lambdapi}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {387--391}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_29}, doi = {10.1007/978-3-031-63790-2\\_29}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/Grieu24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"04af70e60ea179b10653916a79238ecb","permalink":"/publication/grieu24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/grieu24/","section":"publication","summary":"Abstract B, Event-B and TLA+ are modelling notations based on set theory. Dedukti/Lambdapi is a logical framework based on the (\\lambda \\Pi )-calculus modulo rewriting in which many theories and logics can be expressed.","tags":["ABZ'24"],"title":"From Event-B to Lambdapi","type":"publication"},{"authors":["Stefan Hallerstede"],"categories":[],"content":"Abstract Refinement of Event-B machines is based on changing internal variables to obtain different data representations. One approach is expressed only in terms of internal variables. In the extreme case it permits refining a machine by another by choosing the gluing invariant “true”. The other one is based on relating external variables that can be refined functionally, so that properties expressed in terms of external variables are preserved. In practice, the first approach is used and gluing invariants are suitably chosen to achieve a meaningful relationship between refined machines. The second approach is based on the idea of observing a machine in terms of its external variables. It is more complicated, restrictive and not commonly used. In this paper we propose a different approach to observing Event-B machines that is more constraining than the first approach but less complicated and restrictive than the second approach. We extend Event-B refinement by permitting introducing new events and eliminating old events. The concept of observation is made more flexible by permitting non-observation of certain states as well as observing sets of values related to a states. Although this complicates relating observed fixed points and traces of machines, the proof obligations remain uncomplicated.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_7.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Hallerstede24, author = {Stefan Hallerstede}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {Loose Observation in Event-B}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {105--122}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_7}, doi = {10.1007/978-3-031-63790-2\\_7}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/Hallerstede24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"61423ec86dfb0ebbe666dfd9cd3260b4","permalink":"/publication/hallerstede24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/hallerstede24/","section":"publication","summary":"Abstract Refinement of Event-B machines is based on changing internal variables to obtain different data representations. One approach is expressed only in terms of internal variables. In the extreme case it permits refining a machine by another by choosing the gluing invariant “true”.","tags":["ABZ'24"],"title":"Loose Observation in Event-B","type":"publication"},{"authors":["Julius Armbrüster","Philipp Körner"],"categories":[],"content":"Abstract Transforming models based on their textual representation is a cumbersome task. This is particularly the case for Event-B, where the predominant representation is a set of XML files. As a consequence, tool support is lacking, even for minor refactoring operations. The contribution of this paper extends the lisb library with a front and backend based on Event-B. The aim is to bring benefits, that have been demonstrated for classical B, such as an easily transformable data representation of formal specifications as well as creation of custom DSLs and tooling, to Event-B. We see great benefits of such a meta-programming approach for formal specifications and advocate that similar mechanisms will be sensible extensions to the expressiveness of formal methods. Ultimately, our work facilitates language extensions (e.g., re-introducing if-then-else constructs to Event-B which generate multiple events or a proper macro system to avoid code duplication) and tool support (e.g., refactoring tools or automatic refinement).\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_17.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ArmbrusterK24, author = {Julius Armbr{\\\u0026quot;{u}}ster and Philipp K{\\\u0026quot;{o}}rner}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {Meta-programming Event-B - Advancing Tool Support and Language Extensions}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {233--240}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_17}, doi = {10.1007/978-3-031-63790-2\\_17}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/ArmbrusterK24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"63c074b4759decbb6257885679dc98e7","permalink":"/publication/armbrusterk24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/armbrusterk24/","section":"publication","summary":"Abstract Transforming models based on their textual representation is a cumbersome task. This is particularly the case for Event-B, where the predominant representation is a set of XML files. As a consequence, tool support is lacking, even for minor refactoring operations.","tags":["ABZ'24"],"title":"Meta-programming Event-B - Advancing Tool Support and Language Extensions","type":"publication"},{"authors":["Flavio Ferrarotti","Klaus-Dieter Schewe"],"categories":[],"content":"Abstract Based on the logic of non-deterministic Abstract State Machines (ASMs) we define a modal extension (\\mathcal{M}\\mathcal{L}{\\text {ASM}}) by first introducing multi-step predicates and then adding quantification over the number of steps. We show that liveness conditions such as invariance, conditional and unconditional progress, and persistence on all or some runs of an ASM can be expressed in this logic. We show the existence of a complete fragment of (\\mathcal{M}\\mathcal{L}{\\text {ASM}}), which still contains the interesting liveness conditions, and demonstrate the usefulness of this complete fragment by an example concerning mutual exclusion.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_8.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{FerrarottiS24, author = {Flavio Ferrarotti and Klaus{-}Dieter Schewe}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {Modal Extensions of the Logic of Abstract State Machines}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {123--140}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_8}, doi = {10.1007/978-3-031-63790-2\\_8}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/FerrarottiS24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"3850bb364c487fc9332392403389e51e","permalink":"/publication/ferrarottis24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/ferrarottis24/","section":"publication","summary":"Abstract Based on the logic of non-deterministic Abstract State Machines (ASMs) we define a modal extension (\\mathcal{M}\\mathcal{L}{\\text {ASM}}) by first introducing multi-step predicates and then adding quantification over the number of steps.","tags":["ABZ'24"],"title":"Modal Extensions of the Logic of Abstract State Machines","type":"publication"},{"authors":["Jean-Pierre Jacquot"],"categories":[],"content":"Abstract A challenge posed by model-based formal methods such as Event-B is the validation of the models. This has been recognized and some tools have been created to provide modelers with means to animate models and to explore their behaviour through graphical display. These tools are quite effective on standalone models but lack the ability to connect the model to other external models. CPS systems fall under this category, as well as systems built of components interacting through a communication network. In the context of Jeb, an animation tool for Event-B models based on JavaScript, we explore the possibility of connecting models through Websockets. The paper presents a simple protocol to connect simulations. Using an example inspired by the Lung Ventilator case study, it shows how the implementation expands JeB functionality without modifying its core.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_16.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Jacquot24, author = {Jean{-}Pierre Jacquot}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {Multi-model Animation with JeB}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {223--232}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_16}, doi = {10.1007/978-3-031-63790-2\\_16}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/Jacquot24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7222eb55ae75676cbb6f9d64ebbf1d57","permalink":"/publication/jacquot24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/jacquot24/","section":"publication","summary":"Abstract A challenge posed by model-based formal methods such as Event-B is the validation of the models. This has been recognized and some tools have been created to provide modelers with means to animate models and to explore their behaviour through graphical display.","tags":["ABZ'24"],"title":"Multi-model Animation with JeB","type":"publication"},{"authors":["Edward Sabinus"],"categories":[],"content":"Abstract Abstract State Machines (ASMs) are widely used in the formalization and verification of the semantics of software or hardware. However, tools for assisting this process for evolving specifications are still lacking. With evolving we denote adding extensions without refactoring. We want to create a tool assisting in the verification of evolving specifications. Our approach is to translate ASM specifications into the language of an existing proof checker, construct the proofs as far as possible automatically, and check the proofs with the proof checker. Further, we want proofs of evolvable specifications also to be evolvable. This paper gives a brief overview of the approach and discusses the first step of this work, namely the translation of ASM specifications into the language of an existing proof checker, with consideration of automation possibilities.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_30.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Sabinus24, author = {Edward Sabinus}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {Proof Construction and Checking on Evolving Abstract State Machines}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {392--396}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_30}, doi = {10.1007/978-3-031-63790-2\\_30}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/Sabinus24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"00701a440c62e6241ed6fd9196bc5b80","permalink":"/publication/sabinus24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/sabinus24/","section":"publication","summary":"Abstract Abstract State Machines (ASMs) are widely used in the formalization and verification of the semantics of software or hardware. However, tools for assisting this process for evolving specifications are still lacking.","tags":["ABZ'24"],"title":"Proof Construction and Checking on Evolving Abstract State Machines","type":"publication"},{"authors":["Manar Altamimi","Nawfal Al Hashimy","Asieh Salehi Fathabadi","Gary B. Wills"],"categories":[],"content":"Abstract This paper introduces a novel approach to formal modelling and verification of ownership, addressing safety concerns in property transfer processes. The Event-B formal method, graphically represented using iUML-B notation, is used to establish a robust framework for modeling and verifying ownership systems. The verified Event-B model refines and enhances user requirements at the design stage before system implementation. The research focuses on property ownership within the legal framework of the Kingdom of Saudi Arabia, specifically property sales. The research uncovers that, despite conscientious efforts to scrutinise user requirements, the formal model development exposes limitations and inadequacies in the initial specifications. The verification process introduces essential requirements to mitigate potential fraudulent activities, enhancing the security and dependability of ownership claims.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_12.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{AltamimiHFW24, author = {Manar Altamimi and Nawfal Al Hashimy and Asieh Salehi Fathabadi and Gary B. Wills}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {Property Ownership Formal Modelling Using Event-B and iUML-B}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {191--200}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_12}, doi = {10.1007/978-3-031-63790-2\\_12}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/AltamimiHFW24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"efc0002f8a566ae60dbda36df7e8786a","permalink":"/publication/altamimihfw24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/altamimihfw24/","section":"publication","summary":"Abstract This paper introduces a novel approach to formal modelling and verification of ownership, addressing safety concerns in property transfer processes. The Event-B formal method, graphically represented using iUML-B notation, is used to establish a robust framework for modeling and verifying ownership systems.","tags":["ABZ'24"],"title":"Property Ownership Formal Modelling Using Event-B and iUML-B","type":"publication"},{"authors":["Thai Son Hoang","Laurent Voisin","Karla Vanessa Morris Wright","Colin F. Snook","Michael J. Butler"],"categories":[],"content":"Abstract The Event-B modelling language has been used to formalise the semantics of other modelling languages such as Time Mobility (TiMo) or State Chart XML (SCXML). Typically, the syntactical elements of the languages are captured as Event-B contexts while the semantical elements are formalised in Event-B machines. An alternative for capturing a modelling language’s semantics is to use the Theory plug-in to build datatypes capturing the syntactical elements of the language and operators to represent the various semantical aspects of the language. This paper draws on our experience on the statemanchines (part of SCXML) to compare the two approaches in terms of modelling efforts.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_14.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{HoangVWSB24, author = {Thai Son Hoang and Laurent Voisin and Karla Vanessa Morris Wright and Colin F. Snook and Michael J. Butler}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {Semantics Formalisation - From Event-B Contexts to Theories}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {208--214}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_14}, doi = {10.1007/978-3-031-63790-2\\_14}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/HoangVWSB24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"cdbd6fb578d8577e6485ffd5d93a2a0e","permalink":"/publication/hoangvwsb24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/hoangvwsb24/","section":"publication","summary":"Abstract The Event-B modelling language has been used to formalise the semantics of other modelling languages such as Time Mobility (TiMo) or State Chart XML (SCXML). Typically, the syntactical elements of the languages are captured as Event-B contexts while the semantical elements are formalised in Event-B machines.","tags":["ABZ'24"],"title":"Semantics Formalisation - From Event-B Contexts to Theories","type":"publication"},{"authors":["Wolf Zimmermann","Thomas Kühn 0001","Edward Sabinus","Mandy Weißbach"],"categories":[],"content":"Abstract Previously, we introduced the idea of agile compiler development, i.e., starting from an initial compiler for the most simple program of a language and extending it in small versions, each introducing a new language concept. Following this idea, in this paper, we propose an approach for incrementally verifying the dynamic semantics specified with abstract state machines (ASMs), such that definitions of previous versions must not be altered in subsequent versions. As a result, the compiler can be verified incrementally without revising the proofs of previous versions. As our first step, in this paper, we formalize and verify the memory mapping of the initial versions with ASMs and discuss their extensibility for the next increments. We plan to demonstrate this approach through the agile implementation and verification of a Sather-K compiler generating MIPS assembly language.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_21.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ZimmermannKSW24, author = {Wolf Zimmermann and Thomas K{\\\u0026quot;{u}}hn and Edward Sabinus and Mandy Wei{\\ss}bach}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {Small Step Incremental Verification of Compilers}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {262--269}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_21}, doi = {10.1007/978-3-031-63790-2\\_21}, timestamp = {Fri, 13 Sep 2024 16:19:49 +0200}, biburl = {https://dblp.org/rec/conf/zum/ZimmermannKSW24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f538a3347415e8372950b15d1761cc69","permalink":"/publication/zimmermannksw24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/zimmermannksw24/","section":"publication","summary":"Abstract Previously, we introduced the idea of agile compiler development, i.e., starting from an initial compiler for the most simple program of a language and extending it in small versions, each introducing a new language concept.","tags":["ABZ'24"],"title":"Small Step Incremental Verification of Compilers","type":"publication"},{"authors":["Silvia Bonfanti","Angelo Gargantini"],"categories":[],"content":"Abstract This paper introduces the ABZ 2024 Case Study: Mechanical Lung Ventilator (MLV), inspired by the Mechanical Ventilator Milano developed during COVID-19. The case study reports the specification of the Mechanical Lung Ventilator used to ventilate patients who are not able to breathe on their own or need ventilation support. Expected contributions to the case study include, among others, modeling, validation and verification, management of temporal behavior, modeling of the graphical user interface or automatically generating executable source code.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_23.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BonfantiG24, author = {Silvia Bonfanti and Angelo Gargantini}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {The Mechanical Lung Ventilator Case Study}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {281--288}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_23}, doi = {10.1007/978-3-031-63790-2\\_23}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/BonfantiG24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7b467faae27aa91c565e2b87c7eae936","permalink":"/publication/bonfantig24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/bonfantig24/","section":"publication","summary":"Abstract This paper introduces the ABZ 2024 Case Study: Mechanical Lung Ventilator (MLV), inspired by the Mechanical Ventilator Milano developed during COVID-19. The case study reports the specification of the Mechanical Lung Ventilator used to ventilate patients who are not able to breathe on their own or need ventilation support.","tags":["ABZ'24"],"title":"The Mechanical Lung Ventilator Case Study","type":"publication"},{"authors":["Bodo Igler","Andreas Mayer"],"categories":[],"content":"Abstract The steep learning curve associated with interactive theorem proving poses a significant entry barrier for the learner. While the Alloy specification language [1] has simplified the introduction to and application of formal methods, transitioning to interactive theorem proving, such as with Coq [2], remains daunting due to the inherent complexity of formal reasoning and the sophisticated tooling required. We introduce ThoR, an extension for the Coq proof assistant that incorporates an Alloy5-like domain-specific language: Specifications, propositions and proofs are formulated in an Alloy5-like syntax. This reduces tool and language complexity, and makes interactive theorem proving more accessible. The implementation is based on Coq’s syntax extension capabilities and the mathematical components library (mathcomp) [4]. This paper reports on work in progress. It contributes an approach for the embedding of Alloy into Coq based on a set-theoretic interpretation, a proof calculus for Alloy with soundness by construction, a prototypical implementation and its validation via a simple token ring example.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_19.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{IglerM24, author = {Bodo Igler and Andreas Mayer}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {ThoR: An Alloy5-Like {DSL} for Interactive Theorem Proving in Coq}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {248--254}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_19}, doi = {10.1007/978-3-031-63790-2\\_19}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/IglerM24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"b10f3d43cb8d93742b8604f38825bd41","permalink":"/publication/iglerm24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/iglerm24/","section":"publication","summary":"Abstract The steep learning curve associated with interactive theorem proving poses a significant entry barrier for the learner. While the Alloy specification language [1] has simplified the introduction to and application of formal methods, transitioning to interactive theorem proving, such as with Coq [2], remains daunting due to the inherent complexity of formal reasoning and the sophisticated tooling required.","tags":["ABZ'24"],"title":"ThoR: An Alloy5-Like DSL for Interactive Theorem Proving in Coq","type":"publication"},{"authors":["Akram Idani"],"categories":[],"content":"Abstract Petri-nets and their variants (Place/Transition nets, High-Level Petri Nets, etc.) are widely used in the development of safety critical-systems. Their success is related to three major aspects: a formal semantics, a graphical syntax and the availability of verification tools. In our previous work we presented a new vision for the semantic definition of Petri-nets applying a Formal Model-Driven Engineering (FMDE) built on the B method. The approach is powered by Meeduse, a language workbench that we developed in order to formally instrument executable Domain-Specific Languages (xDSLs) by applying a deep embedding technique and the B method. However, because of the abstract nature of the underlying formal models, our deep embedding is suitable for the validation and verification activities at the design stage but not sufficient to generate code for target platforms. This paper advances our previous work with a shallow embedding technique taking benefit of the B method tools in order to safely synthesize executable Petri-net controllers that can be embedded in target platforms.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_5.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Idani24, author = {Akram Idani}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {Transpilation of Petri-nets into {B} - Shallow and Deep Embeddings}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {80--98}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_5}, doi = {10.1007/978-3-031-63790-2\\_5}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/Idani24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"2b01b4317581b2a74038a75b6e849621","permalink":"/publication/idani24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/idani24/","section":"publication","summary":"Abstract Petri-nets and their variants (Place/Transition nets, High-Level Petri Nets, etc.) are widely used in the development of safety critical-systems. Their success is related to three major aspects: a formal semantics, a graphical syntax and the availability of verification tools.","tags":["ABZ'24"],"title":"Transpilation of Petri-nets into B - Shallow and Deep Embeddings","type":"publication"},{"authors":["Giuseppe Del Castillo"],"categories":[],"content":"Abstract This paper introduces a transformation method that uses symbolic execution to eliminate sequential composition ((\\texttt {seq})) rules from turbo ASM rules by translating them into equivalent rules without seq. Under some circumstances (\\texttt {iterate}) rules can also be eliminated. The material presented here is work in progress. A prototype implementation of the transformation is publicly available.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_15.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Castillo24, author = {Giuseppe Del Castillo}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {Using Symbolic Execution to Transform Turbo Abstract State Machines into Basic Abstract State Machines}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {215--222}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_15}, doi = {10.1007/978-3-031-63790-2\\_15}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/Castillo24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"2ccb641247a567fe5fdd4e2a2c940caa","permalink":"/publication/castillo24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/castillo24/","section":"publication","summary":"Abstract This paper introduces a transformation method that uses symbolic execution to eliminate sequential composition ((\\texttt {seq})) rules from turbo ASM rules by translating them into equivalent rules without seq. Under some circumstances (\\texttt {iterate}) rules can also be eliminated.","tags":["ABZ'24"],"title":"Using Symbolic Execution to Transform Turbo Abstract State Machines into Basic Abstract State Machines","type":"publication"},{"authors":["Jean-Paul Bodeveix","Thomas Carle","Elie Fares","Mamoun Filali","Thai Son Hoang"],"categories":[],"content":"Abstract The study presented in this paper is motivated by the verification of properties related to hardware architectures, namely timing anomalies that qualify a counter-intuitive timing behaviour. They are avoided by a monotonicity property which is an Hyper-LTL property. We present how to prove some classes of Hyper-LTL properties with Event-B.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-63790-2_20.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BodeveixCFFH24, author = {Jean{-}Paul Bodeveix and Thomas Carle and Elie Fares and Mamoun Filali and Thai Son Hoang}, editor = {Silvia Bonfanti and Angelo Gargantini and Michael Leuschel and Elvinia Riccobene and Patrizia Scandurra}, title = {Verifying HyperLTL Properties in Event-B}, booktitle = {Rigorous State-Based Methods - 10th International Conference, {ABZ} 2024, Bergamo, Italy, June 25-28, 2024, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14759}, pages = {255--261}, publisher = {Springer}, year = {2024}, url = {https://doi.org/10.1007/978-3-031-63790-2\\_20}, doi = {10.1007/978-3-031-63790-2\\_20}, timestamp = {Thu, 04 Jul 2024 22:05:23 +0200}, biburl = {https://dblp.org/rec/conf/zum/BodeveixCFFH24.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1704067200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"4cba7bea650db4b5177cacfa4af5ed3f","permalink":"/publication/bodeveixcffh24/","publishdate":"2024-01-01T00:00:00Z","relpermalink":"/publication/bodeveixcffh24/","section":"publication","summary":"Abstract The study presented in this paper is motivated by the verification of properties related to hardware architectures, namely timing anomalies that qualify a counter-intuitive timing behaviour. They are avoided by a monotonicity property which is an Hyper-LTL property.","tags":["ABZ'24"],"title":"Verifying HyperLTL Properties in Event-B","type":"publication"},{"authors":null,"categories":null,"content":"","date":1685404800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"09404c74de748daba90de9c2fe39995d","permalink":"/2023/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/2023/","section":"event","summary":"9th International Conference on Rigorous State-Based Methods","tags":["ABZ'23"],"title":"ABZ 2023 (Nancy, France)","type":"event"},{"authors":null,"categories":null,"content":"BibTex-Entries of the mentioned ASM Workshop Proceedings 1994-2007 (preceding the merge of those workshops with the user meetings of Z and B to the ABZ Conference, started in 2008) and the references can be found here.\n@Proceedings{Asm94, title = {Technology and {F}oundations. {I}nformation {P}rocessing'94}, year = {1994}, editor = {B. Pehrson and I. Simon}, volume = {{I}, Track 4, Stream C: Evolving Algebras}, series = {}, pages={ 377--441}, publisher = {Elsevier}, address = {Hamburg (Germany)}, note = {Contains Proceedings of First ASM Workshop} } @Proceedings{Asm98, title = {Fifth {I}nternational {W}orkshop on {A}bstract {S}tate {M}achines}, year = {1998}, editor = {U.Gl\\\u0026quot;asser and P.Schmitt}, volume = {}, series = {}, publisher = {Otto-von-Guericke-Universit\\\u0026quot;at}, address = {Magdeburg (Germany)}, pages = {III+158}, note = {Contains Proceedings of Fifth International ASM Workshop at Informatik'98} } @Proceedings{Asm00, title = {Abstradt {S}tate {M}achines. {T}heory and {A}pplications}, year = {2000}, editor = {Y.Gurevich and P.W.Kutter and M.Odersky and L.Thiele}, volume = {1912}, series = {LNCS}, publisher = {Springer}, address = {Monte Verit\\`a (Switzerland)}, note = {Proceedings of 7th International ASM Workshop} } @Proceedings{Asm01, title = {Formal Methods and Tools for Computer Science. Eurocast 2001}, year = {2001}, editor = {R.Moreno-Diaz and A.Quesada-Arencibia}, volume = {}, series = {}, publisher = {IUCTC Universida de Las Palmas de Gran Canaria}, address = {Las Palmas (Spain)}, note = {Contains Extended Abstracts of 8th ASM Workshop. For selected full workshop papers see \\cite{BoeGla01}.} } @Book{Asm02, editor =\t{A.Blass and E.B\\\u0026quot;orger and Y.Gurevich}, title =\t{Theory and Application of Abstract State Machines}, publisher =\t{Schloss Dagstuhl}, year =\t{2002}, note = {Seminar Report 336. \\url{https://www.dagstuhl.de/02101}} } @Proceedings{Asm03, title = {{Abstract State Machines} 2003. Advances in {T}heory and {P}ractice}, year = {2003}, editor = {E.B\\\u0026quot;orger and A.Gargantini and E.Riccobene}, volume = {2589}, series = {LNCS}, publisher = {Springer}, address = {}, note = {Contains Proceedings of 10th ASM Workshop (Taormina, Italy). For a selection of extended workshop papers see \\cite{Asm03Tcs}.} } @BOOK{Asm03Tcs, editor = {E.B\\\u0026quot;orger}, title = {Abstract {S}tate {M}achines and high-level system design and analysis}, year = {2005}, publisher = {Elsevier}, series = {Theoretical Computer Science (Special Issue)}, volume = {336 (2--3) }, note = {ISSN 0304--3975. Selection of extended papers from ASM'03 (Taormina, Sicily)} } @Proceedings{Asm04, title = {{Abstract State Machines} 2004. Advances in {T}heory and {P}ractice}, year = {2004}, editor = {W.Zimmermann and B.Thalheim}, volume = {3052}, series = {LNCS}, publisher = {Springer}, address = {}, note = {Contains Proceedings of 11th ASM Workshop (Lutherstadt Wittenberg)} } @Misc{Asm05, author =\t{E.B\\\u0026quot;orger and D. Beauquier and A. Slissenko}, title =\t{Proc. 12th International Workshop on {A}bstract {S}tate {M}achines {ASM}'05}, howpublished =\t{ Universit\\'e Paris 12 (France)}, year = {2005}, pages ={424}, note = {For a selection of extended workshop papers see \\cite{Asm05FI}} } @BOOK{Asm05FI, editor = {E.B\\\u0026quot;orger}, title = {The {A}bstract {S}tate {M}achines method}, year = {2007}, publisher = {IOS Press}, series = {Fundamenta Informaticae (Special Issue)}, volume = {77}, note = {ISSN 0169--2968. Selection of extended papers from ASM'05 (Paris)} } @BOOK{Asm07, editor = {E.B\\\u0026quot;orger and A.Prinz}, title = {Quo vadis {A}bstract {S}tate {M}achines?}, year = {2008}, publisher = {}, series = {J. Universal Computer Science (Special Issue)}, volume = {14 (12)}, pages = {1921--2071}, note = {Selection of extended papers from ASM'07 (Grimstadt, Norway)} }  REFERENCES [1] @InCollection{Gurevich94b, author = {Y. Gurevich}, title = {{Evolving algebras 1993: Lipari Guide}}, booktitle = {Specification and Validation Methods}, publisher = {Oxford University Press}, year = {1995}, pages = {9--36}, editor = {E. B{\\\u0026quot;o}rger}} [2] @InProceedings{Boerger03a, author =\t{E. B{\\\u0026quot;o}rger}, title =\t{The {ASM} ground model method as a foundation of requirements engineering}, booktitle =\t{Verification: Theory and Practice}, pages =\t{145-160}, year =\t{2003}, editor =\t{N.Dershowitz}, volume =\t{2772}, series =\t{LNCS}, publisher = {Springer-Verlag}} [3] @Article{Boerger02b, author =\t{E. B{\\\u0026quot;o}rger}, title =\t{The {ASM} Refinement Method}, journal =\t{Formal Aspects of Computing}, volume =\t{15}, year =\t{2003}, pages = {237-257}} [4] @Book{BoeRas18, author = {E. B{\\\u0026quot;o}rger and A. Raschke}, title = {Modeling Companion for Software Practitioners}, publisher = {Springer}, year = {2018}, note = {ISBN 978-3-662-56641-1. For Corrigenda and lecture material on themes treated in the book see \\url{https://modelingbook.informatik.uni-ulm.de}} [5] @Book{BoeSta03, author = {E. B{\\\u0026quot;o}rger and R. F. St{\\\u0026quot;a}rk}, title = {Abstract {S}tate {M}achines. A Method for High-Level System Design and Analysis}, publisher = {Springer}, year = {2003}} [6] @Book{StScBo01, author = {R. F. St{\\\u0026quot;a}rk and J. Schmid and E. B{\\\u0026quot;o}rger}, title = {Java and the Java Virtual Machine: Definition, Verification, Validation}, publisher = {Springer-Verlag}, year = {2001}} [7] @Article{Boerger02a, author =\t{E. B{\\\u0026quot;o}rger}, title =\t{The Origins and the Development of the {ASM} Method for High-Level System Design and Analysis}, journal =\t{J.~Universal Computer Science}, volume =\t{8}, number =\t{1}, year =\t{2002}, pages =\t{2--74}} [8] @Article{Gurevich00, author = {Y. Gurevich}, title = {Sequential {Abstract State Machines} Capture Sequential Algorithms}, journal = {ACM Trans. Computational Logic}, year = {2000}, month = {July}, volume = {1}, number = {1}, pages = {77--111}} [9] @inproceedings{Schewe21, author = {K.-D. Schewe}, title = {Computation on Structures: Behavioural Theory, Logic, Complexity}, booktitle = {Logic, Computation and Rigorous Methods. Essays Dedicated to Egon B\\\u0026quot;orger on the Occasion of His 75th Birthday}, editor = {A.Raschke and E. Riccobene and K.-D. Schewe}, series = {Lecture Notes in Computer Science}, volume = {1275}, publisher = {Springer}, pages = {266--282}, year = {2021} }  ","date":1679011200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"ad230df85ebc9fd599afdd09010fe97a","permalink":"/method/asm/bibtex-references/","publishdate":"2023-03-17T00:00:00Z","relpermalink":"/method/asm/bibtex-references/","section":"method","summary":"BibTex-Entries of the mentioned ASM Workshop Proceedings 1994-2007 (preceding the merge of those workshops with the user meetings of Z and B to the ABZ Conference, started in 2008) and the references can be found here.","tags":null,"title":"BibTex-Entries of ASM workshops and References","type":"method"},{"authors":["Yannis Benabbi"],"categories":[],"content":"Abstract Railway systems belong to the domain of critical systems, where safety is a paramount concern. To ensure safety, testing methods have been implemented to adhere to certain standards. However, for large projects, it is impossible to test every possible scenarios, which can lead to gaps in the testing process.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_28.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Benabbi23, author = {Yannis Benabbi}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {A Framework for Formal Verification and Validation of Railway Systems}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {371--374}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_28}, doi = {10.1007/978-3-031-33163-3\\_28}, timestamp = {Tue, 23 May 2023 09:57:42 +0200}, biburl = {https://dblp.org/rec/conf/zum/Benabbi23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"ec6e4f1a9b874d5c97e6116872b311e3","permalink":"/publication/benabbi23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/benabbi23/","section":"publication","summary":"Abstract Railway systems belong to the domain of critical systems, where safety is a paramount concern. To ensure safety, testing methods have been implemented to adhere to certain standards. However, for large projects, it is impossible to test every possible scenarios, which can lead to gaps in the testing process.","tags":["ABZ'23"],"title":"A Framework for Formal Verification and Validation of Railway Systems","type":"publication"},{"authors":["Julien Brunel","David Chemouil","Alcino Cunha","Nuno Macedo 0001"],"categories":[],"content":"Abstract Records are a composite data type available in most programming and specification languages, but they are not natively supported by Alloy. As a consequence, users often find themselves having to simulate records in ad hoc ways, a strategy that is error prone and often encumbers the analysis procedures. This paper proposes a conservative extension to the Alloy language to support record signatures. Uniqueness and completeness is imposed on the atoms of such signatures, while still supporting Alloy’s flexible signature hierarchy. The Analyzer has been extended to internally expand such record signatures as partial knowledge for the solving procedure. Evaluation shows that the proposed approach is more efficient than commonly used idioms.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_16.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BrunelCCM23, author = {Julien Brunel and David Chemouil and Alcino Cunha and Nuno Macedo}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Adding Records to Alloy}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {212--219}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_16}, doi = {10.1007/978-3-031-33163-3\\_16}, timestamp = {Tue, 25 Jun 2024 21:03:18 +0200}, biburl = {https://dblp.org/rec/conf/zum/BrunelCCM23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"4dd4da2abbe5cee9cd6e7ebcb92bcd39","permalink":"/publication/brunelccm23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/brunelccm23/","section":"publication","summary":"Abstract Records are a composite data type available in most programming and specification languages, but they are not natively supported by Alloy. As a consequence, users often find themselves having to simulate records in ad hoc ways, a strategy that is error prone and often encumbers the analysis procedures.","tags":["ABZ'23"],"title":"Adding Records to Alloy","type":"publication"},{"authors":["Philippe A. Palanque","José Creissac Campos"],"categories":[],"content":"Abstract This document presents the case study for the ABZ 2023 conference. The case study introduces a safety critical interactive system called AMAN (Arrival MANager), which is a partly-autonomous scheduler of landing sequences of aircraft in airports. This interactive systems interleaves Air Traffic Controllers activities with automation in AMAN. While some AMAN systems are currently deployed in airports, we consider here only a subset of functions which represent a challenge in modelling and verification.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_21.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{PalanqueC23, author = {Philippe A. Palanque and Jos{\\'{e}} Creissac Campos}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {{AMAN} Case Study}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {265--283}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_21}, doi = {10.1007/978-3-031-33163-3\\_21}, timestamp = {Fri, 02 Jun 2023 21:23:52 +0200}, biburl = {https://dblp.org/rec/conf/zum/PalanqueC23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"6049e4daf0c5303c66c1de43b248fcb4","permalink":"/publication/palanquec23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/palanquec23/","section":"publication","summary":"Abstract This document presents the case study for the ABZ 2023 conference. The case study introduces a safety critical interactive system called AMAN (Arrival MANager), which is a partly-autonomous scheduler of landing sequences of aircraft in airports.","tags":["ABZ'23"],"title":"AMAN Case Study","type":"publication"},{"authors":["Flavio Ferrarotti","Klaus-Dieter Schewe"],"categories":[],"content":"Abstract This “journal-first” paper presents a summary of the behavioural theory of reflective sequential algorithms (RSAs), i.e. sequential algorithms that can modify their own behaviour. The theory comprises a set of language-independent postulates defining the class of RSAs, an abstract machine model, and the proof that all RSAs are captured by this machine model. RSAs are sequential-time, bounded parallel algorithms, where the bound depends on the algorithm only and not on the input. Every state of an RSA includes a representation of the algorithm in that state, thus enabling linguistic reflection. Bounded exploration is preserved using terms as values. The model of reflective sequential abstract state machines (rsASMs) extends sequential ASMs using extended states that include an updatable representation of the main ASM rule to be executed by the machine in that state. Updates to the representation of ASM signatures and rules are realised by means of a tree algebra.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_18.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{FerrarottiS23, author = {Flavio Ferrarotti and Klaus{-}Dieter Schewe}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Behavioural Theory of Reflective Algorithms}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {238--244}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_18}, doi = {10.1007/978-3-031-33163-3\\_18}, timestamp = {Tue, 23 May 2023 09:57:42 +0200}, biburl = {https://dblp.org/rec/conf/zum/FerrarottiS23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"cf7e7c5eeb10ffce09521712aea586d7","permalink":"/publication/ferrarottis23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/ferrarottis23/","section":"publication","summary":"Abstract This “journal-first” paper presents a summary of the behavioural theory of reflective sequential algorithms (RSAs), i.e. sequential algorithms that can modify their own behaviour. The theory comprises a set of language-independent postulates defining the class of RSAs, an abstract machine model, and the proof that all RSAs are captured by this machine model.","tags":["ABZ'23"],"title":"Behavioural Theory of Reflective Algorithms","type":"publication"},{"authors":["Marie Farrell","Rosemary Monahan","James F. Power"],"categories":[],"content":"Abstract This “journal-first” paper summarises a publication by the same authors in the journal Logical Methods in Computer Science which describes a formal semantics for the Event-B specification language using the theory of institutions. It defines an institution for Event-B and shows how the constructs of the Event-B specification language can be mapped into our institution. This algebraic semantics distinguishes three constituent sub-languages of Event-B: the superstructure, infrastructure and mathematical languages. An important impact of this work is that our semantics provides access to the generic modularisation constructs available in institutions, including specification-building operators for parameterisation and refinement. We demonstrate how these features subsume and enhance the corresponding features already present in Event-B through a detailed study of their use in a worked example. Further benefits of the institutional approach are its provision for mathematically definable interoperability to facilitate heterogeneous specification.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_19.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{FarrellMP23, author = {Marie Farrell and Rosemary Monahan and James F. Power}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Building Specifications in the Event-B Institution: {A} Summary}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {245--253}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_19}, doi = {10.1007/978-3-031-33163-3\\_19}, timestamp = {Fri, 02 Jun 2023 21:23:53 +0200}, biburl = {https://dblp.org/rec/conf/zum/FarrellMP23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"8f6dfcd10c4628f63a637e72e267f6ee","permalink":"/publication/farrellmp23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/farrellmp23/","section":"publication","summary":"Abstract This “journal-first” paper summarises a publication by the same authors in the journal Logical Methods in Computer Science which describes a formal semantics for the Event-B specification language using the theory of institutions.","tags":["ABZ'23"],"title":"Building Specifications in the Event-B Institution: A Summary","type":"publication"},{"authors":["Thomas Wilson","Stuart Matthews"],"categories":[],"content":"Abstract Crucible is a suite of tools supporting the use of Alloy as a functional specification language for high-integrity software systems. It incorporates a test generator, animator and range of supporting tools. Test generation is achieved by producing test conditions from the input Alloy model, and then using the Alloy Analyzer to produce solutions. The solutions can optionally be converted into executable tests targeting a range of implementation languages. The animator allows scenarios to be defined by users and run to help stakeholders validate the Alloy model. In this paper, we provide an overview of the Crucible tools.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_9.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{WilsonM23, author = {Thomas Wilson and Stuart Matthews}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Crucible Tools for Test Generation and Animation of Alloy Models}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {116--123}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_9}, doi = {10.1007/978-3-031-33163-3\\_9}, timestamp = {Fri, 02 Jun 2023 21:23:53 +0200}, biburl = {https://dblp.org/rec/conf/zum/WilsonM23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7e28d9c2e39c9adf38e4d94a1201eb7d","permalink":"/publication/wilsonm23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/wilsonm23/","section":"publication","summary":"Abstract Crucible is a suite of tools supporting the use of Alloy as a functional specification language for high-integrity software systems. It incorporates a test generator, animator and range of supporting tools.","tags":["ABZ'23"],"title":"Crucible Tools for Test Generation and Animation of Alloy Models","type":"publication"},{"authors":["Asieh Salehi Fathabadi","Colin F. Snook","Dana Dghaym","Thai Son Hoang","Fahad Alotaibi","Michael J. Butler"],"categories":[],"content":"Abstract In the design of critical systems, it is important to ensure a degree of formality so that we reason about safety and security at early stages of analysis and design, rather than detect problems later. Influenced by ideas from STPA we present a hierarchical analysis process that aims to justify the design and flow-down of derived critical requirements arising from safety hazards and security vulnerabilities identified at the system level. At each level, we verify that the design achieves the safety/security requirements by backing the analysis with formal modelling and proof using Event-B refinement. The formal model helps to identify hazards/vulnerabilities arising from the design and how they relate to the safety accidents/security losses being considered at this level. We then re-apply the same process to each component of the design in a hierarchical manner. Thus we use ideas from STPA, backed by Event-B models, to drive the design, replacing the system level requirements with component requirements. In doing so, we decompose critical requirements down to components, transforming them from abstract system level requirements, towards concrete solutions that we can implement correctly so that the hazards/vulnerabilities are eliminated.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_17.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{FathabadiSDHAB23, author = {Asieh Salehi Fathabadi and Colin F. Snook and Dana Dghaym and Thai Son Hoang and Fahad Alotaibi and Michael J. Butler}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Designing Critical Systems Using Hierarchical {STPA} and Event-B}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {220--237}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_17}, doi = {10.1007/978-3-031-33163-3\\_17}, timestamp = {Fri, 02 Jun 2023 21:23:52 +0200}, biburl = {https://dblp.org/rec/conf/zum/FathabadiSDHAB23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"8643097669c454b4ed32fa90049aad3d","permalink":"/publication/fathabadisdhab23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/fathabadisdhab23/","section":"publication","summary":"Abstract In the design of critical systems, it is important to ensure a degree of formality so that we reason about safety and security at early stages of analysis and design, rather than detect problems later.","tags":["ABZ'23"],"title":"Designing Critical Systems Using Hierarchical STPA and Event-B","type":"publication"},{"authors":["Rosalie Defourné"],"categories":[],"content":"Abstract The (\\textrm{TLA}^{+}) Proof System (TLAPS) allows users to verify proofs with the support of automated provers, including SMT solvers. To better ensure the soundness of TLAPS, we revisited the encoding of (\\textrm{TLA}^{+}) into SMT-LIB, whose implementation had become too complex. Our approach is based on a first-order axiomatization with E-matching patterns. The new encoding is available with TLAPS and achieves performances similar to the previous version, despite its simpler design.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_7.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Defourne23, author = {Rosalie Defourn{\\'{e}}}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Encoding rmTLA\\({}^{\\mbox{+}}\\) Proof Obligations Safely for {SMT}}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {88--106}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_7}, doi = {10.1007/978-3-031-33163-3\\_7}, timestamp = {Tue, 23 May 2023 09:57:42 +0200}, biburl = {https://dblp.org/rec/conf/zum/Defourne23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"146de83f6d0c330a1132900c5005e4a5","permalink":"/publication/defourne23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/defourne23/","section":"publication","summary":"Abstract The (\\textrm{TLA}^{+}) Proof System (TLAPS) allows users to verify proofs with the support of automated provers, including SMT solvers. To better ensure the soundness of TLAPS, we revisited the encoding of (\\textrm{TLA}^{+}) into SMT-LIB, whose implementation had become too complex.","tags":["ABZ'23"],"title":"Encoding rmTLA+ Proof Obligations Safely for SMT","type":"publication"},{"authors":["Linjie Tong","Ke Xu 0002","Jiarun Hu","Flavio Ferrarotti","Klaus-Dieter Schewe"],"categories":[],"content":"Abstract We show how reflective ASMs can support hardware-software binding, which can be used for copy protection, and we exploit the logic of rASMs to express desirable properties for this application.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_14.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{TongXHFS23, author = {Linjie Tong and Ke Xu and Jiarun Hu and Flavio Ferrarotti and Klaus{-}Dieter Schewe}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Exploration of Reflective ASMs for Security}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {185--192}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_14}, doi = {10.1007/978-3-031-33163-3\\_14}, timestamp = {Tue, 23 May 2023 09:57:42 +0200}, biburl = {https://dblp.org/rec/conf/zum/TongXHFS23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"53ac6c2fffecb900857b9f34f28cfe4f","permalink":"/publication/tongxhfs23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/tongxhfs23/","section":"publication","summary":"Abstract We show how reflective ASMs can support hardware-software binding, which can be used for copy protection, and we exploit the logic of rASMs to express desirable properties for this application.","tags":["ABZ'23"],"title":"Exploration of Reflective ASMs for Security","type":"publication"},{"authors":["Oisín Sheridan"],"categories":[],"content":"Abstract As the formal verification of safety-critical software systems often requires the integration of multiple tools and techniques, we propose a three-phase methodology incorporating two complementary workflows to ensure that the system in question fulfills its requirements. We use the Formal Requirements Elicitation Tool (FRET) to structure the requirements so that they can be translated to other formalisms. These translations are then either incorporated directly into an existing model in Simulink, or used to construct a new formal model of the system. Our current use case is a model of a controller for a civilian aircraft engine.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_26.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Sheridan23, author = {Ois{\\'{\\i}}n Sheridan}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Exploring a Methodology for Formal Verification of Safety-Critical Systems}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {361--365}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_26}, doi = {10.1007/978-3-031-33163-3\\_26}, timestamp = {Fri, 02 Jun 2023 21:23:52 +0200}, biburl = {https://dblp.org/rec/conf/zum/Sheridan23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"0bf6eecb787071763340f8cafa3d1877","permalink":"/publication/sheridan23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/sheridan23/","section":"publication","summary":"Abstract As the formal verification of safety-critical software systems often requires the integration of multiple tools and techniques, we propose a three-phase methodology incorporating two complementary workflows to ensure that the system in question fulfills its requirements.","tags":["ABZ'23"],"title":"Exploring a Methodology for Formal Verification of Safety-Critical Systems","type":"publication"},{"authors":["Kristin Rutenkolk"],"categories":[],"content":"Abstract The modeling language of classical B is used to write specifications of various systems. Tools like ProB are able to use modelchecking techniques to verify invariants of these specifications such as safety-properties. However, classical B historically supports only discrete models and has additionally no notion of floating-point numbers and real numbers. Currently challenging scenarios and issues which any suitable solution must address are explored. An approach is proposed such that ProB may offer such a solution in the future.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_27.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Rutenkolk23, author = {Kristin Rutenkolk}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Extending Modelchecking with ProB to Floating-Point Numbers and Hybrid Systems}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {366--370}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_27}, doi = {10.1007/978-3-031-33163-3\\_27}, timestamp = {Fri, 02 Jun 2023 21:23:53 +0200}, biburl = {https://dblp.org/rec/conf/zum/Rutenkolk23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"61e6ded10b240e2e77a029a25a20ca37","permalink":"/publication/rutenkolk23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/rutenkolk23/","section":"publication","summary":"Abstract The modeling language of classical B is used to write specifications of various systems. Tools like ProB are able to use modelchecking techniques to verify invariants of these specifications such as safety-properties.","tags":["ABZ'23"],"title":"Extending Modelchecking with ProB to Floating-Point Numbers and Hybrid Systems","type":"publication"},{"authors":["Andrea Bombarda","Silvia Bonfanti","Angelo Gargantini"],"categories":[],"content":"Abstract Using architectural patterns is of paramount importance for guaranteeing the correct functionality, maintainability and modularity, especially for complex software systems. The model-view-controller (MVC) pattern is typically used in user interfaces (UIs), since it allows the separation between the internal representation of the information and the way it is shown to users. The main problem of using this approach in a formal setting, where formal models are used to specify the requirements and prove safety properties, is that those models are not directly used within the MVC pattern and, thus, all the activities performed at model-level are somehow lost when implementing the UI. For this reason, in this paper, we present the formal MVC pattern (fMVC), an extension of the classical MVC where the model is a formal specification, written using Abstract State Machines. This pattern is supported by the AsmetaFMVCLib, which allows the user to link the formal model with the view and the controller by using simple Java annotations. We present the application of fMVC on a simple example of a calculator for explanatory purposes, then we apply it to the AMAN case study, which has inspired the definition of fMVC. We discuss the advantages of fMVC and its shortcomings, trying to identify the scenarios where it should be applied and possible alternatives.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_25.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BombardaBG23, author = {Andrea Bombarda and Silvia Bonfanti and Angelo Gargantini}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {formal {MVC:} {A} Pattern for the Integration of {ASM} Specifications in {UI} Development}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {340--357}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_25}, doi = {10.1007/978-3-031-33163-3\\_25}, timestamp = {Fri, 02 Jun 2023 21:23:53 +0200}, biburl = {https://dblp.org/rec/conf/zum/BombardaBG23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7dd7c55ce776ad07906c7b4596c41cca","permalink":"/publication/bombardabg23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/bombardabg23/","section":"publication","summary":"Abstract Using architectural patterns is of paramount importance for guaranteeing the correct functionality, maintainability and modularity, especially for complex software systems. The model-view-controller (MVC) pattern is typically used in user interfaces (UIs), since it allows the separation between the internal representation of the information and the way it is shown to users.","tags":["ABZ'23"],"title":"formal MVC: A Pattern for the Integration of ASM Specifications in UI Development","type":"publication"},{"authors":["Julien Cervelle","Frédéric Gervais"],"categories":[],"content":"Abstract Proving theorems and properties on B models, recursively-defined functions is a convenient tool which is missing in B proofs. The main contribution of this paper is the definition of a new theory without new concrete types and without axioms to enable the use of constructions by induction; This theory has been specified and proved within the Theory Plugin in Rodin. This induction theory clearly improves the existing B prover. This is illustrated in this paper by the implementation of ZFC in the Theory Plugin.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_4.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{CervelleG23, author = {Julien Cervelle and Fr{\\'{e}}d{\\'{e}}ric Gervais}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Introducing Inductive Construction in {B} with the Theory Plugin}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {43--58}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_4}, doi = {10.1007/978-3-031-33163-3\\_4}, timestamp = {Fri, 02 Jun 2023 21:23:53 +0200}, biburl = {https://dblp.org/rec/conf/zum/CervelleG23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d3903dc19cd3996a543ebc41689b0e8a","permalink":"/publication/cervelleg23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/cervelleg23/","section":"publication","summary":"Abstract Proving theorems and properties on B models, recursively-defined functions is a convenient tool which is missing in B proofs. The main contribution of this paper is the definition of a new theory without new concrete types and without axioms to enable the use of constructions by induction; This theory has been specified and proved within the Theory Plugin in Rodin.","tags":["ABZ'23"],"title":"Introducing Inductive Construction in B with the Theory Plugin","type":"publication"},{"authors":["David Geleßus","Sebastian Stock 0002","Fabian Vu","Michael Leuschel","Atif Mashkoor"],"categories":[],"content":"Abstract This paper presents insights gained during modeling and analyzing the arrival manager (AMAN) case study in Event-B with validation obligations (VOs). AMAN is a safety-critical interactive system for air traffic controllers to organize the landing of airplanes at airports. The presented model consists of a human-machine interface comprising interactive and autonomous parts. We employ VOs to formalize requirements, uncover contradictions and ambiguities, and validate the model’s compliance with the requirements. To capture the AMAN’s human-machine interaction, we implement an interactive domain-specific visualization and an automatic simulation using the VisB and SimB components of ProB.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_22.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{GelessusSVLM23, author = {David Gele{\\ss}us and Sebastian Stock and Fabian Vu and Michael Leuschel and Atif Mashkoor}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Modeling and Analysis of a Safety-Critical Interactive System Through Validation Obligations}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {284--302}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_22}, doi = {10.1007/978-3-031-33163-3\\_22}, timestamp = {Fri, 02 Jun 2023 21:23:53 +0200}, biburl = {https://dblp.org/rec/conf/zum/GelessusSVLM23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"363df3a0cd5a2c26e01d269658777896","permalink":"/publication/gelessussvlm23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/gelessussvlm23/","section":"publication","summary":"Abstract This paper presents insights gained during modeling and analyzing the arrival manager (AMAN) case study in Event-B with validation obligations (VOs). AMAN is a safety-critical interactive system for air traffic controllers to organize the landing of airplanes at airports.","tags":["ABZ'23"],"title":"Modeling and Analysis of a Safety-Critical Interactive System Through Validation Obligations","type":"publication"},{"authors":["Amel Mammar","Michael Leuschel"],"categories":[],"content":"Abstract The present paper describes an Event-B model of the Arrival MANager system (called AMAN), the case study provided by the ABZ’23 conference. The goal of this safety critical interactive system is to schedule the arrival times of aircraft at airports. This system includes two parts: an autonomous part which predicts the arrival time of an aircraft from external sources (flight plan information, radar and weather information, etc.) and an interface part that permits to the Air Traffic Controller (ATCo) to submit requests to AMAN like changes regarding the arrival times of aircraft. To formally model and verify this critical system, we use a correct-by-construction approach with the Event-B formal method and its refinement process. We mainly consider functional features of the case study; all proof obligations have been discharged using the provers of the Rodin platform under which we carried out our development. To help users understand how AMAN works and its main functionalities, a visualisation of the Event-B models was achieved using the VisB component of ProB. Our models have been validated using ProB by applying scenarios related to different functional aspects of the system.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_24.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MammarL23, author = {Amel Mammar and Michael Leuschel}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Modeling and Verifying an Arrival Manager Using Event-B}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {321--339}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_24}, doi = {10.1007/978-3-031-33163-3\\_24}, timestamp = {Fri, 02 Jun 2023 21:23:53 +0200}, biburl = {https://dblp.org/rec/conf/zum/MammarL23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d57238f529146524774e888eca5fb34b","permalink":"/publication/mammarl23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/mammarl23/","section":"publication","summary":"Abstract The present paper describes an Event-B model of the Arrival MANager system (called AMAN), the case study provided by the ABZ’23 conference. The goal of this safety critical interactive system is to schedule the arrival times of aircraft at airports.","tags":["ABZ'23"],"title":"Modeling and Verifying an Arrival Manager Using Event-B","type":"publication"},{"authors":["Silvia Bonfanti","Elvinia Riccobene","Davide Santandrea","Patrizia Scandurra"],"categories":[],"content":"Abstract With the increasing complexity and scale of software-intensive systems, model-based system development requires composable system models and composition operators. In line with such a vision, this paper describes our experience in modeling the behavior of the MVM-Adapt, an adaptive version of the Mechanical Ventilator Milano that has been designed, certified, and deployed during the COVID-19 pandemic for treating pneumonia. To keep the complexity of the requirements and models under control, we exploited a compositional modeling technique for discrete-event systems based on Abstract State Machines (ASMs). Essentially, separate ASMs represent the behavior of interacting subsystems of the MVM with their new adaptive functionalities; they can communicate with each other through I/O events, and co-operate by a precise orchestration schema.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_8.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BonfantiRSS23, author = {Silvia Bonfanti and Elvinia Riccobene and Davide Santandrea and Patrizia Scandurra}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Modeling the MVM-Adapt System by Compositional {I/O} Abstract State Machines}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {107--115}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_8}, doi = {10.1007/978-3-031-33163-3\\_8}, timestamp = {Fri, 02 Jun 2023 21:23:53 +0200}, biburl = {https://dblp.org/rec/conf/zum/BonfantiRSS23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"dad557b94f9b46a9f552270bb6243c27","permalink":"/publication/bonfantirss23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/bonfantirss23/","section":"publication","summary":"Abstract With the increasing complexity and scale of software-intensive systems, model-based system development requires composable system models and composition operators. In line with such a vision, this paper describes our experience in modeling the behavior of the MVM-Adapt, an adaptive version of the Mechanical Ventilator Milano that has been designed, certified, and deployed during the COVID-19 pandemic for treating pneumonia.","tags":["ABZ'23"],"title":"Modeling the MVM-Adapt System by Compositional I/O Abstract State Machines","type":"publication"},{"authors":["Diego de Azevedo Oliveira","Marc Frappier"],"categories":[],"content":"Abstract At the ABZ2020 Conference, the case study track proposed to model an Adaptive Exterior Light System and a Speed Control System: the former controls different exterior lights of a vehicle while the latter controls the speed of a vehicle. This paper introduces a model for these two case studies using Timed Algebraic State-Transition Diagrams (TASTD). TASTD is an extension of Algebraic State-Transition Diagrams (ASTD) providing timing operators to express timing constraints. The specification makes extensive use of the TASTD modularity capabilities, thanks to its algebraic approach, to model the behaviour of different sensors and actuators separately. We validate our specification using the cASTD compiler, which translates the TASTD specification into a C++ program. This generated program can be executed in simulation mode to manually update the system clock to check timing constraints. The model is executed on the test sequences provided with the case study. The paper provides a comparison between the TASTD model and other solutions presented at the ABZ2020 Conference. The advantages of having modularisation, orthogonality, abstraction, hierarchy, real-time, and graphical representation in one notation are highlighted with the proposed model.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_10.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{OliveiraF23, author = {Diego de Azevedo Oliveira and Marc Frappier}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Modelling an Automotive Software System with {TASTD}}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {124--141}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_10}, doi = {10.1007/978-3-031-33163-3\\_10}, timestamp = {Fri, 02 Jun 2023 21:23:53 +0200}, biburl = {https://dblp.org/rec/conf/zum/OliveiraF23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f8d0a6f154acae021da0a85909b2f762","permalink":"/publication/oliveiraf23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/oliveiraf23/","section":"publication","summary":"Abstract At the ABZ2020 Conference, the case study track proposed to model an Adaptive Exterior Light System and a Speed Control System: the former controls different exterior lights of a vehicle while the latter controls the speed of a vehicle.","tags":["ABZ'23"],"title":"Modelling an Automotive Software System with TASTD","type":"publication"},{"authors":["Elie Fares","Jean-Paul Bodeveix","Mamoun Filali"],"categories":[],"content":"Abstract The Event-B method is generally used to build models incrementally by integrating high level requirements. However, developing correct systems is not a cakewalk and remains a challenging task. In this paper, we focus on the preliminary steps of the development of safety-critical systems. We investigate how patterns could be used to generate refinements automatically in the context of an Event-B development. Our main concerns are first to simplify the development of such systems by the use of patterns, and second to produce Event-B machines such that the user can choose to refine them additionally.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_3.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{FaresBF23, author = {Elie Fares and Jean{-}Paul Bodeveix and Mamoun Filali}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Pattern-Based Refinement Generation Through Domain Specific Languages}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {35--42}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_3}, doi = {10.1007/978-3-031-33163-3\\_3}, timestamp = {Fri, 02 Jun 2023 21:23:53 +0200}, biburl = {https://dblp.org/rec/conf/zum/FaresBF23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e307e8856058506fafef3b6776d68557","permalink":"/publication/faresbf23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/faresbf23/","section":"publication","summary":"Abstract The Event-B method is generally used to build models incrementally by integrating high level requirements. However, developing correct systems is not a cakewalk and remains a challenging task. In this paper, we focus on the preliminary steps of the development of safety-critical systems.","tags":["ABZ'23"],"title":"Pattern-Based Refinement Generation Through Domain Specific Languages","type":"publication"},{"authors":["Alessio Coltellacci"],"categories":[],"content":"Abstract TLAPS, the TLA+ proof system [4], is a proof assistant for the development and mechanical verification of TLA(^+) proofs.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_29.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Alessio23, author = {Alessio Coltellacci}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Reconstruction of {TLAPS} Proofs Solved by VeriT in Lambdapi}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {375--377}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_29}, doi = {10.1007/978-3-031-33163-3\\_29}, timestamp = {Tue, 23 Jul 2024 16:28:21 +0200}, biburl = {https://dblp.org/rec/conf/zum/Alessio23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e78c4b64ffba3d352955cec31f1f4cde","permalink":"/publication/coltellacci23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/coltellacci23/","section":"publication","summary":"Abstract TLAPS, the TLA+ proof system [4], is a proof assistant for the development and mechanical verification of TLA(^+) proofs.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible.","tags":["ABZ'23"],"title":"Reconstruction of TLAPS Proofs Solved by VeriT in Lambdapi","type":"publication"},{"authors":["André Platzer"],"categories":[],"content":"Abstract Hybrid dynamical systems describe the mixed discrete dynamics and continuous dynamics of cyber-physical systems such as aircraft, cars, trains, and robots. To justify correctness of their safety-critical controls for their physical models, differential dynamic logic ((\\textsf {dL})) provides deductive specification and verification techniques implemented in the theorem prover KeYmaera X. The logic (\\textsf {dL}) is useful for proving, e.g., that all runs of a hybrid dynamical system are safe (([{\\alpha }]\\varphi )), or that there is a run of the hybrid dynamical system ultimately reaching the desired goal ((\\langle {\\alpha }\\rangle {\\varphi })). Combinations of (\\textsf {dL})’s operators naturally represent safety, liveness, stability and other properties. Variations of (\\textsf {dL}) serve additional purposes. Differential refinement logic (dRL) adds an operator (\\alpha \\le \\beta ) expressing that hybrid system (\\alpha ) refines hybrid system (\\beta ), which is useful, e.g., for relating concrete system implementations to their abstract verification models. Just like (\\textsf {dL}), dRL is a logic closed under all operators, which opens up systematic ways of simultaneously relating systems and their properties, of reducing system properties to system relations or, vice versa, reducing system relations to system properties. Differential game logic (dGL) adds the ability of referring to winning strategies of players in hybrid games, which is useful for establishing correctness properties of systems where the actions of different agents may interfere. (\\textsf {dL}) and its variations have been used in KeYmaera X for verifying ground robot obstacle avoidance, the Next-Generation Airborne Collision Avoidance System ACAS X, and the kinematics of train control in the Federal Railroad Administration model with track terrain influence and air pressure brake propagation.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_1.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Platzer23, author = {Andr{\\'{e}} Platzer}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Refinements of Hybrid Dynamical Systems Logic}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {3--14}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_1}, doi = {10.1007/978-3-031-33163-3\\_1}, timestamp = {Fri, 02 Jun 2023 21:23:53 +0200}, biburl = {https://dblp.org/rec/conf/zum/Platzer23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"9564994d9f1ae97c9d85442d37a502cd","permalink":"/publication/platzer23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/platzer23/","section":"publication","summary":"Abstract Hybrid dynamical systems describe the mixed discrete dynamics and continuous dynamics of cyber-physical systems such as aircraft, cars, trains, and robots. To justify correctness of their safety-critical controls for their physical models, differential dynamic logic ((\\textsf {dL})) provides deductive specification and verification techniques implemented in the theorem prover KeYmaera X.","tags":["ABZ'23"],"title":"Refinements of Hybrid Dynamical Systems Logic","type":"publication"},{"authors":["Peter Riviere","Neeraj Kumar Singh 0001","Yamine Aït-Ameur","Guillaume Dupont"],"categories":[],"content":"Abstract Event-B is a state-based correct-by-construction system design formal method relying on proof and refinement where system models are expressed using set theory and First Order Logic (FOL). Through the generation and discharging of proof obligations (POs), Event-B natively supports the establishment of properties such as safety invariant, convergence and refinement. Other properties, relevant to system verification, may be studied as well, but need to be explicitly formalised by the designer, or expressed in another formal method. This process compromises reusability and is error-prone, especially on larger systems. Recently, the reflexive EB4EB framework has been proposed for formalising Event-B concepts as first-class objects. It allows manipulating these concepts using FOL and set theory in Event-B. In this paper, we propose a rigorous methodology for extending the EB4EB framework, to support new system analysis mechanisms associated to properties that are not natively present in core Event-B. Thanks to the reflexive nature of this framework, new generic and reusable system properties and their associated POs are expressed once and for all, and for any refinement level. For specific systems, designers instantiate these properties and the associated POs are automatically generated and submitted to Event-B’s provers. This methodology is used to define three analyses: deadlock-freeness, invariant weakness analysis and reachability, all of which are demonstrated on a case study.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_15.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{RiviereSAD23, author = {Peter Riviere and Neeraj Kumar Singh and Yamine A{\\\u0026quot;{\\i}}t{-}Ameur and Guillaume Dupont}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Standalone Event-B Models Analysis Relying on the {EB4EB} Meta-theory}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {193--211}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_15}, doi = {10.1007/978-3-031-33163-3\\_15}, timestamp = {Tue, 23 May 2023 09:57:42 +0200}, biburl = {https://dblp.org/rec/conf/zum/RiviereSAD23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d9761095509c2acbf5efe5a99abe1a0e","permalink":"/publication/rivieresad23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/rivieresad23/","section":"publication","summary":"Abstract Event-B is a state-based correct-by-construction system design formal method relying on proof and refinement where system models are expressed using set theory and First Order Logic (FOL). Through the generation and discharging of proof obligations (POs), Event-B natively supports the establishment of properties such as safety invariant, convergence and refinement.","tags":["ABZ'23"],"title":"Standalone Event-B Models Analysis Relying on the EB4EB Meta-theory","type":"publication"},{"authors":["Alcino Cunha","Nuno Macedo 0001","Eunsuk Kang"],"categories":[],"content":"Abstract This paper describes a methodology for task model design and analysis using the Alloy Analyzer, a formal, declarative modeling tool. Our methodology leverages (1) a formalization of the HAMSTERS task modeling notation in Alloy and (2) a method for encoding a concrete task model and compose it with a model of the interactive system. The Analyzer then automatically verifies the overall model against desired properties, revealing counter-examples (if any) in terms of interaction scenarios between the operator and the system. In addition, we demonstrate how Alloy can be used to encode various types of operator errors (e.g., inserting or omitting an action) into the base HAMSTERS model and generate erroneous interaction scenarios. Our methodology is applied to a task model describing the interaction of a traffic air controller with a semi-autonomous Arrival MANager (AMAN) planning tool.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_23.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{CunhaMK23, author = {Alcino Cunha and Nuno Macedo and Eunsuk Kang}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Task Model Design and Analysis with Alloy}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {303--320}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_23}, doi = {10.1007/978-3-031-33163-3\\_23}, timestamp = {Tue, 25 Jun 2024 21:03:18 +0200}, biburl = {https://dblp.org/rec/conf/zum/CunhaMK23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"318934b7214694c97755a115947601b7","permalink":"/publication/cunhamk23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/cunhamk23/","section":"publication","summary":"Abstract This paper describes a methodology for task model design and analysis using the Alloy Analyzer, a formal, declarative modeling tool. Our methodology leverages (1) a formalization of the HAMSTERS task modeling notation in Alloy and (2) a method for encoding a concrete task model and compose it with a model of the interactive system.","tags":["ABZ'23"],"title":"Task Model Design and Analysis with Alloy","type":"publication"},{"authors":["Diego de Azevedo Oliveira","Marc Frappier"],"categories":[],"content":"Abstract In ASTD, real-time models are not natively supported. Real-time requirements are pervasive in many systems, like control systems and cybersecurity. Timed Algebraic State Transition Diagrams (TASTD) is an extension of ASTD capable of specifying real-time models. TASTD gives ASTD the capability to handle time with new algebraic operators. This paper describes the syntax and semantics of these new time operators: delay, persistent delay, timeout, persistent timeout, and timed interrupt. These new time operators are specified using two new operators, persistent guard and interrupt. To illustrate our extension, we present a small case study of a sensor where we want to detect potential anomalies.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_11.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{OliveiraF23a, author = {Diego de Azevedo Oliveira and Marc Frappier}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {{TASTD:} {A} Real-Time Extension for {ASTD}}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {142--159}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_11}, doi = {10.1007/978-3-031-33163-3\\_11}, timestamp = {Fri, 02 Jun 2023 21:23:53 +0200}, biburl = {https://dblp.org/rec/conf/zum/OliveiraF23a.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"8fd239950d4c4d1acbc444204d1e83bc","permalink":"/publication/oliveiraf23a/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/oliveiraf23a/","section":"publication","summary":"Abstract In ASTD, real-time models are not natively supported. Real-time requirements are pervasive in many systems, like control systems and cybersecurity. Timed Algebraic State Transition Diagrams (TASTD) is an extension of ASTD capable of specifying real-time models.","tags":["ABZ'23"],"title":"TASTD: A Real-Time Extension for ASTD","type":"publication"},{"authors":["Gerhard Schellhorn","Stefan Bodenmüller","Wolfgang Reif"],"categories":[],"content":"Abstract This paper presents a proof technique for proving refinements for general state-based models of concurrent systems that reduces proving forward simulations to thread-local, step-local proof obligations. Instances of this proof technique should be applicable to systems specified with ASM rules, B events, or Z operations. To exemplify the proof technique, we demonstrate it with a simple case study that verifies linearizability of a lock-free implementation of concurrent hash sets by showing that it refines an abstract concurrent system with atomic operations. Our theorem prover KIV translates programs to a set of transition rules and generates proof obligations according to the technique.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_6.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SchellhornBR23, author = {Gerhard Schellhorn and Stefan Bodenm{\\\u0026quot;{u}}ller and Wolfgang Reif}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Thread-Local, Step-Local Proof Obligations for Refinement of State-Based Concurrent Systems}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {70--87}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_6}, doi = {10.1007/978-3-031-33163-3\\_6}, timestamp = {Mon, 26 Jun 2023 20:49:09 +0200}, biburl = {https://dblp.org/rec/conf/zum/SchellhornBR23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"76558a92ea933ded3df35bcee16d612d","permalink":"/publication/schellhornbr23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/schellhornbr23/","section":"publication","summary":"Abstract This paper presents a proof technique for proving refinements for general state-based models of concurrent systems that reduces proving forward simulations to thread-local, step-local proof obligations. Instances of this proof technique should be applicable to systems specified with ASM rules, B events, or Z operations.","tags":["ABZ'23"],"title":"Thread-Local, Step-Local Proof Obligations for Refinement of State-Based Concurrent Systems","type":"publication"},{"authors":["Achim D. Brucker","Idir Aït-Sadoune","Nicolas Méric","Burkhart Wolff"],"categories":[],"content":"Abstract Isabelle/DOF is an ontology framework on top of Isabelle. It allows for the formal development of ontologies as well as continuous conformity-checking of integrated documents annotated by ontological data. An integrated document may contain text, code, definitions, proofs, and user-programmed constructs supporting a wide range of formal methods Isabelle/DOF is designed to leverage traceability in integrated documents by supporting navigation in Isabelle’s IDE as well as the document generation process. In this paper, we extend Isabelle/DOF with annotations of (\\lambda )-terms, a pervasive data-structure underlying Isabelle used to syntactically represent expressions and formulas. Rather than introducing an own programming language for meta-data, we use Higher-order Logic (HOL) for expressions, data-constraints, ontological invariants, and queries via code-generation and reflection. This allows both for powerful query languages and logical reasoning over ontologies in, for example, ontological mappings. Our application examples cover documents targeting formal certifications such as CENELEC 50128, or Common Criteria.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_2.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BruckerAMW23, author = {Achim D. Brucker and Idir A{\\\u0026quot;{\\i}}t{-}Sadoune and Nicolas M{\\'{e}}ric and Burkhart Wolff}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Using Deep Ontologies in Formal Software Engineering}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {15--32}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_2}, doi = {10.1007/978-3-031-33163-3\\_2}, timestamp = {Fri, 02 Jun 2023 21:23:53 +0200}, biburl = {https://dblp.org/rec/conf/zum/BruckerAMW23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"849b4878340b5e9a6a478a7b54fc0aad","permalink":"/publication/bruckeramw23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/bruckeramw23/","section":"publication","summary":"Abstract Isabelle/DOF is an ontology framework on top of Isabelle. It allows for the formal development of ontologies as well as continuous conformity-checking of integrated documents annotated by ontological data. An integrated document may contain text, code, definitions, proofs, and user-programmed constructs supporting a wide range of formal methods Isabelle/DOF is designed to leverage traceability in integrated documents by supporting navigation in Isabelle’s IDE as well as the document generation process.","tags":["ABZ'23"],"title":"Using Deep Ontologies in Formal Software Engineering","type":"publication"},{"authors":["Sebastian Stock 0002","Fabian Vu","David Geleßus","Michael Leuschel","Atif Mashkoor","Alexander Egyed"],"categories":[],"content":"Abstract While refinement can help structure the modeling and proving process, it also forces the modeler to introduce features in a particular order. This means that features deeper in the refinement chain cannot be validated in isolation, making some reasoning unnecessarily intricate. In this paper, we present the AVoiR (Abstraction-Validation Obligation-Refinement) framework to ease validation of such complex refinement chains. The triptych AVoiR framework operates as follows: 1) We first simplify a complex model by abstracting away the noise, i.e., removing the information unrelated to properties under analysis. 2) Using the Validation Obligations (VOs) technique, we formalize the validation tasks of the desired property. 3) Finally, we trickle down the validation results by establishing the noiseless model as a parent of the initially investigated model through the standard refinement relationship. Furthermore, by using the technique of VO refinement, we establish the VOs of the abstract model on the initial model. We use a case study from the aviation domain to show the proposed framework’s effectiveness.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_12.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{StockVGLME23, author = {Sebastian Stock and Fabian Vu and David Gele{\\ss}us and Michael Leuschel and Atif Mashkoor and Alexander Egyed}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Validation by Abstraction and Refinement}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {160--178}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_12}, doi = {10.1007/978-3-031-33163-3\\_12}, timestamp = {Fri, 02 Jun 2023 21:23:53 +0200}, biburl = {https://dblp.org/rec/conf/zum/StockVGLME23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7e0201d1a75741237f76492cb9aff044","permalink":"/publication/stockvglme23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/stockvglme23/","section":"publication","summary":"Abstract While refinement can help structure the modeling and proving process, it also forces the modeler to introduce features in a particular order. This means that features deeper in the refinement chain cannot be validated in isolation, making some reasoning unnecessarily intricate.","tags":["ABZ'23"],"title":"Validation by Abstraction and Refinement","type":"publication"},{"authors":["Fabian Vu","Michael Leuschel"],"categories":[],"content":"Abstract Validating requirements for safety-critical systems with user interactions often involves techniques like animation, trace replay, and LTL model checking. However, animation and trace replay can be challenging since user and system events are not distinguished, and formulating LTL properties requires expertise. This work introduces interactive simulation, a new technique that combines domain-specific visualization of formal models with timed probabilistic simulation to create more realistic prototypes. It allows domain experts and users to interact with formal models and simulate the system/environment reactions. State diagrams are also generated for inspecting user interactions and system reactions. Finally, we demonstrate interactive simulation on the ABZ automotive case study.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_5.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{VuL23, author = {Fabian Vu and Michael Leuschel}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Validation of Formal Models by Interactive Simulation}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {59--69}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_5}, doi = {10.1007/978-3-031-33163-3\\_5}, timestamp = {Fri, 02 Jun 2023 21:23:52 +0200}, biburl = {https://dblp.org/rec/conf/zum/VuL23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"916429c15727ebcc59c46b547d869a11","permalink":"/publication/vul23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/vul23/","section":"publication","summary":"Abstract Validating requirements for safety-critical systems with user interactions often involves techniques like animation, trace replay, and LTL model checking. However, animation and trace replay can be challenging since user and system events are not distinguished, and formulating LTL properties requires expertise.","tags":["ABZ'23"],"title":"Validation of Formal Models by Interactive Simulation","type":"publication"},{"authors":["Hao Wu 0017","Zheng Cheng"],"categories":[],"content":"Abstract Modelling hybrid systems using Event-B is challenging and users typically are unsure about whether their Event-B models are over/under-specified. In this short paper, we present a work-in-progress specification language called Cyclone to tackle this challenge. We demonstrate how one can use Cyclone to check an Event-B hybrid model using a car controller example. Our demonstration shows that Cyclone has a great potential to be used to verify Event-B hybrid models.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_13.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{WuC23, author = {Hao Wu and Zheng Cheng}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Verifying Event-B Hybrid Models Using Cyclone}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {179--184}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_13}, doi = {10.1007/978-3-031-33163-3\\_13}, timestamp = {Sun, 03 Mar 2024 18:44:21 +0100}, biburl = {https://dblp.org/rec/conf/zum/WuC23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"b423bc4184f6c133cf0d3f75fc34829e","permalink":"/publication/wuc23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/wuc23/","section":"publication","summary":"Abstract Modelling hybrid systems using Event-B is challenging and users typically are unsure about whether their Event-B models are over/under-specified. In this short paper, we present a work-in-progress specification language called Cyclone to tackle this challenge.","tags":["ABZ'23"],"title":"Verifying Event-B Hybrid Models Using Cyclone","type":"publication"},{"authors":["Nuno Macedo 0001","Julien Brunel","David Chemouil","Alcino Cunha"],"categories":[],"content":"Abstract This short paper summarizes an article published in the Journal of Automated Reasoning [7]. It presents (\\textsf{Pardinus}), an extension of the popular (\\textsf{Kodkod}) [12] relational model finder with linear temporal logic (including past operators) to simplify the analysis of dynamic systems. (\\textsf{Pardinus}) includes a SAT-based bounded model checking engine and an SMV-based complete model checking engine, both allowing iteration through the different instances (or counterexamples) of a specification. It also supports a decomposed parallel analysis strategy that improves the efficiency of both analysis engines on commodity multi-core machines.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-031-33163-3_20.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MacedoBCC23, author = {Nuno Macedo and Julien Brunel and David Chemouil and Alcino Cunha}, editor = {Uwe Gl{\\\u0026quot;{a}}sser and Jos{\\'{e}} Creissac Campos and Dominique M{\\'{e}}ry and Philippe A. Palanque}, title = {Verifying Temporal Relational Models with Pardinus}, booktitle = {Rigorous State-Based Methods - 9th International Conference, {ABZ} 2023, Nancy, France, May 30 - June 2, 2023, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {14010}, pages = {254--261}, publisher = {Springer}, year = {2023}, url = {https://doi.org/10.1007/978-3-031-33163-3\\_20}, doi = {10.1007/978-3-031-33163-3\\_20}, timestamp = {Tue, 25 Jun 2024 21:03:18 +0200}, biburl = {https://dblp.org/rec/conf/zum/MacedoBCC23.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"1ecd93f21292de4b4f135590f804f9e4","permalink":"/publication/macedobcc23/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/publication/macedobcc23/","section":"publication","summary":"Abstract This short paper summarizes an article published in the Journal of Automated Reasoning [7]. It presents (\\textsf{Pardinus}), an extension of the popular (\\textsf{Kodkod}) [12] relational model finder with linear temporal logic (including past operators) to simplify the analysis of dynamic systems.","tags":["ABZ'23"],"title":"Verifying Temporal Relational Models with Pardinus","type":"publication"},{"authors":null,"categories":null,"content":"The Alloy language can be used to describe structures based on a collection of constraints. This created Alloy model can then be analyzed by the Alloy Analyzer, a solver that finds concrete structures that satisfy the constraints defined in the Alloy model. The analysis can be used to generate sample structures or to check properties of these structures by trying to generate counterexamples. Alloy is based on the Z specification language and Tarski\u0026rsquo;s relational calculus.\n http://alloytools.org/\n","date":1623801600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7276fbcb98bf5f3153ef6377c98dfbd7","permalink":"/method/alloy/","publishdate":"2021-06-16T00:00:00Z","relpermalink":"/method/alloy/","section":"method","summary":"The Alloy language can be used to describe structures based on a collection of constraints. This created Alloy model can then be analyzed by the Alloy Analyzer, a solver that finds concrete structures that satisfy the constraints defined in the Alloy model.","tags":null,"title":"Alloy","type":"method"},{"authors":null,"categories":null,"content":"Classical B (or just B) focuses on a tool-based refinement of a formal specification to code. It is based on the Z notation but slightly more low-level. In B a system consists of an abstract machine in which the modeler specifies the goal of the system. Via several refinement steps, this abstract goal is enhanced by more details on a less abstract level by adding details about data structures and algorithms that define how the goal is achieved. All steps are proven correct until a deterministic version (the implementation) is reached.\n https://methode-b.com\nEvent-B is an evolution of B with a simpler notation. Similar to B a system is modeled by different abstraction levels that are connected by a rigorous refinement proven correct. Whereas the B-method is intended to the development of correct-by-construction software, the purpose of Event-B is to model full systems (including hardware and operation environment). These two languages share almost the same mathematical language.\n http://www.event-b.org/\n","date":1623801600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7b94850c0fee28a3b31863ce754a4426","permalink":"/method/b/","publishdate":"2021-06-16T00:00:00Z","relpermalink":"/method/b/","section":"method","summary":"Classical B (or just B) focuses on a tool-based refinement of a formal specification to code. It is based on the Z notation but slightly more low-level. In B a system consists of an abstract machine in which the modeler specifies the goal of the system.","tags":null,"title":"B / Event-B","type":"method"},{"authors":null,"categories":null,"content":"Prof. Elvinia Riccobene  Università degli Studi di Milano  Dipartimento di Informatica  via Celoria, 18 20135 Milano, Italy\n Prof. Yamine AIT-AMEUR  INPT-ENSEEIHT/IRIT  Bat. F. Bureau F306  2, Rue Charles Camichel BP 7122  31071 Toulouse CEDEX 7, France\n  +39-2-503-300-55  $elvinia.riccobene@unimi.it$   +33-5-34-32-22-55  $yamine@n7.fr$     ","date":1623801600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"3bf44c81f2a197de01edde90bcd77783","permalink":"/team/","publishdate":"2021-06-16T00:00:00Z","relpermalink":"/team/","section":"","summary":"Prof. Elvinia Riccobene  Università degli Studi di Milano  Dipartimento di Informatica  via Celoria, 18 20135 Milano, Italy\n Prof. Yamine AIT-AMEUR  INPT-ENSEEIHT/IRIT  Bat. F. Bureau F306  2, Rue Charles Camichel BP 7122  31071 Toulouse CEDEX 7, France","tags":null,"title":"Committee","type":"page"},{"authors":null,"categories":null,"content":"TLA+ (Temporal Logic of Actions) was developed by Leslie Lamport to model, document, and verify especially concurrent and distributed systems. The language aims for defining the set of all correct system behaviors. It is organized in modules that contain a definition of states and (conditional) state transitions in form of steps. A \u0026ldquo;next-state-relations\u0026rdquo; defines how variables can change in any step. Similar to Z, B, and Event-B TLA+ is based on the Zermelo-Fraenkel set theory, but extended with built-in temporal logic operators.\n http://lamport.azurewebsites.net/tla/tla.html\n","date":1623801600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"394ef4b51b2de94fed52193250c65a6f","permalink":"/method/tla/","publishdate":"2021-06-16T00:00:00Z","relpermalink":"/method/tla/","section":"method","summary":"TLA+ (Temporal Logic of Actions) was developed by Leslie Lamport to model, document, and verify especially concurrent and distributed systems. The language aims for defining the set of all correct system behaviors.","tags":null,"title":"Temporal Logic of Actions (TLA)","type":"method"},{"authors":null,"categories":null,"content":"In the Vienna Development Method (VDM) models consist of a rich representation of data on which a system operates, together with the functionality that should be executed on these data structures. Besides the internal data also external input/output data is considered in the models.\nThe functional behavior can be either defined abstract by pre- and postconditions or explicitly by specific state-based operations. The precise mathematical semantics of these definitions allows for a wide range of analyses, e.g. static analysis, testing or proof of properties of the sytem.\n https://www.overturetool.org/method/\n","date":1623801600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"3533165b813f9175ef49d1707555b691","permalink":"/method/vdm/","publishdate":"2021-06-16T00:00:00Z","relpermalink":"/method/vdm/","section":"method","summary":"In the Vienna Development Method (VDM) models consist of a rich representation of data on which a system operates, together with the functionality that should be executed on these data structures.","tags":null,"title":"Vienna Development Method (VDM)","type":"method"},{"authors":null,"categories":null,"content":"Z is the \u0026ldquo;ultimate language\u0026rdquo; as stated by Jean-Raymond Abrial who invented this formal specification language in 1977. This language aims for a precise and clear specification of computer-based systems based on the Zermelo-Fraenkel set theory, lambda calculus, and first-order predicate logic. The main elements of Z are so-called \u0026ldquo;schemata\u0026rdquo; that consist of typed variables and constraints on the assignment of these. Z provides a standardized catalogue of often used mathematical functions and predicates.\n http://www.zuser.org/\n","date":1623801600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"b57ad51414d1d3b9bbeee361ee75c097","permalink":"/method/z/","publishdate":"2021-06-16T00:00:00Z","relpermalink":"/method/z/","section":"method","summary":"Z is the \u0026ldquo;ultimate language\u0026rdquo; as stated by Jean-Raymond Abrial who invented this formal specification language in 1977. This language aims for a precise and clear specification of computer-based systems based on the Zermelo-Fraenkel set theory, lambda calculus, and first-order predicate logic.","tags":null,"title":"Z Notation","type":"method"},{"authors":null,"categories":null,"content":"Bergamo (Italy) - Jun 25, 2024 — Jun 28, 2024 The ABZ conference is dedicated to the cross-fertilization of state-based and machine-based formal methods, like Abstract State Machines (ASM), Alloy, B, TLA, VDM and Z, that share a common conceptual foundation and are widely used in both academia and industry for the design and analysis of hardware and software systems. The conference aims for a vital exchange of knowledge and experience among the research communities around different formal methods.\nProceedings online accessible Free access to the ABZ 2024 Proceedings until 31 July 2024: Rigorous State-Based Methods, ABZ 2024, LNCS\n Supporters     ","date":1623798e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"b0cbdab8deade4245bf30d480ffaac7f","permalink":"/site/2024/","publishdate":"2021-06-16T00:00:00+01:00","relpermalink":"/site/2024/","section":"site","summary":"Bergamo (Italy) - Jun 25, 2024 — Jun 28, 2024 The ABZ conference is dedicated to the cross-fertilization of state-based and machine-based formal methods, like Abstract State Machines (ASM), Alloy, B, TLA, VDM and Z, that share a common conceptual foundation and are widely used in both academia and industry for the design and analysis of hardware and software systems.","tags":null,"title":"ABZ 2024 – 10th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Accommodation The following list of hotels is just a suggestion of nearby places for accommodation with the relative distance (by foot) to the venue:\n  ARLI Hotel Business \u0026amp; Wellness (1.6 km)  Best Western Cappello D\u0026rsquo;Oro (1.6 km)  Hotel Mercure (1.7 km)  Excelsior San Marco (1.1 km)  All these hotels are in the central street of Bergamo, in the lower city, which leads to the venue.\nOther accommodations can be found using Booking or Google Maps, sorted by distance, both in the lower city and in the upper city (closer to the venue).\n","date":1623798e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7a61702c5afa105d20aca16007264af3","permalink":"/site/2024/accommodation/","publishdate":"2021-06-16T00:00:00+01:00","relpermalink":"/site/2024/accommodation/","section":"site","summary":"Accommodation The following list of hotels is just a suggestion of nearby places for accommodation with the relative distance (by foot) to the venue:\n  ARLI Hotel Business \u0026amp; Wellness (1.","tags":null,"title":"ABZ 2024 – 10th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Call for papers The ABZ conference is dedicated to the cross-fertilization of state-based and machine-based formal methods, like Abstract State Machines (ASM), Alloy, B, TLA, VDM and Z, that share a common conceptual foundation and are widely used in both academia and industry for the design and analysis of hardware and software systems. The conference aims for a vital exchange of knowledge and experience among the research communities around different formal methods.\nThe name ABZ goes back to the first conference in London in 2008, where the ASM, B and Z conference series were merged into a joint event. In the following years other formal methods were added, e.g. Alloy in 2010 (Orford, Canada), VDM in 2012 (Pisa, Italy), and TLA + in 2014 (Toulouse, France). After the also successful 2016 conferences in Linz, Austria and 2018 in Southampton, UK, it was decided to name the conference \u0026ldquo;ABZ: International Conference on Rigorous State Based Methods\u0026rdquo;, to stress the openness for further state-based formal methods. We hope to continue many fruitful discussions between representatives of the individual methods in the past, which will bring us closer to the common goal of this research community: the creation of reliable and safe software.\nABZ 2024 will have a main conference track, a case study track, a doctoral symposium, tutorials, and workshops.\n  Main Conference  Case Study  Doctoral Symposium  Tutorials and Workshops  Accepted papers will appear in the Springer LNCS proceedings.\n Submission Process Authors should consult Springer\u0026rsquo;s authors' guidelines and use their proceedings templates, either for LaTeX or for Word, for the preparation of their papers. Springer encourages authors to include their ORCIDs in their papers. In addition, the corresponding author of each paper, acting on behalf of all of the authors of that paper, must complete and sign a Consent-to-Publish form. The corresponding author signing the copyright form should match the corresponding author marked on the paper. Once the files have been sent to Springer, changes relating to the authorship of the papers cannot be made.\nAuthors interested in contributing to ABZ 2024 in Open Access or Open Choice should refer to the corresponding Springer webpage.\nSubmit contribution\nvia EquinOCS\nEquinOCS guidelines for authors can be found here\n","date":1623798e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"bd0ae86d5fa1e2ac0170605f1535bbd7","permalink":"/site/2024/calls/","publishdate":"2021-06-16T00:00:00+01:00","relpermalink":"/site/2024/calls/","section":"site","summary":"Call for papers The ABZ conference is dedicated to the cross-fertilization of state-based and machine-based formal methods, like Abstract State Machines (ASM), Alloy, B, TLA, VDM and Z, that share a common conceptual foundation and are widely used in both academia and industry for the design and analysis of hardware and software systems.","tags":null,"title":"ABZ 2024 – 10th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Case Study - Call for Papers As successfully practiced in previous editions of ABZ, the 10th edition of ABZ will include again special sessions dedicated to a shared real-life case study.\nThe objective of this session is to enrich the set of case studies ( https://abz-conf.org/case-studies/) developed with Rigorous State Based Methods with a practical and real-life case study.\nThe case study proposed in this edition is the Mechanical Lung Ventilator (MLV). The MLV is intended to provide ventilation support for patients that require mechanical ventilation in two operative modes: Pressure Controlled Ventilation (PCV) and Pressure Support Ventilation (PSV). The former is used when patients are not able to start breathing on their own, while the latter support patients by partially taking over the work of breathing.\nThe suggested outcomes (as reported in the specification document) are:\n A classical approach consists in modeling the system or part of it and applying the classical V\u0026amp;V activities, like formal verification of the correctness or validation of scenarios. One could check that the behavior of the system is correct, like in case of some types of errors, the system goes into a fail-safe mode. A critical aspect of the system is its temporal behavior. Many properties and constraints have explicit temporal requirements (like after 10 seconds \u0026hellip;). One could model these aspects and make a temporal analysis of the system. After the good experience of ABZ2022, we decided to also include the GUI. Research activities could refer to modeling this critical component and analyzing the human-computer interaction. Generation of executable source code and implement a prototype of the ventilator on a simple electronic board like Arduino (or part of it).  All the pdf versions of the specification document are available here (we keep track of all the changes in the documents): https://github.com/foselab/abz2024_casestudy_MLV\nAll the questions and doubts can be discussed here: https://github.com/foselab/abz2024_casestudy_MLV/issues\nIf you have any question/comment on the case study, you can contact:\n Silvia Bonfanti, University of Bergamo, silvia.bonfanti@unibg.it Angelo Gargantini, University of Bergamo, angelo.gargantini@unibg.it ABZ 2024, abz2024@unibg.it  ABZ 2024 invites:  Case study papers: Full papers reporting on the experiments conducted with any of the state based techniques in the scope of ABZ 2024 case study. A paper of no more than 16 pages (excluding references) in LNCS format is expected and will be reviewed.   Accepted papers will appear in the Springer LNCS proceedings.\nSubmission Process Authors should consult Springer\u0026rsquo;s authors' guidelines and use their proceedings templates, either for LaTeX or for Word, for the preparation of their papers. Springer encourages authors to include their ORCIDs in their papers. In addition, the corresponding author of each paper, acting on behalf of all of the authors of that paper, must complete and sign a Consent-to-Publish form. The corresponding author signing the copyright form should match the corresponding author marked on the paper. Once the files have been sent to Springer, changes relating to the authorship of the papers cannot be made.\nAuthors interested in contributing to ABZ 2024 in Open Access or Open Choice should refer to the corresponding Springer webpage.\nSubmit contribution\nvia EquinOCS\nEquinOCS guidelines for authors can be found here\nImportant Dates          Abstract submission (mandatory): February 3, 2024 February 10, 2024   Paper submission (firm deadline): February 10, 2024 February 24, 2024   Notification: April 6, 2024 April 9, 2024   Final version: April 20, 2024    ","date":1623798e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"5f486a244c29467953a01ca0c1405e12","permalink":"/site/2024/casestudy/","publishdate":"2021-06-16T00:00:00+01:00","relpermalink":"/site/2024/casestudy/","section":"site","summary":"Case Study - Call for Papers As successfully practiced in previous editions of ABZ, the 10th edition of ABZ will include again special sessions dedicated to a shared real-life case study.","tags":null,"title":"ABZ 2024 – 10th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Doctoral Symposium - Call for Papers The ABZ PhD Symposium is an international forum for PhD students studying all areas related to state based formal methods for software and system development.\nThis forum is a good opportunity for PhD students to\n bring together PhD students and established and known researchers of the state based formal methods community, provide PhD students with fruitful feedback and advice on their research approach, enable PhD students to interact with other PhD students and to stimulate exchange of ideas suggestions and experiences among participants, provide PhD students an opportunity to present, share and discuss their research in a constructive and critical atmosphere.  We seek PhD students who have either determined the direction of their thesis research (probably with some preliminary results already published), but who still have substantial work to complete, or PhD student participants who are in the early stages of their dissertations. It is not required to have a paper accepted for the main conference in order to participate to the ABZ 2024 Doctoral Symposium.\nABZ 2024 invites:  Contribution to doctoral symposium: This is an excellent opportunity for PhD students to present their ongoing work and receive valuable feedback from the ABZ community. A paper of no more than 4 pages (excluding references) in LNCS format is expected and will be reviewed.  Preferably, submissions should include\n Title of the paper and the author name Problem statement, motivations, and progress Current development and related work Proposed solutions, approach and methodology, and their significance Current results and assessement Future work   Accepted papers will be published in the Springer LNCS proceedings.\nSubmission Process Authors should consult Springer\u0026rsquo;s authors' guidelines and use their proceedings templates, either for LaTeX or for Word, for the preparation of their papers.Springer encourages authors to include their ORCIDs in their papers. In addition, the corresponding author of each paper, acting on behalf of all of the authors of that paper, must complete and sign a Consent-to-Publish form. The corresponding author signing the copyright form should match the corresponding author marked on the paper. Once the files have been sent to Springer, changes relating to the authorship of the papers cannot be made.\nAuthors interested in contributing to ABZ 2024 in Open Access or Open Choice should refer to the corresponding Springer webpage.\nSubmit contribution\nvia EquinOCS\nEquinOCS guidelines for authors can be found here\nImportant Dates          Paper submission: February 24, 2024   Notification: April 6, 2024 April 9, 2024   Final version: April 20, 2024    ","date":1623798e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"3ad8af61b7245ed5fe2536e9ccb99e95","permalink":"/site/2024/doctoralsymposium/","publishdate":"2021-06-16T00:00:00+01:00","relpermalink":"/site/2024/doctoralsymposium/","section":"site","summary":"Doctoral Symposium - Call for Papers The ABZ PhD Symposium is an international forum for PhD students studying all areas related to state based formal methods for software and system development.","tags":null,"title":"ABZ 2024 – 10th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Important Dates All dates anywhere on earth\nWorkshops/Tutorials          Workshop proposal submission: December 01, 2023   Workshop notification: December 15, 2023   Tutorial proposal submission: March 16, 2024    Case Study Track          Abstract submission (mandatory): February 3, 2024 February 10, 2024   Paper submission (firm deadline): February 10, 2024 February 24, 2024   Notification: April 6, 2024   Final version: April 20, 2024    Main Track          Abstract submission (mandatory): February 3, 2024 February 10, 2024   Paper submission (firm deadline, including research/short/industry/journal-first papers): February 10, 2024 February 24, 2024   Notification: April 6, 2024 April 9, 2024   Final version: April 20, 2024    Doctoral Symposium          Paper submission: February 24, 2024   Notification: April 6, 2024   Final version: April 20, 2024    Conference          Workshps and Tutorials (Bergamo, Italy) June 25, 2024   ABZ 2024 Conference (Bergamo, Italy) June 26-28, 2024    ","date":1623798e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c90fa499878501968a487ec48ea128fd","permalink":"/site/2024/importantdates/","publishdate":"2021-06-16T00:00:00+01:00","relpermalink":"/site/2024/importantdates/","section":"site","summary":"Important Dates All dates anywhere on earth\nWorkshops/Tutorials          Workshop proposal submission: December 01, 2023   Workshop notification: December 15, 2023   Tutorial proposal submission: March 16, 2024    Case Study Track          Abstract submission (mandatory): February 3, 2024 February 10, 2024   Paper submission (firm deadline): February 10, 2024 February 24, 2024   Notification: April 6, 2024   Final version: April 20, 2024    Main Track          Abstract submission (mandatory): February 3, 2024 February 10, 2024   Paper submission (firm deadline, including research/short/industry/journal-first papers): February 10, 2024 February 24, 2024   Notification: April 6, 2024 April 9, 2024   Final version: April 20, 2024    Doctoral Symposium          Paper submission: February 24, 2024   Notification: April 6, 2024   Final version: April 20, 2024    Conference          Workshps and Tutorials (Bergamo, Italy) June 25, 2024   ABZ 2024 Conference (Bergamo, Italy) June 26-28, 2024    ","tags":null,"title":"ABZ 2024 – 10th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Keynote speakers Here it is the list of keynote speakers (in alphabetic order by name).\nDavid Basin @ ETH Zurich       Getting Electronic Payments Right\n- Lecture partially supported by FME   Abstract EMV is the international protocol standard for smartcard payments and is used in billions of payment cards worldwide. Despite the standard’s advertised security, various issues have been previously uncovered, deriving from logical flaws that are hard to spot in EMV’s lengthy and complex specification, running over 2,000 pages. We have formalized various models of EMV in Tamarin, a symbolic model checker for cryptographic protocols. Tamarin was extremely effective in finding critical flaws, both known and new. For example, we discovered multiple ways that an attacker can use a victim's EMV card (e.g., Mastercard or Visa Card) for high-valued purchases without the victim's supposedly required PIN. Said more simply, the PIN on your EMV card is useless! We report on this, as well as follow-up work with an EMV consortium member on verifying the latest, improved version of the protocol, the EMV Kernel C-8. Overall our work provides evidence that security protocol model checkers like Tamarin have an essential role to play in developing real-world payment protocols and that they are up to this challenge.   Short Bio David Basin is a full professor of Computer Science at ETH Zurich, since 2003. His research areas are Information Security and Software Engineering. He is the founding director of the ZISC, the Zurich Information Security Center, which he led from 2003-2011. He served as Editor-in-Chief of the ACM Transactions on Privacy and Security (2015-2020) and of Springer-Verlag's book series on Information Security and Cryptography (2008-present). He has co-founded three security companies, is on the board of directors of Anapaya Systems AG, and on various management and scientific advisory boards. He is an IEEE Fellow and an ACM Fellow.       Joe Kiniry @ Galois Inc.       What happens when the Government starts encouraging the use of formal methods?   Abstract Over the past decade, US Government R\u0026amp;D RFPs have gone from never mentioning formal methods to frequently mandating formal methods. What's more, several recent White House reports have explicitly called out formal methods. For example, the 2016 NIST Interagency Report \"Dramatically Reducing Software Vulnerabilities: Report to the White House Office of Science and Technology Policy\" calls out formal methods as one of five key technical approaches critical to fulfilling the goals set forth in the US Government's 2016 Federal Cybersecurity R\u0026amp;D Strategic Plan. More recently, in February 2024 the Office of the National Cyber Director (ONCD) published the report \"Back to the Building Blocks: A Path Toward Secure and Measurable Software\" in response to President Biden's National Cybersecurity Strategy and in alignment with Executive Order 14028 on Improving the Nation's Cybersecurity, issued in 2021. Its abstract states:  \"In this report, the case is made that the technical community is well-positioned to drive progress on both strategic goals. First, in order to reduce memory safety vulnerabilities at scale, creators of software and hardware can better secure the building blocks of cyberspace. This report focuses on the programming language as a primary building block, and explores hardware architecture and formal methods as complementary approaches to achieve similar outcomes. Second, in order to establish accurate cybersecurity quality metrics, advances can be made to address the hard and complex research problem of software measurability. This report explores how such metrics can shift market forces to improve cybersecurity quality across the ecosystem. In essence, the US Government is now strongly recommending that nationally critical systems are written in safe programming languages, models and implementations of critical components must be formally assured, and that code should run on security-centric hardware architectures.\" This talk reflects upon this evolution over the past ten years from my point of view as a PI of dozens of major formal methods-centric R\u0026amp;D programs for the Government and industry. Why has there been such an uptick in interest? What are the R\u0026amp;D challenges that lie ahead? How might we, as a community, prioritize R\u0026amp;D activities for transition? What can the ABZ community learn from this arc? What's next?   Short Bio Dr. Joe Kiniry is a Principal Scientist at Galois and is the CEO and Chief Scientist at Free \u0026 Fair. Over the past twenty-five years he has been everything from a tenured professor at several universities to a founder and chief scientist or CTO at several companies. He has been involved in security in some fashion since the early 80s when he hacked and wrote video games on 8 bit computers. These days, his day job is applying formal methods to nationally critical systems and trying to help the worlds’ elections and democracies be more trustworthy.       Maurice ter Beek @ ISTI, CNR       Formal Methods and Tools applied in the railway domain\n- Lecture partially supported by FME   Abstract ABZ and other state-based formal methods and tools are successfully applied to the development of safety-critical systems for decades now, in particular in the transport domain, without a single language or tool emerging as the dominant solution for system design. Formal methods are highly recommended by the current safety standards in the railway industry, but railway engineers often lack the knowledge to transform their semi-formal models into formal models, with a precise semantics, to serve as input to formal methods tools. We share the results of performing empirical studies in the railway domain, including usability analyses of formal methods tools involving railway practitioners. We discuss, in particular with respect to railway systems and their modelling, our experiences in applying rigorous state-based methods and tools to a variety of case studies, for which we interacted with a number of companies from the railway domain. We report on lessons learned from these experiences and provide pointers to drive future research towards facilitating further synergies between - on the one hand - researchers and developers of ABZ and other state-based formal methods and tools, and - on the other hand - practitioners from the railway industry.   Short Bio Maurice ter Beek is senior researcher at CNR-ISTI (Pisa, Italy) where he heads the Formal Methods and Tools lab. He obtained his Ph.D. at Leiden University (The Netherlands). He has authored over 150 peer-reviewed papers, edited over 30 proceedings and special issues of journals, and serves on the editorial boards of the journals Formal Aspects of Computing, International Journal on Software Tools for Technology Transfer, Journal of Logical and Algebraic Methods in Programming, Science of Computer Programming, PeerJ Computer Science and ERCIM News. His research interests are formal methods and model-checking tools for the specification and verification of safety-critical software systems and communication protocols, focusing in particular on applications in software product line engineering and railway systems. He is member of the Steering Committees of the COORDINATION, ETAPS, FMICS (currently chair), iFM and SPLC conference series, and regularly serves on the PC of relevant formal methods and software product line conferences like FM, FMICS, iFM, SPLC and VaMoS, all of which he also chaired, and ABZ, FASE, FormaliSE, SEFM and SPIN. He is board member of Formal Methods Europe (FME).       ","date":1623798e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"3ec41fd464bcbb87b414e268c8728ef5","permalink":"/site/2024/keynotes/","publishdate":"2021-06-16T00:00:00+01:00","relpermalink":"/site/2024/keynotes/","section":"site","summary":"Keynote speakers Here it is the list of keynote speakers (in alphabetic order by name).\nDavid Basin @ ETH Zurich       Getting Electronic Payments Right","tags":null,"title":"ABZ 2024 – 10th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Main ABZ Track - Call for Papers Contributions are solicited on all aspects of the theory and applications of ASMs, Alloy, B, TLA, VDM, Z and other state-based rigour approaches in software/hardware engineering, including the development of tools and industrial applications. The program spans from theoretical and methodological foundations to practical applications, emphasizing system engineering methods and tools that are distinguished by mathematical rigor and have proved to be industrially viable. The main goal of the conference is to contribute to the integration of accurate state- and machine-based system development methods, clarifying their commonalities and differences to better understand how to combine different approaches for accomplishing the various tasks in modeling, experimental validation, mathematical verification of reliable high-quality hardware/software systems. Although organized to host several formal methods in a single event, editorial control of the joint conference is vested in one integrated program committee.\nABZ 2024 invites:  Full research papers: Full research papers which have to be original, unpublished and not submitted elsewhere. A paper of no more than 16 pages (excluding references) in LNCS format is expected and will be reviewed. Short papers: Short papers to present and validate a work in progress or tool demonstrations. A paper of no more than 6 pages (excluding references) in LNCS format is expected and will be reviewed. Application in industry papers: Reporting on work or experiences on the application of state based formal methods in industry. A paper of no more than 8 pages (excluding references) in LNCS format is expected and will be reviewed. It is also an interesting option for industrial practitioners who sometimes face too many constraints to prepare a full paper. Journal-First papers: Journal-First paper summarize recently published papers in high-quality journals. The aim of journal-first papers is to further enrich the program of ABZ and to provide more visibility to an already published journal papers in the scope of the ABZ conference. An extended abstract of no more than 6 pages (excluding references) in LNCS format is expected and will be reviewed.   Accepted papers will appear in the Springer LNCS proceedings.\nSubmission Process Authors should consult Springer\u0026rsquo;s authors' guidelines and use their proceedings templates, either for LaTeX or for Word, for the preparation of their papers. Springer encourages authors to include their ORCIDs in their papers. In addition, the corresponding author of each paper, acting on behalf of all of the authors of that paper, must complete and sign a Consent-to-Publish form. The corresponding author signing the copyright form should match the corresponding author marked on the paper. Once the files have been sent to Springer, changes relating to the authorship of the papers cannot be made.\nAuthors interested in contributing to ABZ 2024 in Open Access or Open Choice should refer to the corresponding Springer webpage.\nSubmit contribution\nvia EquinOCS\nEquinOCS guidelines for authors can be found here\nImportant Dates          Abstract submission (mandatory): February 3, 2024 February 10, 2024   Paper submission (firm deadline, including research/short/industry/journal-first papers): February 10, 2024 February 24, 2024   Notification: April 6, 2024 April 9, 2024   Final version: April 20, 2024    ","date":1623798e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"8eb96466ece068b6a5ff99654417df13","permalink":"/site/2024/maintrack/","publishdate":"2021-06-16T00:00:00+01:00","relpermalink":"/site/2024/maintrack/","section":"site","summary":"Main ABZ Track - Call for Papers Contributions are solicited on all aspects of the theory and applications of ASMs, Alloy, B, TLA, VDM, Z and other state-based rigour approaches in software/hardware engineering, including the development of tools and industrial applications.","tags":null,"title":"ABZ 2024 – 10th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Workshop Program June, 25th Conference Room: Room 5 TimeTalkTopic Session Chair: Laurent Voisin 09:00 - 09:30What's new in Rodin 3.9 and the Theory plug-in\nGuillaume Verdier, Laurent Voisin, Idir Ait-SadouneRodin Workshop 09:30 - 10:00Semantics formalisation: Some experience with the Theory Plug-in\nThai Son Hoang, Laurent Voisin, Colin Snook, Karla Vanessa Morris Wright, Michael ButlerRodin Workshop 10:00 - 10:30Validation of Domain and Meta Models: From Event-B Theories to Practice\nMichael Leuschel, Yamine Ait-Ameur, Guillaume Dupont, Peter Riviere, Neeraj Kumar SinghRodin Workshop 10:30 - 11:00Coffee break Session Chair: Son Thai Hoang 11:00 - 11:30Developing the UML-B modelling tools\nColin SnookRodin Workshop 11:30 - 12:00Correct-by-Construction Synthesis of Sequential Algorithms\nDominique Cansell, Neeraj Kumar SinghRodin Workshop 12:00 - 12:30Schemata of Recursive Functions and Iterative Algorithms\nDominique CansellRodin Workshop 12:30 - 14:00Lunch break Session Chair: David Gele\u0026#223;us 14:00 - 14:30Validation of Domain and Meta Models: From Event-B Theories to Practice\nMichael LeuschelIVOIRE Workshop 14:30 - 15:00IVOIRE Project: Results and Insights\nAtif MashkoorIVOIRE Workshop 15:00 - 15:30Validation Obligations in Practice\nFabian VuIVOIRE Workshop 15:30 - 16:00Coffee break Session Chair: Fabian Vu 16:00 - 16:30An Exercise in Multi-modeling\nJean-Pierre JacquotIVOIRE Workshop 16:30 - 17:00Validation Obligations Manager\nDavid Gele\u0026#223;usIVOIRE Workshop 17:00 - 17:30What Should I Verify?\nMarie FarrellIVOIRE Workshop 17:30 - 18:00Discussion and conclusionIVOIRE Workshop 19:00 - 21:00Welcome Reception (conference venue) \nConference Program June, 26th Conference Room: Room 5 TimeTalkTopic Session Chair: Elvinia Riccobene 09:00 - 09:15Welcome Opening 09:15 - 10:15Formal Methods and Tools applied in the railway domainABZ and other state-based formal methods and tools are successfully applied to the development of safety-critical systems for decades now, in particular in the transport domain, without a single language or tool emerging as the dominant solution for system design. Formal methods are highly recommended by the current safety standards in the railway industry, but railway engineers often lack the knowledge to transform their semi-formal models into formal models, with a precise semantics, to serve as input to formal methods tools. We share the results of performing empirical studies in the railway domain, including usability analyses of formal methods tools involving railway practitioners. We discuss, in particular with respect to railway systems and their modelling, our experiences in applying rigorous state-based methods and tools to a variety of case studies, for which we interacted with a number of companies from the railway domain. We report on lessons learned from these experiences and provide pointers to drive future research towards facilitating further synergies between - on the one hand - researchers and developers of ABZ and other state-based formal methods and tools, and - on the other hand - practitioners from the railway industry.Maurice ter Beek (Invited)Keynote 10:15 - 10:45Coffee break Session Chair: Michael Leuschel 10:45 - 11:15Formal Modeling and Analysis of Apache Kafka in Alloy 6Apache Kafka is a distributed, fault-tolerant and highly available open-source technology that utilizes the publish-subscribe communication model to stream large volumes of data. It is widely being used in various domains such as finance, entertainment, online education, and e-commerce for real-time data processing and analytics. This paper demonstrates an application of Alloy 6 - the latest version of Alloy with built-in temporal logic operators - to modeling and analysis of a complex distributed system like Kafka. The architecture and key operations of Kakfa are modeled, and its various properties, including fault-tolerance, data availability, service availability, consistency, and recoverability, are verified using the Alloy Analyzer. The result of the analysis provides insights into how Kafka maintains the properties that it claims to have, and the circumstances under which these properties may be violated.Saloni Sinha, Eunsuk KangModeling 11:15 - 11:45Event-B Development of Modelling Human Intervention Request in Self-Driving Vehicle SystemsIn the design of autonomous systems, seamless integration with human operators is crucial, particularly when humans are considered as a fail-safe for intervening in hazardous situations. This study presents an Event-B intervention timing pattern designed to include human drivers' responses when they act as fallback mechanisms in Self-Driving Vehicle (SDV) systems. The proposed pattern outlines specific timings for driver interventions following alerts from SDVs, offering a clear set of expectations and conditions for human drivers during these critical takeover instances. The usability of this pattern is demonstrated through a case study, highlighting its importance for situations that require interventions. Ultimately, it sheds light on the operational aspects of SDVs, ensuring a safe and orderly transition from automated to manual control.Fahad Alotaibi, Thai Son Hoang, Asieh Salehi Fathabadi, Michael ButlerModeling 11:45 - 12:05An Event-B Formal Model for Access Control and Resource Management of Serverless AppsCloud computing technologies help developers build scalable distributed apps. Serverless architecture, or Function as a Service (FaaS), which separates app businesses into multiple functions, is one of the cloud-native architectures that has gained popularity. Those functions can be developed and deployed independently without provisioning in?frastructure. Despite the considerable advantages and increasing popularity of cloud?native apps, developers face many challenges when building their cloud?native applications. To ensure the robustness and security of cloud-native apps and protect crucial resources, the design and implementation of functions and associated access control systems play a pivotal role. In this paper, we have employed formal methods and tools to develop a set of patterns to help cloud-native application developers to design robust serverless apps. We have used Event-B and its associated toolset, Rodin, to construct these formal patterns and demonstrated how these patterns can be used in practical case studies.Mehmet Said Nur Yagmahan, Abdolbaghi Rezazadeh, Michael ButlerModeling/Industrial 12:05 - 12:20Designing Exception Handling using Event-BException handling is a well-known error recovery approach employed to improve robustness of software. While programming languages offer exception handling for responding to detected failures, the design of exception handling is a complex task that needs designers’ insights and domain expertise to identify exceptions and recover from them to put the system back in a safe state. The challenge is to ensure that a complex closed system including controller and its environment remain in a safe state while undertaking abnormal state changes in the controller as part of its exception recovery process. Formal methods supporting excep- tion handling can address this complexity, by addressing it in the abstract design stages utilising mathematical modelling and proofs. Event-B is a state-based formal method for modelling and verifying the consistency of discrete systems. However it lacks support for explicit handling of exceptions. In this paper, we use UML-B state machines to support the identification and handling of exceptions, followed by verification of exception handler recovery mechanisms using the built-in model checker and prover in the Event-B toolset. We also discuss an implementation of the modelled exception handling in the 'C' programming language as a first stage towards automatic code generation of exception handlers.Asieh Salehi Fathabadi, Colin Snook, Thai Son Hoang, Robert Thorburn, Michael Butler, Leonardo Aniello, Vladimiro SassoneModeling/Verification 12:30 - 14:00Lunch break Session Chair: Guillaume Dupont 14:00 - 14:30Alloy Goes FuzzyHumans are good at understanding subjective or vague statements which, however, are hard to express in classic logic. Fuzzy logic is an evolution of classic logic that can cope with vague terms by handling degrees of truth and not just the crisp values true and false. Logic is the formal basis of computing, enabling the formal design of systems supported by tools such as model checkers and theorem provers. This paper shows how a model checker such as Alloy can evolve to handle both classic and fuzzy logic, enabling the specification of high-level quantitative relational models in the fuzzy domain. In particular, the paper showcases how QAlloy-F (a conservative, general-purpose quantitative extension to standard Alloy) can be used to tackle fuzzy problems, namely in the context of validating the design of fuzzy controllers. The evaluation of QAlloy-F against examples taken from various classes of fuzzy case studies shows the approach to be feasible.Pedro Silva, Alcino Cunha, J. N. Oliveira, Nuno MacedoTheory Extension 14:30 - 15:00Transpilation of Petri-nets into B: Shallow and Deep EmbeddingsPetri-nets and their variants (Place/Transition nets, High-Level Petri Nets, etc) are widely used in the development of safety critical-systems. Their success is related to three major aspects: a formal semantics, a graphical syntax and the availability of verification tools. In our previous work we presented a new vision for the semantic definition of Petri-nets applying a Formal Model-Driven Engineering (FMDE) built on the B method. The approach is powered by Meeduse, a language workbench that we developed in order to formally instrument executable Domain-Specific Languages (xDSLs) by applying a deep embedding technique and the B method. However, because of the abstract nature of the underlying formal models, our deep embedding is suitable for the validation and verification activities at the design stage but not sufficient to generate code for target platforms. This paper advances our previous work with a shallow embedding technique taking benefit of the B method tools in order to safely synthesize executable Petri-net controllers that can be embedded in target platforms.Akram IdaniTheory Extension 15:00 - 15:20Property Ownership Formal Modelling Using Event-B and iUML-BThis paper introduces a novel approach to formal modelling and verification of ownership, addressing safety concerns in property transfer processes.The Event-B formal method, graphically represented using iUML-B notation, is used to establish a robust framework for modeling and verifying ownership systems. The verified Event-B model refines and enhances user requirements at the design stage before system implementation. The research focuses on property ownership within the legal framework of the Kingdom of Saudi Arabia, specifically property sales. The research uncovers that, despite conscientious efforts to scrutinise user requirements, the formal model development exposes limitations and inadequacies in the initial specifications. The verification process introduces essential requirements to mitigate potential fraudulent activities, enhancing the security and dependability of ownership claims.Manar Altamimi, Nawfal Al Hashimy, Asieh Salehi Fathabadi, Gary WillsModeling/Industrial 15:20 - 15:35A Modeling and Verification Framework for Ethereum Smart ContractsBlockchain has shown to be a versatile technology with applications ranging from financial services and supply chain management to healthcare, identity verification, and beyond. Thanks to the usage of smart contracts, blockchain can streamline and automate complex processes, eliminating the need for intermediaries and reducing administrative overhead. Smart contracts often handle valuable assets and execute critical functions, making them attractive targets for attackers. Thus, the need for secure and reliable smart contracts is crucial. The long-term research we present aims to face the problem of safety and security assurance of smart contracts at design time. We are investigating the usage of the Abstract State Machine (ASM) formal method for the specification, validation, and verification of Ethereum smart contracts. We provide (i) a set of ASM libraries that simplify smart contracts modeling, (ii) models of malicious contracts to be used to check the robustness of a contract against some given attacks, (iii) patterns of properties to be checked to guarantee the operational correctness of the contract and its adherence to certain predefined properties.Simone Valentini, Chiara Braghin, Elvinia RiccobeneModeling/Verification 15:35 - 16:05Coffee break Session Chair: Angelo Gargantini 16:05 - 16:15The Mechanical Lung Ventilator Case StudyThis paper introduces the ABZ 2024 Case Study: Mechanical Lung Ventilator (MLV), inspired by the Mechanical Ventilator Milano developed during COVID-19. The case study reports the specification of the Mechanical Lung Ventilator used to ventilate patients who are not able to breathe on their own or need ventilation support. Expected contributions to the case study include, among others, modeling, validation and verification, management of temporal behavior, modeling of the graphical user interface or automatically generating executable source code.Silvia Bonfanti, Angelo GargantiniCase Study 16:15 - 16:45Real-Time CCSL: Application to the Mechanical Lung VentilatorThis case-study paper reports on our experience in modelling the mechanical lung ventilator using the Clock Constraint Specification Language (CCSL). CCSL captures the causal and temporal behaviour of a system by specifying constraints on logical clocks. Logical clocks are integer counters where the occurrence of an event, a tick, advances the counter and marks the advance in time. In this framework, chronometric clocks become logical clocks just with a special external meaning. Encoding chronometric clocks as counters may result in verification inefficiency and hard-to-read specifications. The paper introduces in the language some real-time constructs to directly encode phenomena like clock drift, skew and jitter. This makes patterns explicit in turn enabling optimizations. To realize these optimizations, we alter the internal symbolic representation of clock constraints. We also introduce an explicit notion of parameters and intervals. While for some constraints it mainly consists of adding syntactic sugar and pre-processing facilities, we believe it improves the readability. We illustrate the new constructs on the mechanical lung ventilator system. We start with a purely logical specification, we point at the sources of inefficiencies and then we discuss the benefits of the extensions on specific parts.Pavlo Tokariev, Frederic MalletCase Study 16:45 - 17:15An Event-B Model of a Mechanical Lung VentilatorIn this paper, we present a formal Event-B model of the Mechanical Lung Ventilator (MLV), the case study provided by the ABZ’24 conference. This system aims at helping patients maintain good breathing by providing mechanical ventilation. For this purpose, two modes are possible: Pressure Controlled Ventilation (PCV) and Pressure Support Ventilation (PSV). In the former mode, respiratory cycles are completely defined by the patient that is able to start breathing on its own. In the latter mode, the respiratory cycle is constant and controlled by the ventilator. Let us note that it is possible to move from a given mode to the other depending on the breathing capabilities of the patient under ventilation. In this paper, we illustrate the use of a correct-by-construction approach, the Event-B formal method and its refinement process, for the formal modeling and the verification of such a complex and critical system. The development of the formal models has been achieved under the Rodin platform that provides us with automatic and interactive provers used to verify the correctness of the models. We have also validated the built Event-B models using the ProB animator/model checker.Amel MammarCase Study 18:00 - 19:30Tour Città Alta 19:30 - 24:00Dinner in Città Alta - Restaurant \"Da Franco\" \nJune, 27th Conference Room: Room 5 TimeTalkTopic Session Chair: Yamine Ait-Ameur 09:15 - 10:15Getting Electronic Payments RightEMV is the international protocol standard for smartcard payments and is used in billions of payment cards worldwide. Despite the standard’s advertised security, various issues have been previously uncovered, deriving from logical flaws that are hard to spot in EMV’s lengthy and complex specification, running over 2,000 pages. We have formalized various models of EMV in Tamarin, a symbolic model checker for cryptographic protocols. Tamarin was extremely effective in finding critical flaws, both known and new. For example, we discovered multiple ways that an attacker can use a victim's EMV card (e.g., Mastercard or Visa Card) for high-valued purchases without the victim's supposedly required PIN. Said more simply, the PIN on your EMV card is useless! We report on this, as well as follow-up work with an EMV consortium member on verifying the latest, improved version of the protocol, the EMV Kernel C-8. Overall our work provides evidence that security protocol model checkers like Tamarin have an essential role to play in developing real-world payment protocols and that they are up to this challenge.David Basin (Invited)Keynote 10:15 - 10:45Coffee break Session Chair: Wolf Zimmermann 10:45 - 11:15From Concept to Code: Unveiling a Tool for Translating Abstract State Machines into Java CodeFormal methods play a crucial role in modeling and quality assurance, but to be deployed on real systems, formal specifications need to be translated into implementation. Manually converting formal models into code poses challenges such as increased costs, limitations in specification reuse, and the potential for introducing errors. To overcome these limitations, Model-Driven Engineering (MDE) approaches enable developers to generate software code automatically. This paper proposes the Asmeta2Java tool for the automatic translation of formal Asmeta specifications into executable Java code. The designers start at an abstract level and perform refinement steps and verification activities. At the end, they automatically generate the code by applying the model-to-code transformation. Moreover, a process to validate and evaluate the transformation is presented.Andrea Bombarda, Silvia Bonfanti, Angelo GargantiniTools 11:15 - 11:45Loose Observation in Event-BRefinement of Event-B machines is based on changing internal variables to obtain different data representations. One approach is expressed only in terms of internal variables. In the extreme case it permits refining a machine by any other by choosing the gluing invariant ``true''. The other one is based on relating external variables that can be refined functionally, so that properties expressed in terms of external variables are preserved. In practice, the first approach is used and gluing invariants are suitably chosen to achieve a meaningful relationship between refined machines. The second approach is based on the idea of observing a machine in terms of its external variables. It is more complicated, restrictive and not commonly used. In this paper we propose a different approach to observing Event-B machines that is more constraining than the first approach but less complicated and restrictive than the second approach. We extend Event-B refinement by permitting introducing new events and eliminating old events. The concept of observation is made more flexible by permitting non-observation of certain states as well as observing sets of values related to a states. Although this complicates relating observed fixed points and traces of machines, the proof obligations remain uncomplicated.Stefan HallerstedeTheory Extension 11:45 - 12:15Modal Extensions of the Logic of Abstract State MachinesBased on the logic of non-deterministic Abstract State Machines (ASMs) we define a modal extension MLASM by first introducing multi-step predicates and then adding quantification over the number of steps. We show that liveness conditions such as invariance, conditional and unconditional progress, and persistence on all or some runs of an ASM can be expressed in this logic. While MLASM is too powerful to preserve the completeness of the logic of ASMs, we show the existence of a complete fragment, which still contains the interesting liveness conditions. We demonstrate the usefulness of this complete fragment by an example concerning mutual exclusion.Flavio Ferrarotti, Klaus-Dieter ScheweTheory Extension 12:15 - 12:30Semantics Formalisation -- From Event-B Contexts to TheoriesThe Event-B modelling language has been used to formalise the semantics of other modelling languages such as Time Mobility (TIMO) or State Chart XML (SCXML). Typically, the syntactical elements of the languages are captured as Event-B contexts while the semantical elements are formalised in Event-B machines. An alternative for capturing a modelling language's semantics is to use the Theory plug-in to build datatypes capturing the syntactical elements of the language and operators to represent the various semantical aspects of the language. This paper draws on our experience to compare the two approaches in both modelling and reasoning features.Thai Son Hoang, Laurent Voisin, Colin Snook, Michael Butler, Karla Vanessa Morris WrightTheory Extension 12:30 - 14:00Lunch break Session Chair: Silvia Bonfanti 14:00 - 14:30Modelling the mechanical lung ventilation system using TASTDFor the ABZ2024 conference, the proposed case study consists of modelling the adaptive outdoor mechanical lung ventilation system. The mechanical lung ventilator is intended to provide ventilation support for patients that are in intensive therapy and that require mechanical ventilation. The system under study is made up of two main software components: the graphical user interface (GUI) and the controller, this paper introduces a model for the controller part of the software system using Timed Algebraic State-Transition Diagrams (TASTD). TASTD is an extension of Algebraic State-Transition Diagrams (ASTD) providing timing operators to express timing constraints. The specification makes extensive use of the TASTD modularity capabilities, thanks to its algebraic approach, to model the behaviour of different sensors and actuators separately. We validate our specification using the cASTD compiler, which translates the TASTD specification into a C++ program. This generated program can be executed in simulation mode to manually update the system clock to check timing constraints. The model is executed on the test sequences provided with the case study. The advantages of having modularisation, orthogonality, abstraction, hierarchy, real-time, and graphical representation in one notation are highlighted with the proposed model.Alex Rodrigue Ndouna, Marc FrappierCase Study 14:30 - 15:00Modelling and Analysing a Mechanical Lung Ventilator in mCRL2We model the Mechanical Lung Ventilator (MLV) in the process algebra mCRL2. The functional requirements of the MLV are formalised in the modal mu-calculus, and we use model checking to analyse whether these requirements hold true of our model. Our formalisation of the MLV and its requirements reveal a few subtle imprecisions and unclarities in the informal document and we analyse their impact.Danny van Dortmont, Tim Willemse, Jeroen KeirenCase Study 15:00 - 15:30FRETting and Formal Modelling: A Mechanical Lung VentilatorIn this paper, we use NASA's Formal Requirements Elicitation Tool (FRET) and the Event-B formal method to model and verify the requirements for the ABZ 2024 case study which is a mechanical lung ventilator. We use the FRET requirements to guide the development of a formal design model in Event-B. We provide details about the artefacts produced and reflect on our experience of using these tools in this case study. We focus on the functional and controller requirements for this system, as given in the case study documentation. This paper provides a first step towards using Event-B as part of a FRET-guided verification workflow in a large case study.Marie Farrell, Matt Luckcuck, Rosemary Monahan, Conor Reynolds, Oisin SheridanCase Study 15:30 - 16:00Coffee break Session Chair: Alexander Raschke 16:00 - 16:30The Meaning of Self-Modifying Programs for Sequential MachinesWe propose a definition of a class of reflective Abstract State Machines (ASMs) that extends the class of Parallel Guarded Assignments (PGAs), a subclass of single-agent sequential ASMs, and can serve as ground model for refinements of reflectivity in concrete programming languages.Egon Boerger, Vincenzo GervasiTheory Extension 16:30 - 16:45Using Symbolic Execution to Transform Turbo Abstract State Machines into Basic Abstract State MachinesThis paper introduces a transformation method that uses symbolic execution to eliminate sequential composition (''seq'') rules from turbo ASM rules by translating them into equivalent rules without ''seq''. Under some circumstances ''iterate'' rules can also be eliminated. The material presented here is work in progress. A prototype implementation of the transformation is publicly available.Giuseppe Del CastilloTools 16:45 - 17:00Multi-model animation with JebA challenge posed by model-based formal methods such as Event-B is the validation of the models. This has been recognized and some tools have been created to provide modelers with means to animate models and to explore their behaviour through graphical display. These tools are quite effective on standalone models but lack the ability to connect to other external models. CPS systems fall under this category, as well as systems built of components interacting through a communication network. In the context of Jeb, an animation tool for Event-B models based on JavaScript, we explore the possibility of connecting models through Websockets. The paper presents a simple protocol to connect simulations. Using an example inspired by the Lung Ventilator case study, it shows how the implementation expands JeB functionality without modifying its core.Jean-Pierre JacquotTools 17:00 - 17:15Meta-Programming Event-B: Advancing Tool Support and Language ExtensionsTransforming models based on their textual representation is a cumbersome task. This is particularly the case for Event-B, where the predominant representation is a set of XML files. As a consequence, tool support is lacking, even for minor refactoring operations. The contribution of this paper extends the lisb library with a front and backend based on Event-B. The aim is to bring benefits, that have been demonstrated for classical B, such as an easily transformable data representation of formal specifications as well as creation of custom DSLs and tooling, to Event-B. We see great benefits of such a meta-programming approach for formal specifications and advocate that similar mechanisms will be sensible extensions to the expressiveness of formal methods. Ultimately, our work facilitates language extensions (e.g., re-introducing if-then-else constructs to Event-B which generate multiple events or a proper macro system to avoid code duplication) and tool support (e.g., refactoring tools or automatic refinement).Julius Armbrüster, Philipp KörnerTools 17:15 - 17:45PC meeting 19:30 - 24:00Social Dinner in Città Alta - Restaurant \"Circolino\" \nJune, 28th Conference Room: Room 5 TimeTalkTopic Session Chair: Patrizia Scandurra 09:00 - 10:00What happens when the Government starts encouraging the use of formal methods?Over the past decade, US Government R\u0026amp;D RFPs have gone from never mentioning formal methods to frequently mandating formal methods. What's more, several recent White House reports have explicitly called out formal methods. For example, the 2016 NIST Interagency Report ''Dramatically Reducing Software Vulnerabilities: Report to the White House Office of Science and Technology Policy'' calls out formal methods as one of five key technical approaches critical to fulfilling the goals set forth in the US Government's 2016 Federal Cybersecurity R\u0026amp;D Strategic Plan. More recently, in February 2024 the Office of the National Cyber Director (ONCD) published the report ''Back to the Building Blocks: A Path Toward Secure and Measurable Software'' in response to President Biden's National Cybersecurity Strategy and in alignment with Executive Order 14028 on Improving the Nation's Cybersecurity, issued in 2021. Its abstract states: “In this report, the case is made that the technical community is well-positioned to drive progress on both strategic goals. First, in order to reduce memory safety vulnerabilities at scale, creators of software and hardware can better secure the building blocks of cyberspace. This report focuses on the programming language as a primary building block, and explores hardware architecture and formal methods as complementary approaches to achieve similar outcomes. Second, in order to establish accurate cybersecurity quality metrics, advances can be made to address the hard and complex research problem of software measurability. This report explores how such metrics can shift market forces to improve cybersecurity quality across the ecosystem. In essence, the US Government is now strongly recommending that nationally critical systems are written in safe programming languages, models and implementations of critical components must be formally assured, and that code should run on security-centric hardware architectures.'' This talk reflects upon this evolution over the past ten years from my point of view as a PI of dozens of major formal methods-centric R\u0026amp;D programs for the Government and industry. Why has there been such an uptick in interest? What are the R\u0026amp;D challenges that lie ahead? How might we, as a community, prioritize R\u0026amp;D activities for transition? What can the ABZ community learn from this arc? What's next?Joe Kiniry (Invited)Keynote 10:00 - 10:30An Analysis of the Impact of Field-Value Instance Navigation in Alloy’s Model FindingThe use of SAT-based model finding for specification analysis is a crucial characteristic of Alloy, and a main reason of its success as a language for software specification. When a property of a specification is analyzed and deemed satisfiable, the user usually explores instances of the corresponding satisfiability, in order to understand the analysis outcome. The order in which instances are obtained during exploration can impact the efficiency and effectiveness with which specification analysis is carried out. This has been observed by various researchers, and different instance exploration strategies have been proposed, besides the standard SAT-solver driven strategy implemented with the Alloy Analyzer. In this paper, we concentrate on a strategy recently proposed in the literature, that we refer to as ''field-value'' driven, and has been implemented in the tool HawkEye. The tool allows the user to interactively guide instance exploration, by enforcing constraints requiring fields to contain (resp., do not contain) specific values. We design an experiment involving faulty Alloy specifications featuring combinations of over constraints and under constraints, and perform a user study to analyze the impact of this instance exploration strategy, in comparison with the standard SAT-solver driven exploration. The study focuses on HawkEye’s facility of interactive instance querying and how it may favor users, in its current realization, during Alloy model analysis and debugging. We perform an assessment of the evaluation, and summarize some of the reasons that may diminish the impact of field-value exploration in model finding.Cesar Cornejo, María Marta Novaira, Nazareno Aguirre, Marcelo Frias, Simón Emmanuel Gutiérrez Brida, Germán Regis, Sonia PermigianiEducation 10:30 - 11:00Coffee break Session Chair: Regine Laleau 11:00 - 11:15Event-B as DSL in Isabelle and HOLThe proof assistant Isabelle/HOL is made available inside a flexible system framework allowing for logically safe extensions, which comprise both theories as well as implementations for code-generation, documentation, and specific support for a variety of formal methods. Following the techniques in [23] and the theoretical groundwork in [5], we show the major milestones for the implementation of a B-Tool and the resulting refinement method inside the Isabelle/HOL platform. The pro- totype HOL-B provides IDE support, documentation support, a theory for the Z-Mathematical Toolkit underlying the B-Method, and a gener- ated denotational semantics for the B-Machine concept implemented as specification construct in Isabelle/HOL. Extended by more automated proof machinery geared to refinements, HOL-B can serve as a more portable, flexible and extensible tool for Event-B that may profit from the large Isabelle/HOL libraries providing Algebra and Analysis theories.Burkhart Wolff, Benoit BallenghienVerification 11:15 - 11:30ThoR: An Alloy5-based DSL for Interactive Theorem Proving in CoqThe steep learning curve associated with interactive theorem proving poses a significant entry barrier for the learner. While the Alloy specification language has simplified the introduction to and application of formal methods, transitioning to interactive theorem proving, such as with Coq, remains daunting due to the inherent complexity of formal reasoning and the sophisticated tooling required. We introduce ThoR, an extension for the Coq proof assistant that incorporates an Alloy-based domain-specific language: Specifications, propositions and proofs are formulated in an Alloy-like syntax. This reduces tool and language complexity, and makes interactive theorem proving more accessible. The implementation is based on Coq’s syntax extension capabilities and the mathematical components library (mathcomp). This paper reports on work in progress. It contributes an approach for the embedding of Alloy into Coq based on a set-theoretic interpretation, a proof calculus for Alloy with soundness by construction, a prototypical implementation and its validation via a simple token ring example.Bodo Igler, Andreas MayerVerification 11:30 - 11:45Verifying HyperLTL properties in Event-BThe study presented in this paper is motivated by the verification of properties related to hardware architectures, namely timing anomalies that qualify a counter-intuitive timing behaviour. They are avoided by a monotonicity property which is an Hyper-LTL property. We present how to prove some classes of Hyper-LTL properties with Event-B.Jean-Paul Bodeveix, Thomas Carle, Elie Fares, Mamoun Filali Amine, Thai Son HoangVerification 11:45 - 12:00Small Step Incremental Verification of CompilersPreviously, we introduced the idea of agile compiler development, i.e., starting from an initial compiler for the most simple program of a language and extending it in small versions, each introducing a new language concept. Following this idea, in this paper, we propose an approach for incrementally verifying the dynamic semantics specified with abstract state machines~(ASMs), such that definitions of previous versions must not be altered in subsequent versions. As a result, the compiler can be verified incrementally without revising the proofs of previous versions. As our first step, in this paper, we formalize and verify the memory mapping of the initial versions with ASMs and discuss their extensibility for the next increments. We plan to demonstrate this approach through the agile implementation and verification of a Sather-K compiler generating MIPS assembly language.Wolf Zimmermann, Thomas Kühn, Mandy Weißbach, Edward SabinusVerification Session Chair: Philipp Körner 12:15 - 12:30From Event-B to LambdapiB, Event-B and TLA+ are development languages based on set theory. Dedukti/Lambdapi is a logical framework based on the λΠ- calculus modulo in which many theories and logics can be expressed. In the context of ICSPA (ANR project), Lambdapi will be used to ex- change models and proofs between the set theory-based formal methods B, Event-B and TLA+. They will rely on the encoding of the respective set theories in Lambdapi. Our current work focuses on translating the mathematical language of Event-B and proof trees obtained with the Rodin platform for Event-B.Anne GrieuDoctoral Symposium 12:30 - 12:45Proof Construction and Checking on Evolving Abstract State MachinesAbstract State Machines (ASMs) are widely used in the formalization and verification of the semantics of software or hardware. However, tools for assisting this process for evolving specifications are still lacking. With evolving we denote adding extensions without refactoring. We want to create a tool assisting in the verification of evolving specifications. Our approach is to translate ASM specifications into the language of an existing proof checker, construct the proofs as far as possible automatically, and check the proofs with the proof checker. Further, we want proofs of evolvable specifications also to be evolvable. This paper gives a brief overview of the approach and discusses the first step of this work, namely the translation of ASM specifications into the language of an existing proof checker, with consideration of automation possibilities.Edward SabinusDoctoral Symposium 12:45 - 13:00Closing session 13:00 - 14:00Lunch break and greetings \n","date":1623798e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c8b6c3f89599a28cd5a574ffd90be15e","permalink":"/site/2024/program/","publishdate":"2021-06-16T00:00:00+01:00","relpermalink":"/site/2024/program/","section":"site","summary":"Workshop Program June, 25th Conference Room: Room 5 TimeTalkTopic Session Chair: Laurent Voisin 09:00 - 09:30What's new in Rodin 3.9 and the Theory plug-in\nGuillaume Verdier, Laurent Voisin, Idir Ait-SadouneRodin Workshop 09:30 - 10:00Semantics formalisation: Some experience with the Theory Plug-in","tags":null,"title":"ABZ 2024 – 10th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Registration fees (all values are in EUR) Follow these guidelines for the payments: Payment Guidelines    Registration type Due date      Author registration (workshops are included) April 20, 2024 €480   Early full regstration (workshops are included) May 25, 2024 €480   Early student registration (workshops are included) May 25, 2024 €250   Early workshop registration only (1 day) May 25, 2024 €120   Late full registration (workshops are included) June 16, 2024 €550   Late student registration (workshops are included) June 16, 2024 €300   Late workshop registration only (1 day) June 16, 2024 €180    What is included in the price: Author/Full/Student registrations include:\n Gadgets Lunches and coffee breaks Welcome Reception on June 25th Social City Tour with dinner on June 26th Social dinner on June 27th  Workshop registration includes:\n Gadgets Lunches and coffee breaks on June 25th Welcome Reception on June 25th  Extra tickets Extra tickets for Welcome Reception on June 25th, Social City Tour with dinner on June 26th, Social dinner on June 27th can be purchased during registration. Add the extra tickets amount to the registration fee, and make the payment accordingly.\nThe fees for the extra tickets are the followings\n   Ticket Amount     Welcome Reception on June 25th €15   Social City Tour with dinner on June 26th €50   Social dinner on June 27th €80    Author Policy At least one “Author Registration” per paper accepted is required before April, 20th.\nStudent Policy For registrations at the student rate, a proof of student status – such as a confirmation of registration provided by the university or a confirmation letter by the PhD advisor - must be sent by email to abz2024@unibg.it together with the payment receipt.\nVisa Information If you need a visa for traveling to Italy, we can provide you with an invitation letter needed for obtaining the visa. You have to explicitly indicate it in the email when you send the payment receipt to abz2024@unibg.it.\n","date":1623798e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"653279ac4cf6ec68cf61496b87373401","permalink":"/site/2024/registration/","publishdate":"2021-06-16T00:00:00+01:00","relpermalink":"/site/2024/registration/","section":"site","summary":"Registration fees (all values are in EUR) Follow these guidelines for the payments: Payment Guidelines    Registration type Due date      Author registration (workshops are included) April 20, 2024 €480   Early full regstration (workshops are included) May 25, 2024 €480   Early student registration (workshops are included) May 25, 2024 €250   Early workshop registration only (1 day) May 25, 2024 €120   Late full registration (workshops are included) June 16, 2024 €550   Late student registration (workshops are included) June 16, 2024 €300   Late workshop registration only (1 day) June 16, 2024 €180    What is included in the price: Author/Full/Student registrations include:","tags":null,"title":"ABZ 2024 – 10th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Organization Program Chairs   Elvinia Riccobene, Università degli Studi di Milano, Milano, Italy  Michael Leuschel, Heinrich-Heine-Universität, Düsseldorf, Germany  Case Study Chairs   Silvia Bonfanti, University of Bergamo, Bergamo, Italy  Angelo Gargantini, University of Bergamo, Bergamo, Italy  Workshop/Tutorial Chairs   Claudio Menghi, University of Bergamo, Bergamo, Italy  Alexander Raschke, Ulm University, Ulm, Germany  Sponsor Chair   Claudio Menghi, University of Bergamo, Bergamo, Italy  Doctoral Symposium Chairs   Philipp Körner, Heinrich-Heine-Universität, Düsseldorf, Germany  Chiara Braghin, Università degli Studi di Milano, Milano, Italy  Social/Publicity Chairs   Atif Mashkoor, JKU Linz, Linz, Austria  Fabian Vu, Heinrich-Heine-Universität, Düsseldorf, Germany  Web Chairs   Andrea Bombarda, University of Bergamo, Bergamo, Italy  Mario Lilli, Università degli Studi di Milano, Milano, Italy  Local Chair   Patrizia Scandurra, University of Bergamo, Bergamo, Italy  Registration Chair   Silvia Bonfanti, University of Bergamo, Bergamo, Italy  Program Committee  Yamine Ait Ameur, IRIT/INPT-ENSEEIHT, France Nazareno Aguirre,\tUniversidad Nacional de Río Cuarto,\tArgentina Étienne André, Université Sorbonne Paris Nord, LIPN, CNRS UMR, France Paolo Arcaini, National Institute of Informatics, Japan Richard Banach, University of Manchester, UK Egon Boerger, University of Pisa, Italy Chiara Braghin, University of Milan, Italy Adam Bryant, Galois Inc., USA Michael Butler, University of Southampton, UK José\tCreissac Campos, University of Minho \u0026amp; HASLab/INESC TEC, Portugal Maximiliano Cristiá, Universidad Nacional de Rosario, Argentina Alcino Cunha, University of Minho, Portugal Juergen Dingel, Queen\u0026rsquo;s University, Ontario Catherine Dubois, ENSIIE-Samovar, France Guillaume Dupont, IRIT/INPT-ENSEEIHT, France Gidon Ernst, LMU Munich, Germany Flavio Ferrarotti, Software Competence Centre Hagenberg, Austria Mamoun Filali Amine, IRIT CNRS Université Paul Sabatier, France Marc Frappier, Université de Sherbrooke, Canada Frederic Gervais, Univ Paris Est Creteil, LACL, France Vincenzo Gervasi, University of Pisa, Italy Stefan Hallerstede, Aarhus University, Denmark Klaus Havelund, Jet Propulsion Laboratory, USA Thai Son Hoang, University of Southampton, UK Fuyuki Ishikawa, National Institute of Informatics, Japan Philipp Körner, University of Düsseldorf, Germany Olga Kouchnarenko, University of Franche-Comté, France Régine Laleau, Paris Est Creteil University, France Thierry Lecomte, CLEARSY, France Alexei Lisitsa, University of Liverpool, UK Frederic Mallet, Université Côte d\u0026rsquo;Azur, France Amel Mammar, TELECOM Sud Paris, France Tiziana Margaria, University of Limerick, Ireland Atif Mashkoor, Johannes Kepler University, Austria Claudio Menghi, University of Bergamo, Italy Dominique Mery, Université de Lorraine, LORIA, France Stephan Merz, Inria, France Rosemary Monahan, Maynooth University, Ireland Philipp Paulweber, fiskaly GmbH, Austria Andreas Prinz, University of Agder, Norway Alexander Raschke, Ulm University, Germany Gerhard Schellhorn, Universitaet Augsburg, Germany Klaus-Dieter Schewe, Zhejiang University, China Neeraj Singh, INPT-ENSEEIHT / IRIT, University of Toulouse, France Maurice ter Beek, CNR, Italy Laurent Voisin, Systerel, France Wolf Zimmermann, Martin Luther University Halle-Wittenberg, Germany  ","date":1623798e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"3ed659927b24e187b9a0cac514241599","permalink":"/site/2024/team/","publishdate":"2021-06-16T00:00:00+01:00","relpermalink":"/site/2024/team/","section":"site","summary":"Organization Program Chairs   Elvinia Riccobene, Università degli Studi di Milano, Milano, Italy  Michael Leuschel, Heinrich-Heine-Universität, Düsseldorf, Germany  Case Study Chairs   Silvia Bonfanti, University of Bergamo, Bergamo, Italy  Angelo Gargantini, University of Bergamo, Bergamo, Italy  Workshop/Tutorial Chairs   Claudio Menghi, University of Bergamo, Bergamo, Italy  Alexander Raschke, Ulm University, Ulm, Germany  Sponsor Chair   Claudio Menghi, University of Bergamo, Bergamo, Italy  Doctoral Symposium Chairs   Philipp Körner, Heinrich-Heine-Universität, Düsseldorf, Germany  Chiara Braghin, Università degli Studi di Milano, Milano, Italy  Social/Publicity Chairs   Atif Mashkoor, JKU Linz, Linz, Austria  Fabian Vu, Heinrich-Heine-Universität, Düsseldorf, Germany  Web Chairs   Andrea Bombarda, University of Bergamo, Bergamo, Italy  Mario Lilli, Università degli Studi di Milano, Milano, Italy  Local Chair   Patrizia Scandurra, University of Bergamo, Bergamo, Italy  Registration Chair   Silvia Bonfanti, University of Bergamo, Bergamo, Italy  Program Committee  Yamine Ait Ameur, IRIT/INPT-ENSEEIHT, France Nazareno Aguirre,\tUniversidad Nacional de Río Cuarto,\tArgentina Étienne André, Université Sorbonne Paris Nord, LIPN, CNRS UMR, France Paolo Arcaini, National Institute of Informatics, Japan Richard Banach, University of Manchester, UK Egon Boerger, University of Pisa, Italy Chiara Braghin, University of Milan, Italy Adam Bryant, Galois Inc.","tags":null,"title":"ABZ 2024 – 10th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Call for Workshops and Tutorials Researchers and practitioners are invited to submit proposals for workshops and tutorials held in conjunction with ABZ 2024. Workshops and tutorials will be held on June 25, 2024 (right before the main conference on June 26 – June 28, 2024).\nABZ workshops provide an opportunity for researchers and practitioners to exchange and explore innovative ideas and challenges on rigorous state-based methods, at an early stage.\nIn addition, ABZ edition 2024 hosts tutorials on topics related to state-based formal methods from theoretical foundations to practical applications. Tutorials at ABZ provide a valuable opportunity for conference participants to expand their knowledge and skills in specific research and/or practical topics related to rigorous state-based methods.\nWorkshop Proposal Submissions The proposal should include the following information:\n Workshop title and acronym Contact information for the workshop organizers (name, affiliation, email) and the main contact Abstract for ABZ 2024 website (if workshop is accepted) Description of the workshop Format  Workshop format (e.g., paper presentations, keynotes, breakout sessions, panel-like discussions) and plans for generating discussions Duration - half day or one day Special services, logistic and/or equipment constraints    Tutorial Proposal Submissions The proposal should include the following information:\n Tutorial title Contact information of tutorial presenter(s), including name, affiliation, email Tutorial summary for ABZ 2024 website (if tutorial is accepted) Description of the tutorial Format  How tutorial will be conducted (e.g., lecture, hands-on exercises, facilitated group discussion, group activities, role playing, games) Duration - half day or one day Special services, logistic and/or equipment constraints    Submission Process Proposals can be sent to the chairs claudio.menghi@unibg.it and alexander.raschke@uni-ulm.de before the submission deadline (see here).\nImportant Dates          Workshop proposal submission: December 01, 2023   Workshop notification: December 15, 2023   Tutorial proposal submission: March 16, 2024    ","date":1623798e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"28022145dd09b996f57ec0c07dcd477a","permalink":"/site/2024/tutorialworkshops/","publishdate":"2021-06-16T00:00:00+01:00","relpermalink":"/site/2024/tutorialworkshops/","section":"site","summary":"Call for Workshops and Tutorials Researchers and practitioners are invited to submit proposals for workshops and tutorials held in conjunction with ABZ 2024. Workshops and tutorials will be held on June 25, 2024 (right before the main conference on June 26 – June 28, 2024).","tags":null,"title":"ABZ 2024 – 10th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Venue: University of Bergamo Location  University of Bergamo - Department of Human and Social Sciences Piazzale S. Agostino, 2 24129 Bergamo Italy  How to reach the venue From Bergamo airport (Milan-Bergamo Airport - Orio al Serio - BGY) Take BUS Line 1 / airport to Porta S. Agostino stop.\nFrom Linate airport (LIN) From Linate airport you can take the metro to the railway station (Centrale or Lambrate), and then the train to Bergamo. Alternatively, from Linate airport, you can take the blue line (Metro 4) to the Milano Forlanini station, then the train to Pioltello Limito and, finally, the train to Bergamo.\nFrom Malpensa airport (MXP) From Malpensa airport you can reach the railway Central Station of Milan by bus (1h journey, every 10 minutes), operated by Autostradale and Malpensashuttle. There is also a train running from MXP and Milano Centrale (or Milano Cadorna, but then you need to take the metro). The train is faster than the bus, but be careful to take the right direction to Milano Centrale. Then, from the Central Station of Milan, you can take the train to Bergamo. The ticket for the train is €6,00.\nFrom the station  BUS Line 1 - From the train station to Città Alta (Colle Aperto) the bus has a frequency of 15 minutes.  You can also walk to Porta Nuova in a few minutes, where you can take:\n Bus Line 1 Bus Line 1A (from Torre de \u0026lsquo;Roveri) Bus Line 1B (from Scanzo) Bus Line 1C (from Grassobbio)  The complete map of the ATB links is available at this link.\nBy Car We do not recommend reaching the venue by car, as the entire Città Alta area is a Limited Traffic Zone (only selected vehicles, e.g., residents, can access that area) and parking is limited. The Limited Traffic Zone is active on Sunday between 10:00 and 12:00, and between 14:00 and 19:00, while the other days it is active between 21:00 and 01:00.\nYou can find the map of all areas involved in the Limited Traffic Zone, as well as the map of all the cameras surveilling the entries and the activation times, here (unfortunately, only available in Italian).\nIf you wish to park in Città Alta, there is a new parking very close to the conference venue, and you can access the Limited Traffic Zone if you park there. It costs 3,50 €/h.\nAbout Bergamo Bergamo is a small city in Lombardy, in the northern part of Italy, yet it is rich in history and culture. The impressive Venetian Walls, enclosing the beauties of the Upper Town for more than four centuries, are recognized as a Unesco World Heritage.\nFor touristic information, the official website is:  https://www.visitbergamo.net/en/\nThe value of Bergamo as touristic attraction has often been published on the news:\n See the recent article in the Travel section of the Financial Times “Brescia and Bergamo — rediscovering Italy’s twin treasures” There is also an older article on the New York Times “In the June Light of Northern Italy, the Bliss of Bergamo”  ","date":1623798e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"1b117d3d5e234f5f7ef858a64ddd1ff4","permalink":"/site/2024/venue/","publishdate":"2021-06-16T00:00:00+01:00","relpermalink":"/site/2024/venue/","section":"site","summary":"Venue: University of Bergamo Location  University of Bergamo - Department of Human and Social Sciences Piazzale S. Agostino, 2 24129 Bergamo Italy  How to reach the venue From Bergamo airport (Milan-Bergamo Airport - Orio al Serio - BGY) Take BUS Line 1 / airport to Porta S.","tags":null,"title":"ABZ 2024 – 10th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Workshops ABZ 2024 will host the two following workshops.\nRodin workshop Event-B is a formal method for system-level modeling and analysis. The Rodin Platform is an Eclipse-based toolset for Event-B that provides effective support for modeling and automated proof. The platform is open source and is further extendable with plug-ins. A range of plug-ins have already been developed.\nThe purpose of this workshop is to bring together existing and potential users and developers of the Rodin toolset and to foster a broader community of Rodin users and developers.\nFor Rodin users, the workshop will provide an opportunity to share tool experiences and gain an understanding of ongoing tool developments. For plug-in developers, the workshop will provide an opportunity to showcase their tools and to achieve better coordination of tool development efforts.\nParticipants may attend or present both in person or remotely. If you are willing to participate remotely, please contact the organizers.\nAdditional details can be found at https://wiki.event-b.org/index.php/Rodin_Workshop_2024\nFormat and date The workshop will host presentations, with ample time for discussions.\nThe Rodin workshop will be held on June 25, 2024.\nOrganizers  Asieh Salehi Fathabadi (University of Southampton) A.Salehi-Fathabadi@soton.ac.uk Guillaume Verdier (Université de Paris-Est Créteil) Guillaume.Verdier@irit.fr Neeraj Kumar Singh (INPT-ENSEEIHT / IRIT) neeraj.singh@toulouse-inp.fr Sebastian Stock (Johannes Kepler University) sebastian.stock@jku.at Kristin Rutenkolk (Heinrich Heine University Düsseldorf) kristin.rutenkolk@hhu.de Main contact: Laurent Voisin (Systerel) laurent.voisin@systerel.fr  IVOIRE workshop Historically, formal methods and supported environments have focused more on only one-half of the quality-assurance process: verification (are we building the software right?). The other half, validation (are we building the right software?), has been given much less attention, i.e., we have fewer automated/push-button tools available for validation, unlike verification. The IVOIRE workshop focuses on developing an enhanced formal paradigm based on an extension of the refinement framework that includes a comprehensive validation process and toolchain to perform validation obligations.\nThe main goal of this workshop is to provide a platform for formal methods practitioners, researchers, and academics to discuss various issues associated with validation for formal methods, including but not limited to:\n Validation obligations or other systematic approaches to validation Relation between refinement and validation and the interplay between verification and validation Environments and tools to manage the validation process Evaluations, benchmarking, case studies, etc.  Additional details can be found at https://isse.jku.at/ivoire/index.php/Main_Page\nFormat and date The workshop will host paper presentations.\nThe IVOIRE workshop will be held on June 25, 2024.\nOrganizers Workshop chairs\n Atif Mashkoor (JKU Linz, Austria) atif.mashkoor@jku.at Michael Leuschel (HHU Düsseldorf, Germany) leuschel@hhu.de  Workshop organizing committee\n Sebastian Stock (JKU Linz, Austria) sebastian.stock@jku.at Fabian Vu (HHU Düsseldorf, Germany) fabian.vu@uni-duesseldorf.de David Geleßus (HHU Düsseldorf, Germany) dagel101@hhu.de  ","date":1623798e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"fcefd7d7a9234eab12cabf6328894f54","permalink":"/site/2024/workshop/","publishdate":"2021-06-16T00:00:00+01:00","relpermalink":"/site/2024/workshop/","section":"site","summary":"Workshops ABZ 2024 will host the two following workshops.\nRodin workshop Event-B is a formal method for system-level modeling and analysis. The Rodin Platform is an Eclipse-based toolset for Event-B that provides effective support for modeling and automated proof.","tags":null,"title":"ABZ 2024 – 10th International Conference on Rigorous State Based Methods","type":"site"},{"authors":null,"categories":null,"content":"Information disclosed under Digital Economy Law (575/2004), France:\nContact  Neeraj Kumar Singh INPT-ENSEEIHT/IRIT F-313, 2 Rue Charles Camichel, BP 7122 31071 Toulouse, CEDEX 7, France    Alexander Raschke Universität Ulm Albert-Einstein-Allee 11\n89069 Ulm, Germany    Philipp Paulweber\nfiskaly Gmbh\nMariahilfer Straße 36\n1070 Vienna, Austria\n    $nsingh@enseeiht.fr$   +33-5-34-32-21-82    $alexander.raschke@uni-ulm.de$   +49-731-50-24172    $ppaulweber@fiskaly.com$   +43-1-997-4459-29     Notice of liability Despite careful examination, we assume no liability for external links. Responsibility for the content of external links lies with the owners and responsible operators.\nCopyright All contents, texts, graphics, layouts, code or software are Copyright © 2025 ABZ Conference and Community. All Rights reserved. Any usage of material or information available on this website, including the reproduction, sales, alteration and publication is prohibited unless specifically approved by the ABZ Conference and Community.\nDomain, Encryption and Servers The Top-Level Domain (TLD) https://abz-conf.org and all sub-domains are provided by the services from https://namecheap.com, the SSL/TLS certificate for encryption is provided by the services from https://letsencrypt.org, and the (virtual) server infrastructure and hosting of this website is provided by https://pages.github.com.\nCookies and Analytics This website uses no analytics software of any kind. The only cookie the website uses and stores is a cookieconsent_status. This cookie consent status is used to store that the page informed you about this page and does only appear the first time you visit this page.\nTwitter Plugin Our website contains social plugins from https://twitter.com. These plugins are solely provided by Twitter Inc., 795 Folsom St., Suite 600, San Francisco, CA 94107, USA. When you visit the start page of our website that contains the social plugin, your browser establishes a direct connection to the servers of Twitter, which is used to retrieve the contents of the plugin. Through this process, Twitter is aware that you have visited this website. If you are logged in to Twitter while browsing this website, Twitter can match your visit with your account. By interacting with the plugin, this information is sent directly to Twitter and processed there. If you would like to opt out, please log out of Twitter before visiting this website. For the information on the purpose and scope of data collection and procession by Twitter, as well as your rights in this respect and settings options for protecting your privacy please visit Twitter’s privacy policy: https://twitter.com/privacy.\n","date":1623798e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"6887a7aae80ebc210e30578ffebdf60d","permalink":"/site/notice/","publishdate":"2021-06-16T00:00:00+01:00","relpermalink":"/site/notice/","section":"site","summary":"Information disclosed under Digital Economy Law (575/2004), France:\nContact  Neeraj Kumar Singh INPT-ENSEEIHT/IRIT F-313, 2 Rue Charles Camichel, BP 7122 31071 Toulouse, CEDEX 7, France    Alexander Raschke Universität Ulm Albert-Einstein-Allee 11","tags":null,"title":"Site Notice","type":"site"},{"authors":null,"categories":null,"content":"TODO\n","date":1623794400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"fbcf758aeed0c151f68519f1de380af3","permalink":"/post/notice/","publishdate":"2021-06-16T00:00:00+02:00","relpermalink":"/post/notice/","section":"post","summary":"TODO","tags":null,"title":"New ABZ Website","type":"post"},{"authors":null,"categories":null,"content":"","date":1623196800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"68a51ea6d8bf8146759fc2e3313c7945","permalink":"/2021/","publishdate":"2021-06-09T00:00:00Z","relpermalink":"/2021/","section":"event","summary":"8th International Conference on Rigorous State-Based Methods","tags":["ABZ'21"],"title":"ABZ 2021 (Ulm, Germany)","type":"event"},{"authors":["Mario Lilli"],"categories":[],"content":"Abstract Bad design decisions in security protocols can drastically affect the robustness of the protection given by protocols, causing the introduction of vulnerabilities and leak of information. My PhD project aims to reduce the possibility of introducing flaws supporting designers and engineers with a user-friendly formal verification framework, with various options for both model construction and verification.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-77543-8_16.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Lilli21, author = {Mario Lilli}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry}, title = {A Modeling and Verification Framework for Security Protocols}, booktitle = {Rigorous State-Based Methods - 8th International Conference, {ABZ} 2021, Ulm, Germany, June 9-11, 2021, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12709}, pages = {158--161}, publisher = {Springer}, year = {2021}, url = {https://doi.org/10.1007/978-3-030-77543-8\\_16}, doi = {10.1007/978-3-030-77543-8\\_16}, timestamp = {Tue, 15 Jun 2021 17:24:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/Lilli21.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e883dd814fb33387bac343824bcc217a","permalink":"/publication/lilli21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/lilli21/","section":"publication","summary":"Abstract Bad design decisions in security protocols can drastically affect the robustness of the protection given by protocols, causing the introduction of vulnerabilities and leak of information. My PhD project aims to reduce the possibility of introducing flaws supporting designers and engineers with a user-friendly formal verification framework, with various options for both model construction and verification.","tags":["ABZ'21"],"title":"A Modeling and Verification Framework for Security Protocols","type":"publication"},{"authors":["Philipp Paulweber","Jakob Moosbrugger","Uwe Zdun"],"categories":[],"content":"Abstract Abstract State Machines (ASMs) are a well-known state based formal method to describe systems at a very high level and can be executed either through a concrete or symbolic interpretation. By symbolically executing an ASM specification, certain properties can be checked by transforming the described ASM into a suitable input for model checkers or Automated Theorem Provers (ATPs). Due to the rather fast increasing state space, model checking and ATP solutions can lead to inefficient implementations of symbolic execution. More efficient state space and execution performance can be achieved by using a concolic execution approach. In this paper, we describe an improved concolic execution implementation for the Corinthian Abstract State Machine (CASM) language. We outline the transformation of a symbolically executed ASM specification to a single Thousands of Problems for Theorem Provers (TPTP) format. Furthermore, we introduce a compiler analysis to promote concrete ASM functions into symbolic ones in order to obtain symbolic consistency.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-77543-8_9.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{PaulweberMZ21, author = {Philipp Paulweber and Jakob Moosbrugger and Uwe Zdun}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry}, title = {About the Concolic Execution and Symbolic {ASM} Function Promotion in {CASM}}, booktitle = {Rigorous State-Based Methods - 8th International Conference, {ABZ} 2021, Ulm, Germany, June 9-11, 2021, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12709}, pages = {112--117}, publisher = {Springer}, year = {2021}, url = {https://doi.org/10.1007/978-3-030-77543-8\\_9}, doi = {10.1007/978-3-030-77543-8\\_9}, timestamp = {Sat, 09 Apr 2022 12:45:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/PaulweberMZ21.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"ae38e46f2c1ecf7832e1b311fb48c320","permalink":"/publication/paulwebermz21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/paulwebermz21/","section":"publication","summary":"Abstract Abstract State Machines (ASMs) are a well-known state based formal method to describe systems at a very high level and can be executed either through a concrete or symbolic interpretation.","tags":["ABZ'21"],"title":"About the Concolic Execution and Symbolic ASM Function Promotion in CASM","type":"publication"},{"authors":["Shubhangi Salunkhe","Randolf Berglehner","Abdul Rasheeq"],"categories":[],"content":"Abstract Digitalisation and innovation among the railway systems entail effort-demanding challenges, especially when considering how crucial it is to verify safety requirements and proof security levels. The early Verification and Validation (V\u0026amp;V) of railway systems detect critical issues and avoid severe consequences due to software failure. This paper aims to distinguish the subset of SysML language, which can be verified and usable by a systems engineer. As we are interested in proving safety properties expressed using invariants on states, we consider the Event-B method for this purpose. Later the selected SysML subset is used for automatic transformation and finally performing the verification using a formal verification tool. The transformation is applied on a simple point machine case study from DB Netz AG; First, a SysML model is designed using the Windchill modeler, then automatically transformed to Event-B and finally imported into the RODIN platform for formal verification.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-77543-8_14.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SalunkheBR21, author = {Shubhangi Salunkhe and Randolf Berglehner and Abdul Rasheeq}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry}, title = {Automatic Transformation of SysML Model to Event-B Model for Railway {CCS} Application}, booktitle = {Rigorous State-Based Methods - 8th International Conference, {ABZ} 2021, Ulm, Germany, June 9-11, 2021, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12709}, pages = {143--149}, publisher = {Springer}, year = {2021}, url = {https://doi.org/10.1007/978-3-030-77543-8\\_14}, doi = {10.1007/978-3-030-77543-8\\_14}, timestamp = {Tue, 15 Jun 2021 17:24:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/SalunkheBR21.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c55bf4c96ba91721ea2176775a553217","permalink":"/publication/salunkhebr21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/salunkhebr21/","section":"publication","summary":"Abstract Digitalisation and innovation among the railway systems entail effort-demanding challenges, especially when considering how crucial it is to verify safety requirements and proof security levels. The early Verification and Validation (V\u0026amp;V) of railway systems detect critical issues and avoid severe consequences due to software failure.","tags":["ABZ'21"],"title":"Automatic Transformation of SysML Model to Event-B Model for Railway CCS Application","type":"publication"},{"authors":["Jean-Paul Bodeveix","Mamoun Filali"],"categories":[],"content":"Abstract This paper presents an Event-B meta-modelisation of an Event-B project restricted to its context hierarchy which introduces the functional part of a development through sets, constants, axioms and theorems. We study the proposal of a new mechanism for Event-B. It consists in allowing to instantiate in a new context an already proved theorem in a given context. We investigate the validation of the instantiation mechanism in order to prove the validity of imported theorems. We also compare the proposal with similar mechanisms available within some existing theorem provers.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-77543-8_5.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BodeveixF21, author = {Jean{-}Paul Bodeveix and Mamoun Filali}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry}, title = {Event-B Formalization of Event-B Contexts}, booktitle = {Rigorous State-Based Methods - 8th International Conference, {ABZ} 2021, Ulm, Germany, June 9-11, 2021, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12709}, pages = {66--80}, publisher = {Springer}, year = {2021}, url = {https://doi.org/10.1007/978-3-030-77543-8\\_5}, doi = {10.1007/978-3-030-77543-8\\_5}, timestamp = {Tue, 15 Jun 2021 17:24:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/BodeveixF21.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"ca8cf1f8c7d7463ae4ee2bdb4efeff6c","permalink":"/publication/bodeveixf21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/bodeveixf21/","section":"publication","summary":"Abstract This paper presents an Event-B meta-modelisation of an Event-B project restricted to its context hierarchy which introduces the functional part of a development through sets, constants, axioms and theorems. We study the proposal of a new mechanism for Event-B.","tags":["ABZ'21"],"title":"Event-B Formalization of Event-B Contexts","type":"publication"},{"authors":["Andrea Bombarda","Silvia Bonfanti","Angelo Gargantini","Elvinia Riccobene"],"categories":[],"content":"Abstract ASMs and the ASMETA framework can be used to model and analyze a variety of systems, and many of them rely on time constraints. In this paper, we present the ASMETA extension to deal with model time features.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-77543-8_8.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BombardaBGR21, author = {Andrea Bombarda and Silvia Bonfanti and Angelo Gargantini and Elvinia Riccobene}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry}, title = {Extending {ASMETA} with Time Features}, booktitle = {Rigorous State-Based Methods - 8th International Conference, {ABZ} 2021, Ulm, Germany, June 9-11, 2021, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12709}, pages = {105--111}, publisher = {Springer}, year = {2021}, url = {https://doi.org/10.1007/978-3-030-77543-8\\_8}, doi = {10.1007/978-3-030-77543-8\\_8}, timestamp = {Tue, 15 Jun 2021 17:24:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/BombardaBGR21.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"2e0f85615d75f3f496df8276c572ce48","permalink":"/publication/bombardabgr21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/bombardabgr21/","section":"publication","summary":"Abstract ASMs and the ASMETA framework can be used to model and analyze a variety of systems, and many of them rely on time constraints. In this paper, we present the ASMETA extension to deal with model time features.","tags":["ABZ'21"],"title":"Extending ASMETA with Time Features","type":"publication"},{"authors":["Asieh Salehi Fathabadi","Colin F. Snook","Thai Son Hoang","Dana Dghaym","Michael J. Butler"],"categories":[],"content":"Abstract Event-B is a state-based formal method for system development. The Event-B mathematical language does not support a syntax for the direct definition of structured types such as records. This paper proposes extending the Event-B language with direct record definitions. A key feature is the ability to extend records with new fields in refinement steps. The XEvent-B tool, which supports a textual representation of Event-B models, is extended to provide support for direct record definition and automatic transformation of record structures into standard Event-B elements. We demonstrate this work by modelling of the Tokeneer case study.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-77543-8_12.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{FathabadiSHDB21, author = {Asieh Salehi Fathabadi and Colin F. Snook and Thai Son Hoang and Dana Dghaym and Michael J. Butler}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry}, title = {Extensible Record Structures in Event-B}, booktitle = {Rigorous State-Based Methods - 8th International Conference, {ABZ} 2021, Ulm, Germany, June 9-11, 2021, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12709}, pages = {130--136}, publisher = {Springer}, year = {2021}, url = {https://doi.org/10.1007/978-3-030-77543-8\\_12}, doi = {10.1007/978-3-030-77543-8\\_12}, timestamp = {Tue, 15 Jun 2021 17:24:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/FathabadiSHDB21.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7543925c9820299e74c8906383dbf6ad","permalink":"/publication/fathabadishdb21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/fathabadishdb21/","section":"publication","summary":"Abstract Event-B is a state-based formal method for system development. The Event-B mathematical language does not support a syntax for the direct definition of structured types such as records. This paper proposes extending the Event-B language with direct record definitions.","tags":["ABZ'21"],"title":"Extensible Record Structures in Event-B","type":"publication"},{"authors":["Peter Riviere"],"categories":[],"content":"Abstract State-based Formal methods have been used to design and verify the development of complex software systems for a long time. Such methods are underpinned with solid mathematical concepts.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-77543-8_15.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Riviere21, author = {Peter Riviere}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry}, title = {Formal Meta Engineering Event-B: Extension and Reasoning The {EB4EB} Framework}, booktitle = {Rigorous State-Based Methods - 8th International Conference, {ABZ} 2021, Ulm, Germany, June 9-11, 2021, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12709}, pages = {153--157}, publisher = {Springer}, year = {2021}, url = {https://doi.org/10.1007/978-3-030-77543-8\\_15}, doi = {10.1007/978-3-030-77543-8\\_15}, timestamp = {Wed, 09 Jun 2021 12:14:31 +0200}, biburl = {https://dblp.org/rec/conf/asm/Riviere21.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"ff7a6851cb3d3085cda6ef880d9a4adf","permalink":"/publication/riviere21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/riviere21/","section":"publication","summary":"Abstract State-based Formal methods have been used to design and verify the development of complex software systems for a long time. Such methods are underpinned with solid mathematical concepts.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible.","tags":["ABZ'21"],"title":"Formal Meta Engineering Event-B: Extension and Reasoning The EB4EB Framework","type":"publication"},{"authors":["Robert Eschbach"],"categories":[],"content":"Abstract The European Railway Traffic Management System (ERTMS) aims at the replacement of incompatible national railway traffic management systems in Europe. A part of ERTMS is the European Train Control System (ETCS). ETCS is an automatic train protection system and can collaborate with an automatic train operation system (ATO). ATO can control and monitor the braking, traction and door system of a train. This collaboration is called ATO over ETCS. In this paper we describe the experiences gained in the formalization and the formal analysis of system requirements related to the modes of the ATO onboard unit and its interfaces to train, ATO trackside unit, and ETCS onboard unit. A primary goal to achieve was the stepwise and systematic construction of an Event-B specification tightly coupled with the requirements based on a bidirectional traceability concept. Another goal was the formal verification of important safety properties related to the mode transitions and transition conditions of the ATO onboard unit.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-77543-8_13.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Eschbach21, author = {Robert Eschbach}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry}, title = {Formalizing and Analyzing System Requirements of Automatic Train Operation over {ETCS} Using Event-B}, booktitle = {Rigorous State-Based Methods - 8th International Conference, {ABZ} 2021, Ulm, Germany, June 9-11, 2021, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12709}, pages = {137--142}, publisher = {Springer}, year = {2021}, url = {https://doi.org/10.1007/978-3-030-77543-8\\_13}, doi = {10.1007/978-3-030-77543-8\\_13}, timestamp = {Tue, 15 Jun 2021 17:24:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/Eschbach21.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e1c99a6695babe2a24bef97c7abba2ae","permalink":"/publication/eschbach21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/eschbach21/","section":"publication","summary":"Abstract The European Railway Traffic Management System (ERTMS) aims at the replacement of incompatible national railway traffic management systems in Europe. A part of ERTMS is the European Train Control System (ETCS).","tags":["ABZ'21"],"title":"Formalizing and Analyzing System Requirements of Automatic Train Operation over ETCS Using Event-B","type":"publication"},{"authors":["Conor Reynolds"],"categories":[],"content":"Abstract We formalize a fragment of the theory of institutions sufficient to establish basic facts about the institution for Event-B, and its relationship with the institution for first-order predicate logic. We prove the satisfaction condition for and encode the institution comorphism embedding in .\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-77543-8_17.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Reynolds21, author = {Conor Reynolds}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry}, title = {Formalizing the Institution for Event-B in the Coq Proof Assistant}, booktitle = {Rigorous State-Based Methods - 8th International Conference, {ABZ} 2021, Ulm, Germany, June 9-11, 2021, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12709}, pages = {162--166}, publisher = {Springer}, year = {2021}, url = {https://doi.org/10.1007/978-3-030-77543-8\\_17}, doi = {10.1007/978-3-030-77543-8\\_17}, timestamp = {Tue, 15 Jun 2021 17:24:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/Reynolds21.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"be4762cadf712eb95af3022cea0f1aac","permalink":"/publication/reynolds21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/reynolds21/","section":"publication","summary":"Abstract We formalize a fragment of the theory of institutions sufficient to establish basic facts about the institution for Event-B, and its relationship with the institution for first-order predicate logic. We prove the satisfaction condition for and encode the institution comorphism embedding in .","tags":["ABZ'21"],"title":"Formalizing the Institution for Event-B in the Coq Proof Assistant","type":"publication"},{"authors":["Sophie Coudert"],"categories":[],"content":"Abstract This paper presents an Event-B modeling of the general version of the Sliding Window Protocol (SWP). SWPs ensure reliable data transfer over unreliable media by routing frames together with their indexes. Providing SWPs with formal guarantees is recognized to be quite complex. The experiment we present here shows that Event-B refinement is a suitable approach to ensure the safety of the protocol. First a simple model is developed with unbounded frame indexes. Then bounded indexes and modular arithmetic are introduced, as concrete indexes have fixed size. At this “hybrid” level, unbounded indexes are not used any more in computations but they are still useful to express some properties. Finally, abstract general media are refined towards queues, as an example of implementation. All unbounded indexes fully disappear in the final model.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-77543-8_4.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Coudert21, author = {Sophie Coudert}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry}, title = {Proving the Safety of a Sliding Window Protocol with Event-B}, booktitle = {Rigorous State-Based Methods - 8th International Conference, {ABZ} 2021, Ulm, Germany, June 9-11, 2021, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12709}, pages = {50--65}, publisher = {Springer}, year = {2021}, url = {https://doi.org/10.1007/978-3-030-77543-8\\_4}, doi = {10.1007/978-3-030-77543-8\\_4}, timestamp = {Wed, 09 Jun 2021 12:14:31 +0200}, biburl = {https://dblp.org/rec/conf/asm/Coudert21.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"9cb021e8bd17c129e32fb6bddabf71f9","permalink":"/publication/coudert21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/coudert21/","section":"publication","summary":"Abstract This paper presents an Event-B modeling of the general version of the Sliding Window Protocol (SWP). SWPs ensure reliable data transfer over unreliable media by routing frames together with their indexes.","tags":["ABZ'21"],"title":"Proving the Safety of a Sliding Window Protocol with Event-B","type":"publication"},{"authors":["Tristan Dyer","John W. Baugh Jr."],"categories":[],"content":"Abstract We introduce Sterling, a web-based visualization tool that provides interactive views of relational models and allows users to create custom visualizations using modern JavaScript libraries like D3 and Cytoscape. We outline its design goals and architecture, and describe custom visualizations developed with Sterling that enable verification studies of scientific software used in production. While development is driven primarily by the Alloy community, other relational modeling languages are accommodated by Sterling’s data agnostic architecture.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-77543-8_7.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DyerB21, author = {Tristan Dyer and John W. Baugh Jr.}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry}, title = {Sterling: {A} Web-Based Visualizer for Relational Modeling Languages}, booktitle = {Rigorous State-Based Methods - 8th International Conference, {ABZ} 2021, Ulm, Germany, June 9-11, 2021, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12709}, pages = {99--104}, publisher = {Springer}, year = {2021}, url = {https://doi.org/10.1007/978-3-030-77543-8\\_7}, doi = {10.1007/978-3-030-77543-8\\_7}, timestamp = {Mon, 03 Mar 2025 20:58:01 +0100}, biburl = {https://dblp.org/rec/conf/asm/DyerB21.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e6e891e5617735f9b40ac9acbb1c9226","permalink":"/publication/dyerb21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/dyerb21/","section":"publication","summary":"Abstract We introduce Sterling, a web-based visualization tool that provides interactive views of relational models and allows users to create custom visualizations using modern JavaScript libraries like D3 and Cytoscape. We outline its design goals and architecture, and describe custom visualizations developed with Sterling that enable verification studies of scientific software used in production.","tags":["ABZ'21"],"title":"Sterling: A Web-Based Visualizer for Relational Modeling Languages","type":"publication"},{"authors":["Thai Son Hoang","Colin F. Snook","Dana Dghaym","Asieh Salehi Fathabadi","Michael J. Butler"],"categories":[],"content":"Abstract We present the CamilleX framework for the Rodin platform in this paper. The framework provides a textual representation and persistence for the Event-B modelling constructs. It supports direct extensions to the Event-B syntax such as machine inclusion and record structures, as well as indirect extensions provided by other plugins such as UML-B diagrams. We discusses CamilleX’s design and in particular, its extension mechanisms and examples of their use.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-77543-8_11.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{HoangSDFB21, author = {Thai Son Hoang and Colin F. Snook and Dana Dghaym and Asieh Salehi Fathabadi and Michael J. Butler}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry}, title = {The CamilleX Framework for the Rodin Platform}, booktitle = {Rigorous State-Based Methods - 8th International Conference, {ABZ} 2021, Ulm, Germany, June 9-11, 2021, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12709}, pages = {124--129}, publisher = {Springer}, year = {2021}, url = {https://doi.org/10.1007/978-3-030-77543-8\\_11}, doi = {10.1007/978-3-030-77543-8\\_11}, timestamp = {Tue, 15 Jun 2021 17:24:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/HoangSDFB21.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"77dcd5b37694ef82206d6602d79024be","permalink":"/publication/hoangsdfb21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/hoangsdfb21/","section":"publication","summary":"Abstract We present the CamilleX framework for the Rodin platform in this paper. The framework provides a textual representation and persistence for the Event-B modelling constructs. It supports direct extensions to the Event-B syntax such as machine inclusion and record structures, as well as indirect extensions provided by other plugins such as UML-B diagrams.","tags":["ABZ'21"],"title":"The CamilleX Framework for the Rodin Platform","type":"publication"},{"authors":["Chiara Braghin","Mario Lilli","Elvinia Riccobene"],"categories":[],"content":"Abstract In the security protocols domain, formal verification is more and more highly demanded to guarantee security assurance: humans increasingly depend on the use of connected devices in their daily life, so they must be protected against possible threats and accidents. However, formal verification, and in general the use of formal methods, is slowed by myths and misconceptions, mainly due to their mathematical base, which discourages many designers or engineers from their adoption. In this paper, we pose the basis for the long-term development of an ASM-based user-friendly framework for the formal verification of security protocols. We introduce a mathematical-based set of templates to formalise common patterns in security protocols and a set of security properties. These templates facilitate the protocol formal verification by providing built-in functions and domains, as well as transition rules and property schema, to be customised according to the specific protocol to be verified. The effectiveness of this approach is shown by means of their application to a number of well-known cryptographic security protocols.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-77543-8_2.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BraghinLR21, author = {Chiara Braghin and Mario Lilli and Elvinia Riccobene}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry}, title = {Towards ASM-Based Automated Formal Verification of Security Protocols}, booktitle = {Rigorous State-Based Methods - 8th International Conference, {ABZ} 2021, Ulm, Germany, June 9-11, 2021, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12709}, pages = {17--33}, publisher = {Springer}, year = {2021}, url = {https://doi.org/10.1007/978-3-030-77543-8\\_2}, doi = {10.1007/978-3-030-77543-8\\_2}, timestamp = {Tue, 15 Jun 2021 17:24:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/BraghinLR21.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d6398c805eb1685addcd5e7c77a6701d","permalink":"/publication/braghinlr21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/braghinlr21/","section":"publication","summary":"Abstract In the security protocols domain, formal verification is more and more highly demanded to guarantee security assurance: humans increasingly depend on the use of connected devices in their daily life, so they must be protected against possible threats and accidents.","tags":["ABZ'21"],"title":"Towards ASM-Based Automated Formal Verification of Security Protocols","type":"publication"},{"authors":["Fengqing Jiang","Neng Xiong","Xinyu Lian","Senén González","Klaus-Dieter Schewe"],"categories":[],"content":"Abstract The BSP bridging model can be exploited to support MapReduce processing. This article describes how this can be realised using a work-stealing approach, where an idle processor can autonomously grab a thread from a partially ordered pool of open threads and execute it. It is further outlined that this can be generalised for the refinement of an unboundedly parallel ASM by a concurrent, reflective BSP-ASM, i.e. the individual agents are associated with reflective ASMs, i.e. they can adapt their own program.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-77543-8_10.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{JiangXLGS21, author = {Fengqing Jiang and Neng Xiong and Xinyu Lian and Sen{\\'{e}}n Gonz{\\'{a}}lez and Klaus{-}Dieter Schewe}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry}, title = {Towards Refinement of Unbounded Parallelism in ASMs Using Concurrency and Reflection}, booktitle = {Rigorous State-Based Methods - 8th International Conference, {ABZ} 2021, Ulm, Germany, June 9-11, 2021, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12709}, pages = {118--123}, publisher = {Springer}, year = {2021}, url = {https://doi.org/10.1007/978-3-030-77543-8\\_10}, doi = {10.1007/978-3-030-77543-8\\_10}, timestamp = {Wed, 09 Jun 2021 12:14:31 +0200}, biburl = {https://dblp.org/rec/conf/asm/JiangXLGS21.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"3e061427b4fc29c81a0d238e4b72fccd","permalink":"/publication/jiangxlgs21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/jiangxlgs21/","section":"publication","summary":"Abstract The BSP bridging model can be exploited to support MapReduce processing. This article describes how this can be realised using a work-stealing approach, where an idle processor can autonomously grab a thread from a partially ordered pool of open threads and execute it.","tags":["ABZ'21"],"title":"Towards Refinement of Unbounded Parallelism in ASMs Using Concurrency and Reflection","type":"publication"},{"authors":["Zilinghan Li","Shilan He","Yiqing Du","Senén González","Klaus-Dieter Schewe"],"categories":[],"content":"Abstract MapReduce supports the processing of large data sets in parallel. It has been shown that MapReduce is an example for the use of the bulk synchronous parallel (BSP) bridging model, a model for parallel computation on a fixed set of processors comprising alternating computation and communication phases. In this article we extend the normal execution of MapReduce from processing large finite data sets to processing stream queries with input data stream assumed to continue indefinitely. We classify stream queries into three classes, memoryless, semi-memoryless and memorable, and provide the model for each class using MapReduce based on BSP. In addition, as some stream queries require large amounts of computing sources, the BSP computation model is extended to a model with unbounded many agents, but preserving the barrier synchronization. A behavioral theory is developed for this model extending the behavioral theory of the BSP model. This comprises an axiomatization, the definition of Infinite-Agent BSP abstract state machines (Inf-Ag-BSP-ASM) and the proof that such ASMs capture the unbounded synchronized computations. Finally, we show how MapReduce processing can be further improved on grounds of the unbounded extension.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-77543-8_1.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{LiHDGS21, author = {Zilinghan Li and Shilan He and Yiqing Du and Sen{\\'{e}}n Gonz{\\'{a}}lez and Klaus{-}Dieter Schewe}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry}, title = {Unbounded Barrier-Synchronized Concurrent ASMs for Effective MapReduce Processing on Streams}, booktitle = {Rigorous State-Based Methods - 8th International Conference, {ABZ} 2021, Ulm, Germany, June 9-11, 2021, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12709}, pages = {3--16}, publisher = {Springer}, year = {2021}, url = {https://doi.org/10.1007/978-3-030-77543-8\\_1}, doi = {10.1007/978-3-030-77543-8\\_1}, timestamp = {Wed, 09 Jun 2021 12:14:31 +0200}, biburl = {https://dblp.org/rec/conf/asm/LiHDGS21.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"05aeae6658bb762dc19672b54f65f1fe","permalink":"/publication/lihdgs21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/lihdgs21/","section":"publication","summary":"Abstract MapReduce supports the processing of large data sets in parallel. It has been shown that MapReduce is an example for the use of the bulk synchronous parallel (BSP) bridging model, a model for parallel computation on a fixed set of processors comprising alternating computation and communication phases.","tags":["ABZ'21"],"title":"Unbounded Barrier-Synchronized Concurrent ASMs for Effective MapReduce Processing on Streams","type":"publication"},{"authors":["Fabian Vu","Michael Leuschel","Atif Mashkoor"],"categories":[],"content":"Abstract The validation of a formal model consists of checking its conformance with actual requirements. In the context of (Event-) B, some temporal aspects can typically be validated by LTL or CTL model checking, while other properties can be validated via interactive animation or trace replay. In this paper, we present a new simulation-based validation technique for (Event-) B models called SimB. The proposed technique uses annotations to construct simulations, taking probabilistic and real-time aspects of the models into account. In this fashion, statistical properties of a single simulation run or a series of runs can be checked (e.g., Monte Carlo estimation or hypothesis tests). SimB complements animation and model checking, and its usability has been assessed via several case studies.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-77543-8_6.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{VuLM21, author = {Fabian Vu and Michael Leuschel and Atif Mashkoor}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry}, title = {Validation of Formal Models by Timed Probabilistic Simulation}, booktitle = {Rigorous State-Based Methods - 8th International Conference, {ABZ} 2021, Ulm, Germany, June 9-11, 2021, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12709}, pages = {81--96}, publisher = {Springer}, year = {2021}, url = {https://doi.org/10.1007/978-3-030-77543-8\\_6}, doi = {10.1007/978-3-030-77543-8\\_6}, timestamp = {Tue, 15 Jun 2021 17:24:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/VuLM21.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"509cdb9446339d77fbae69c9c2dd06be","permalink":"/publication/vulm21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/vulm21/","section":"publication","summary":"Abstract The validation of a formal model consists of checking its conformance with actual requirements. In the context of (Event-) B, some temporal aspects can typically be validated by LTL or CTL model checking, while other properties can be validated via interactive animation or trace replay.","tags":["ABZ'21"],"title":"Validation of Formal Models by Timed Probabilistic Simulation","type":"publication"},{"authors":["Dana Dghaym","Thai Son Hoang","Michael J. Butler","Runshan Hu","Leonardo Aniello","Vladimiro Sassone"],"categories":[],"content":"Abstract Event-B, a refinement-based formal modelling language, has traditionally focused on safety, but now increasingly finds a new role in developing secure systems. In this paper we take a fresh look at security and focus on what security means for the system rather than looking at detailed protocols. We use Event-B for proving security from an abstract view and refining it towards design details, focusing on the refinement of the availability property of the system. We define a general approach to guarantee the availability of events by ensuring the non-strengthening of their guards, taking into consideration their parameter types. We illustrate our approach using a smart ballot system, an integral part of modern voting systems.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-77543-8_3.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DghaymHBHAS21, author = {Dana Dghaym and Thai Son Hoang and Michael J. Butler and Runshan Hu and Leonardo Aniello and Vladimiro Sassone}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry}, title = {Verifying System-Level Security of a Smart Ballot Box}, booktitle = {Rigorous State-Based Methods - 8th International Conference, {ABZ} 2021, Ulm, Germany, June 9-11, 2021, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12709}, pages = {34--49}, publisher = {Springer}, year = {2021}, url = {https://doi.org/10.1007/978-3-030-77543-8\\_3}, doi = {10.1007/978-3-030-77543-8\\_3}, timestamp = {Wed, 09 Jun 2021 12:14:31 +0200}, biburl = {https://dblp.org/rec/conf/asm/DghaymHBHAS21.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"1df0c63b11f54bceaa04976b7a86dce0","permalink":"/publication/dghaymhbhas21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/dghaymhbhas21/","section":"publication","summary":"Abstract Event-B, a refinement-based formal modelling language, has traditionally focused on safety, but now increasingly finds a new role in developing secure systems. In this paper we take a fresh look at security and focus on what security means for the system rather than looking at detailed protocols.","tags":["ABZ'21"],"title":"Verifying System-Level Security of a Smart Ballot Box","type":"publication"},{"authors":null,"categories":null,"content":"This conference was postponed due to the international outbreak of CoVid-19. See ABZ 2021\nNevertheless, the LNCS volume was published in 2020 and the talks were given as part of ABZ 2021.\n","date":1591660800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7d4fcadaa3a4884ff3bc3310d996c2bd","permalink":"/2020/","publishdate":"2020-06-09T00:00:00Z","relpermalink":"/2020/","section":"event","summary":"7th International Conference on Rigorous State-Based Methods","tags":["ABZ'20"],"title":"ABZ 2020 (Ulm, Germany)","type":"event"},{"authors":["Sebastian Krings","Philipp Koerner","Jannik Dunkelau","Chris Rutenkolk"],"categories":[],"content":"Abstract In this article, we present an approach to the ABZ 2020 case study, that differs from the ones usually presented at ABZ: Rather than using a (correct-by-construction) approach following a formal method, we use MISRA C for a low-level implementation instead. We strictly adhere to test-driven development for validation, and only afterwards apply model checking using CBMC for verification. In consequence, our realization of the ABZ case study can serve as a baseline reference for comparison, allowing to assess the benefit provided by the various formal modeling languages, methods and tools.\nDocument    var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_30.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{krings2020abz, title={{A Verified Low-Level Implementation of the Adaptive Exterior Light and Speed Control System}}, author={Krings, Sebastian and Koerner, Philipp and Dunkelau, Jannik and Rutenkolk, Chris}, booktitle={7th International Conference on Rigorous State Based Methods (ABZ'20)}, pages={382--397}, year={2020}, organization={Springer} }  Sources   Used formal method: MISRA C\nFor more information, please contact the authors\n  ","date":1591142400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"b27f312144008cab3206b372376e4905","permalink":"/publication/kringskdr20/","publishdate":"2020-06-03T00:00:00Z","relpermalink":"/publication/kringskdr20/","section":"publication","summary":"Abstract In this article, we present an approach to the ABZ 2020 case study, that differs from the ones usually presented at ABZ: Rather than using a (correct-by-construction) approach following a formal method, we use MISRA C for a low-level implementation instead.","tags":["ABZ'20"],"title":"A Verified Low-Level Implementation of the Adaptive Exterior Light and Speed Control System","type":"publication"},{"authors":["Amel Mammar","Marc Frappier","Regine Laleau"],"categories":[],"content":"Abstract This paper introduces an Event-B formal model of the adaptive exterior light system for cars, a case study proposed in the context of the ABZ2020 conference. The system describes the different provided lights and the conditions under which they are switched on/off in order to improve the visibility of the driver without dazzling the oncoming ones. The system can be viewed as a lights controller that reads different information form the available sensors (key state, exterior luminosity, etc.) and takes the adequate actions by acting on the actuators of the lights in order to ensure a good visibility for the driver according to the information read. Our model is built using stepwise refinement with the Event-B method. We consider all the features of the case study, all proof obligations have been discharged using the rodin provers. Our model has been validated using ProB by applying the different provided scenarios. This validation has permitted us to point out and correct some mistakes, ambiguities and oversights in the first versions of the case study.\nDocument    var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_28.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{mammar2020abz, title={{An Event-B Model of an Automotive Adaptive Exterior Light System}}, author={Mammar, Amel and Frappier, Marc and Laleau, Regine}, booktitle={7th International Conference on Rigorous State Based Methods (ABZ'20)}, pages={351--366}, year={2020}, organization={Springer} }  Sources   Used formal method: Event-B\nFor more information, please contact the authors\n  ","date":1591142400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"883a1a13e86d197b2a4be1643ca3a902","permalink":"/publication/mammarfl20/","publishdate":"2020-06-03T00:00:00Z","relpermalink":"/publication/mammarfl20/","section":"publication","summary":"Abstract This paper introduces an Event-B formal model of the adaptive exterior light system for cars, a case study proposed in the context of the ABZ2020 conference. The system describes the different provided lights and the conditions under which they are switched on/off in order to improve the visibility of the driver without dazzling the oncoming ones.","tags":["ABZ'20"],"title":"An Event-B Model of an Automotive Adaptive Exterior Light System","type":"publication"},{"authors":["Amel Mammar","Marc Frappier"],"categories":[],"content":"Abstract The present paper presents our proposal of an Event-B model of a speed control system, a part of the case study provided in the ABZ2020 conference. The case study describes how the system regulates the current speed of a car according to a set criteria like the speed desired by the driver, the position of a possible preceding vehicle but also a given speed limit that the driver must not exceed. For that purpose, this controller reads different information form the available sensors (key state, desired speed, etc.) and takes the adequate actions by acting on the actuators of the car\u0026rsquo;s speed according to the read information. To formally model this system, we adopt a stepwise refinement approach with the Event-B method. We consider most features of the case study, all proof obligations have been discharged using the Rodin provers. Our model has been validated using ProB by applying the different provided scenarios. This validation has permitted us to point out and correct some mistakes, ambiguities and oversights contained in the first versions of the case study.\nDocument    var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_29.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{mammar2020modeling, title={{Modeling of a Speed Control System using Event-B}}, author={Mammar, Amel and Frappier, Marc}, booktitle={7th International Conference on Rigorous State Based Methods (ABZ'20)}, pages={367--381}, year={2020}, organization={Springer} }  Sources   Used formal method: Event-B\nFor more information, please contact the authors\n  ","date":1591142400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"1e326aa452d8e56ed75569d1c1ac6fda","permalink":"/publication/mammarf20/","publishdate":"2020-06-03T00:00:00Z","relpermalink":"/publication/mammarf20/","section":"publication","summary":"Abstract The present paper presents our proposal of an Event-B model of a speed control system, a part of the case study provided in the ABZ2020 conference. The case study describes how the system regulates the current speed of a car according to a set criteria like the speed desired by the driver, the position of a possible preceding vehicle but also a given speed limit that the driver must not exceed.","tags":["ABZ'20"],"title":"Modeling of a Speed Control System using Event-B","type":"publication"},{"authors":["Paolo Arcaini","Silvia Bonfanti","Angelo Gargantini","Elvinia Riccobene","Patrizia Scandurra"],"categories":[],"content":"Abstract In the context of automotive domain, modern control systems are software-intensive and have adaptive features to provide safety and comfort. These software-based features demand software engineering approaches and formal methods that are able to guarantee correct operation, since malfunctions may cause harm/damage. Adaptive Exterior Light and the Speed Control Systems are examples of software-intensive systems that equip modern cars. We have used the Abstract State Machines to model the behaviour of both control systems. Each model has been developed through model refinement, following the incremental way in which functional requirements are given. We used the asmeta tool-set to support the simulation of the abstract models, their validation against the informal requirements, and the verification of behavioural properties. In this paper, we discuss our modelling, validation and verification strategies, and the results (in terms of features addressed and not) of our activities. In particular, we provide insights on how we addressed the adaptive features (the adaptive high beam headlights and the adaptive cruise control) by explicitly modelling their software control loops according to the MAPE-K (Monitor-Analyse-Plan-Execute over a shared Knowledge) reference control model for self-adaptive systems.\nDocument    var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_25.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{arcaini2020abz, title={{Modelling an automotive software-intensive system with adaptive features using ASMETA}}, author={Arcaini, Paolo and Bonfanti, Silvia and Gargantini, Angelo and Riccobene, Elvinia and Scandurra, Patrizia}, booktitle={7th International Conference on Rigorous State Based Methods (ABZ'20)}, pages={302--317}, year={2020}, organization={Springer} }  Sources   Used formal method: ASM\n  Resources and tools: Asmeta\nFor more information, please contact the authors\n  ","date":1591142400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"6bedb7635bef3400b3558b6d5ee01169","permalink":"/publication/arcainibgrs20/","publishdate":"2020-06-03T00:00:00Z","relpermalink":"/publication/arcainibgrs20/","section":"publication","summary":"Abstract In the context of automotive domain, modern control systems are software-intensive and have adaptive features to provide safety and comfort. These software-based features demand software engineering approaches and formal methods that are able to guarantee correct operation, since malfunctions may cause harm/damage.","tags":["ABZ'20"],"title":"Modelling an automotive software-intensive system with adaptive features using ASMETA","type":"publication"},{"authors":["Michael Leuschel","Mareike Mutz","Michelle Werth"],"categories":[],"content":"Abstract We have modelled parts of the ABZ automotive case study using the B-method. For the early phases of modelling we have used the classical B for software, while for proof we have used Event-B and Rodin. It is maybe surprising that classical B\u0026rsquo;s machine inclusion mechanism along with operation calls can be used for modular system modelling. Moreover, for one particular style of modelling, the result can then be translated to superposition refinement with event extension in Event-B. Before conducting the proof, we have validated our models using model checking and animation with visualizations. The graphical visualizations were constructed using a new plugin (VisB) which helped uncover errors and transforms our model into an executable, interactive reference specification which can be examined by users without formal background.\nDocument    var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_27.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{leuschel2020abz, title={{Modelling and Validating an Automotive System in Classical B and Event-B}}, author={Leuschel, Michael and Mutz, Mareike and Werth, Michelle}, booktitle={7th International Conference on Rigorous State Based Methods (ABZ'20)}, pages={335--350}, year={2020}, organization={Springer} }  Sources   Used formal method: Classical B Event-B\n  Resources and tools: VisB\nFor more information, please contact the authors\n  ","date":1591142400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d270077afcf564f30fbd43b4bccf9b96","permalink":"/publication/leuschelmw20/","publishdate":"2020-06-03T00:00:00Z","relpermalink":"/publication/leuschelmw20/","section":"publication","summary":"Abstract We have modelled parts of the ABZ automotive case study using the B-method. For the early phases of modelling we have used the classical B for software, while for proof we have used Event-B and Rodin.","tags":["ABZ'20"],"title":"Modelling and Validating an Automotive System in Classical B and Event-B","type":"publication"},{"authors":["Alcino Cunha","Nuno Macedo","Chong Liu"],"categories":[],"content":"Abstract This paper reports on the development and validation of a formal model for an automotive adaptive exterior lights system (ELS) with multiple variants in Electrum, a lightweight formal specification language that extends Alloy with mutable relations and temporal logic. We explore different strategies to address variability, one in pure Electrum and another through an annotative language extension. We then show how Electrum and its Analyzer can be used to validate systems of this nature, namely by checking that the reference scenarios are admissible, and to automatically verify whether the established requirements hold. A prototype was developed to translate the provided validation sequences into Electrum and back to further automate the validation process. The resulting ELS model was validated against the provided validation sequences and verified for most of requirements for all variants.\nDocument    var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_26.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{cunha22020abz, title={{Validating Multiple Variants of an Automotive Light System with Electrum}}, author={Cunha, Alcino and Macedo, Nuno and Liu, Chong}, booktitle={7th International Conference on Rigorous State Based Methods (ABZ'20)}, pages={318--334}, year={2020}, organization={Springer} }  Sources   Used formal method: Electrum\n  Resources and tools: Electrum\nFor more information, please contact the authors\n  ","date":1591142400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"27d329433b6287ff1ae29178bc140129","permalink":"/publication/cunhaml20/","publishdate":"2020-06-03T00:00:00Z","relpermalink":"/publication/cunhaml20/","section":"publication","summary":"Abstract This paper reports on the development and validation of a formal model for an automotive adaptive exterior lights system (ELS) with multiple variants in Electrum, a lightweight formal specification language that extends Alloy with mutable relations and temporal logic.","tags":["ABZ'20"],"title":"Validating Multiple Variants of an Automotive Light System with Electrum","type":"publication"},{"authors":["Frank Houdek","Alexander Raschke"],"categories":[],"content":"Abstract This case study continues the successful series of case studies for formal specification and verification of the ABZ conference series, which started with the landing gear system and expanded with the hemodialysis medical device and the European Train Control System (ETCS) in the following years. This document describes two systems from the automotive domain: an adaptive exterior light system (ELS) and a speed control system (SCS). This specification is based on the SPES XT running example. Besides their general architectures, the requirements of the software based controllers are described. Both systems are only loosely coupled, which makes it possible to handle them independently\nDocument    var url = \"https:\\/\\/abz2020.uni-ulm.de\\/resources\\/files\\/casestudyABZ2020v1.17.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{houdek2020adaptive, title={Adaptive exterior light and speed control system}, author={Houdek, Frank and Raschke, Alexander}, booktitle={International Conference on Rigorous State-Based Methods}, pages={281--301}, year={2020}, organization={Springer} }  ","date":1588896e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"96bae850fa600475ca6b1fd1ae7c2a48","permalink":"/publication/houdekr20/","publishdate":"2020-05-08T00:00:00Z","relpermalink":"/publication/houdekr20/","section":"publication","summary":"Abstract This case study continues the successful series of case studies for formal specification and verification of the ABZ conference series, which started with the landing gear system and expanded with the hemodialysis medical device and the European Train Control System (ETCS) in the following years.","tags":["ABZ'20"],"title":"Adaptive Exterior Light and Speed Control System","type":"publication"},{"authors":["Egon Börger","Klaus-Dieter Schewe"],"categories":[],"content":"Abstract To overcome the practical limitations of partial-order runs of ‘distributed ASMs’ (Abstract State Machines) proposed by Gurevich, we have defined a concept of concurrent runs of multi-agent ASMs and could show that concurrent ASMs capture a natural language-independent axiomatic definition of concurrent algorithms, thus generalising Gurevich’s seminal ‘Sequential ASM Thesis’ from sequential to concurrent algorithms. However, we remained intrigued by the fact that Blass and Gurevich used partial-order runs of distributed ASMs to explain runs of sequential recursive algorithms. We discovered that also the inverse simulation holds: for every distributed ASM with partial order runs, these runs can be described by runs of a sequential recursive algorithm. This surprising result clarifies the difference in expressivity between partial-order and concurrent runs.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_6.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BorgerS20, author = {Egon B{\\\u0026quot;{o}}rger and Klaus{-}Dieter Schewe}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {A Characterization of Distributed ASMs with Partial-Order Runs}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {78--92}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_6}, doi = {10.1007/978-3-030-48077-6\\_6}, timestamp = {Mon, 25 May 2020 12:33:39 +0200}, biburl = {https://dblp.org/rec/conf/asm/BorgerS20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"21a3adf88452fe38d31f169ae916fc8a","permalink":"/publication/borgers20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/borgers20/","section":"publication","summary":"Abstract To overcome the practical limitations of partial-order runs of ‘distributed ASMs’ (Abstract State Machines) proposed by Gurevich, we have defined a concept of concurrent runs of multi-agent ASMs and could show that concurrent ASMs capture a natural language-independent axiomatic definition of concurrent algorithms, thus generalising Gurevich’s seminal ‘Sequential ASM Thesis’ from sequential to concurrent algorithms.","tags":["ABZ'20"],"title":"A Characterization of Distributed ASMs with Partial-Order Runs","type":"publication"},{"authors":["Meryem Afendi"],"categories":[],"content":"Abstract Cyber-Physical Systems (CPSs) connect the real world to software systems through a network of sensors and actuators: physical and discrete components interact in complex ways by involving different spatial and temporal scales. One of the most common architectures for CPSs is a discrete software controller which interacts with its physical environment in a closed-loop schema where input from sensors is processed and output is generated and communicated to actuators. We are concerned with the construction and verification of the correctness of such discrete controller using a correct by construction approach, which requires correct integration of discrete and continuous models.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_31.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Afendi20, author = {Meryem Afendi}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {A Correct by Construction Approach for the Modeling and the Verification of Cyber-Physical Systems in Event-B}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {401--404}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_31}, doi = {10.1007/978-3-030-48077-6\\_31}, timestamp = {Mon, 25 May 2020 12:33:39 +0200}, biburl = {https://dblp.org/rec/conf/asm/Afendi20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"0b5f14cd3aed0defd7243cb713601a38","permalink":"/publication/afendi20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/afendi20/","section":"publication","summary":"Abstract Cyber-Physical Systems (CPSs) connect the real world to software systems through a network of sensors and actuators: physical and discrete components interact in complex ways by involving different spatial and temporal scales.","tags":["ABZ'20"],"title":"A Correct by Construction Approach for the Modeling and the Verification of Cyber-Physical Systems in Event-B","type":"publication"},{"authors":["Racem Bougacha"],"categories":[],"content":"Abstract IRT Railenium ( http://railenium.eu/fr/) is a test and applied research center for the rail industry in France. One of its three R\u0026amp;D and innovation programs aims in particular to provide the technological tools and bricks necessary for the development of the Autonomous Train.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_33.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Bougacha20, author = {Racem Bougacha}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {A Formal Approach for the Modeling of High-Level Architectures Aligned with System Requirements}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {409--413}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_33}, doi = {10.1007/978-3-030-48077-6\\_33}, timestamp = {Mon, 25 May 2020 12:33:39 +0200}, biburl = {https://dblp.org/rec/conf/asm/Bougacha20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"16e9fa422134b6d5b024930231bb1f1d","permalink":"/publication/bougacha20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/bougacha20/","section":"publication","summary":"Abstract IRT Railenium ( http://railenium.eu/fr/) is a test and applied research center for the rail industry in France. One of its three R\u0026amp;D and innovation programs aims in particular to provide the technological tools and bricks necessary for the development of the Autonomous Train.","tags":["ABZ'20"],"title":"A Formal Approach for the Modeling of High-Level Architectures Aligned with System Requirements","type":"publication"},{"authors":["Ismaïl Mendil"],"categories":[],"content":"Abstract Interactive system development does not follow the same life cycle as other system developments. The essential differences lie in the iterative nature of such system development. Throughout iterations, the requirements undergo many changes due to the evolution of customer’s needs and user feedback after experiencing prototypes. The challenge is tougher in the case of critical HCI (aircraft cockpits, medical systems, nuclear power plant etc.). Indeed, critical HCI requires to be designed and built such that safety and security requirements are thoroughly fulfilled. This paper presents a novel development framework featuring formal verification and validation of critical interactive systems at modelling level. It identifies the several challenges of the interactive system development and settles down the main objectives. Furthermore, it sketches the most important traits of the proposed approach to circumvent the enumerated challenges. Hence, we discuss the importance of the pivot language Fluid, the domain theory specific to interactive systems and their modelling using Event-B.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_36.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Mendil20, author = {Isma{\\\u0026quot;{\\i}}l Mendil}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {A Framework for Critical Interactive System Formal Modelling and Analysis}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {423--426}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_36}, doi = {10.1007/978-3-030-48077-6\\_36}, timestamp = {Mon, 25 May 2020 12:33:39 +0200}, biburl = {https://dblp.org/rec/conf/asm/Mendil20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c0bda26c5ed7e6026590a4b40a7b35fa","permalink":"/publication/mendil20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/mendil20/","section":"publication","summary":"Abstract Interactive system development does not follow the same life cycle as other system developments. The essential differences lie in the iterative nature of such system development. Throughout iterations, the requirements undergo many changes due to the evolution of customer’s needs and user feedback after experiencing prototypes.","tags":["ABZ'20"],"title":"A Framework for Critical Interactive System Formal Modelling and Analysis","type":"publication"},{"authors":["Klaus-Dieter Schewe","Flavio Ferrarotti"],"categories":[],"content":"Abstract Reflective algorithms are algorithms that can modify their own behaviour. Recently a behavioural theory of reflective algorithms has been developed, which shows that they are captured by reflective abstract state machines (rASMs). Reflective ASMs exploit extended states that include an updatable representation of the ASM signature and rules to be executed by the machine in that state. Updates to the representation of ASM signatures and rules are realised by means of a sophisticated tree algebra defined in the background of the rASM. In this paper the theory is taken further by an extension of the logic of ASMs to capture inferences on rASMs. The key is the introduction of terms that are interpreted by ASM rules stored in some location. We show that fragments of the logic with a fixed bound on the number of steps preserve completeness, whereas the full run-logic for rASMs becomes incomplete.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_7.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ScheweF20, author = {Klaus{-}Dieter Schewe and Flavio Ferrarotti}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {A Logic for Reflective ASMs}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {93--106}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_7}, doi = {10.1007/978-3-030-48077-6\\_7}, timestamp = {Mon, 25 May 2020 12:33:39 +0200}, biburl = {https://dblp.org/rec/conf/asm/ScheweF20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"10cb8186aa0d85d6e4ca0d5b564325a4","permalink":"/publication/schewef20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/schewef20/","section":"publication","summary":"Abstract Reflective algorithms are algorithms that can modify their own behaviour. Recently a behavioural theory of reflective algorithms has been developed, which shows that they are captured by reflective abstract state machines (rASMs).","tags":["ABZ'20"],"title":"A Logic for Reflective ASMs","type":"publication"},{"authors":["Abdulaziz Almehrej","Leo Freitas","Paolo Modesti"],"categories":[],"content":"Abstract To counteract the lack of competition and innovation in the financial services industry, the EU has issued the Second Payment Services Directive (PSD2) encouraging account servicing payment service providers to share data. The UK, similarly to other European countries, has promoted a standard API for data sharing: the Open Banking Standard. We present an overview of the results of a formal security analysis of the Account and Transaction API protocol.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_16.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{AlmehrejFM20, author = {Abdulaziz Almehrej and Leo Freitas and Paolo Modesti}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Account and Transaction Protocol of the Open Banking Standard}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {230--236}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_16}, doi = {10.1007/978-3-030-48077-6\\_16}, timestamp = {Sat, 31 May 2025 23:08:41 +0200}, biburl = {https://dblp.org/rec/conf/asm/AlmehrejFM20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"074ee262e1651865d2df32dc9a022ff0","permalink":"/publication/almehrejfm20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/almehrejfm20/","section":"publication","summary":"Abstract To counteract the lack of competition and innovation in the financial services industry, the EU has issued the Second Payment Services Directive (PSD2) encouraging account servicing payment service providers to share data.","tags":["ABZ'20"],"title":"Account and Transaction Protocol of the Open Banking Standard","type":"publication"},{"authors":["Gerhard Schellhorn","Stefan Bodenmüller","Jörg Pfähler","Wolfgang Reif"],"categories":[],"content":"Abstract This paper defines a concept and a verification methodology for adding concurrency to a sequential refinement tower of abstract state machines, that is based on data refinement and a component structure. We have developed such a refinement tower for the Flashix file system earlier, from which we generate executable (C and Scala) Code. The question we answer in this paper, is how to add concurrency based on locks to such a refinement tower, without breaking the initial modular structure. We achieve this by just enhancing the relevant components, and adding intermediate atomicity refinements that complement the data refinements that are already there. We also give a verification methodology for such atomicity refinements.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_2.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SchellhornBPR20, author = {Gerhard Schellhorn and Stefan Bodenm{\\\u0026quot;{u}}ller and J{\\\u0026quot;{o}}rg Pf{\\\u0026quot;{a}}hler and Wolfgang Reif}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Adding Concurrency to a Sequential Refinement Tower}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {6--23}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_2}, doi = {10.1007/978-3-030-48077-6\\_2}, timestamp = {Sun, 25 Oct 2020 23:07:20 +0100}, biburl = {https://dblp.org/rec/conf/asm/SchellhornBPR20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"fe4668178701f7d6c541d9d6190bd6be","permalink":"/publication/schellhornbpr20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/schellhornbpr20/","section":"publication","summary":"Abstract This paper defines a concept and a verification methodology for adding concurrency to a sequential refinement tower of abstract state machines, that is based on data refinement and a component structure.","tags":["ABZ'20"],"title":"Adding Concurrency to a Sequential Refinement Tower","type":"publication"},{"authors":["Jannik Dunkelau","Joshua Schmidt","Michael Leuschel"],"categories":[],"content":"Abstract We evaluate the strengths and weaknesses of different backends of the ProB constraint solver. For this, we train a random forest over a database of constraints to classify whether a backend is able to find a solution within a given amount of time or answers unknown. The forest is then analysed in regards of feature importances to determine subsets of the B language in which the respective backends excel or lack for performance. The results are compared to our initial assumptions over each backend’s performance in these subsets based on personal experiences. While we do employ classifiers, we do not aim for a good predictor, but are rather interested in analysis of the classifier’s learned knowledge over the utilised B constraints. The aim is to strengthen our knowledge of the different tools at hand by finding subsets of the B language in which a backend performs better than others.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_8.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DunkelauSL20, author = {Jannik Dunkelau and Joshua Schmidt and Michael Leuschel}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Analysing ProB's Constraint Solving Backends - What Do They Know? Do They Know Things? Let's Find Out!}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {107--123}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_8}, doi = {10.1007/978-3-030-48077-6\\_8}, timestamp = {Wed, 16 Mar 2022 23:56:06 +0100}, biburl = {https://dblp.org/rec/conf/asm/DunkelauSL20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"55554b19d9c611064dde9581f63588a5","permalink":"/publication/dunkelausl20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/dunkelausl20/","section":"publication","summary":"Abstract We evaluate the strengths and weaknesses of different backends of the ProB constraint solver. For this, we train a random forest over a database of constraints to classify whether a backend is able to find a solution within a given amount of time or answers unknown.","tags":["ABZ'20"],"title":"Analysing ProB\u0026apos;s Constraint Solving Backends - What Do They Know? Do They Know Things? Let\u0026apos;s Find Out","type":"publication"},{"authors":["Alexis Grall"],"categories":[],"content":"Abstract The development of distributed algorithms offers challenges in verifying that they meet their specifications. The correct-by-construction approach consists in developing a model of the algorithm before transforming this model into a program.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_34.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Grall20, author = {Alexis Grall}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Automatic Generation of DistAlgo Programs from Event-B Models}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {414--417}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_34}, doi = {10.1007/978-3-030-48077-6\\_34}, timestamp = {Mon, 25 May 2020 12:33:39 +0200}, biburl = {https://dblp.org/rec/conf/asm/Grall20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c30a7f3da3d54266450a5e8f9ea626da","permalink":"/publication/grall20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/grall20/","section":"publication","summary":"Abstract The development of distributed algorithms offers challenges in verifying that they meet their specifications. The correct-by-construction approach consists in developing a model of the algorithm before transforming this model into a program.","tags":["ABZ'20"],"title":"Automatic Generation of DistAlgo Programs from Event-B Models","type":"publication"},{"authors":["Robert Clarisó","Jordi Cabot"],"categories":[],"content":"Abstract Complex software systems can be described using modeling notations such as UML/OCL or Alloy. Then, some correctness properties of these systems can be checked using model finders, which compute sample scenarios either fulfilling the desired properties or illustrating potential faults. Such scenarios allow designers to validate, verify and test the system under development. Nevertheless, when asked to produce several scenarios, model finders tend to produce similar solutions. This lack of diversity impairs their effectiveness as testing or validation assets. To solve this problem, we propose the use of graph kernels, a family of methods for computing the (dis)similarity among pairs of graphs. With this metric, it is possible to cluster scenarios effectively, improving the usability of model finders and making testing and validation more efficient.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_3.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ClarisoC20, author = {Robert Claris{\\'{o}} and Jordi Cabot}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Diverse Scenario Exploration in Model Finders Using Graph Kernels and Clustering}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {27--43}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_3}, doi = {10.1007/978-3-030-48077-6\\_3}, timestamp = {Mon, 15 Jun 2020 17:09:54 +0200}, biburl = {https://dblp.org/rec/conf/asm/ClarisoC20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7f9a9587047bdd1e23e62a298eb2d36f","permalink":"/publication/clarisoc20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/clarisoc20/","section":"publication","summary":"Abstract Complex software systems can be described using modeling notations such as UML/OCL or Alloy. Then, some correctness properties of these systems can be checked using model finders, which compute sample scenarios either fulfilling the desired properties or illustrating potential faults.","tags":["ABZ'20"],"title":"Diverse Scenario Exploration in Model Finders Using Graph Kernels and Clustering","type":"publication"},{"authors":["Sarah Benyagoub","Yamine Aït Ameur","Klaus-Dieter Schewe"],"categories":[],"content":"Abstract Choreographies prescribe the rendez-vous synchronisation of messages in a communicating system. Such a system is called realisable, if the traces of the prescribed communication coincide with those of the asynchronous system of peers, where the communication channels either use FIFO queues or multiset mailboxes. It has recently been shown that realisability can be characterised by two necessary conditions that together are also sufficient, whereas in general the synchronisability of communicating peers is undecidable. The sufficiency of the conditions permits the construction of correct communicating systems; their necessity shows that all choreography-defined communicating system can be obtained in this way. This article provides an integrated framework based on Event-B for such a construction with a major emphasis on Rodin-based proofs of correctness and completeness.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_11.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BenyagoubAS20, author = {Sarah Benyagoub and Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Event-B-Supported Choreography-Defined Communicating Systems - Correctness and Completeness}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {155--168}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_11}, doi = {10.1007/978-3-030-48077-6\\_11}, timestamp = {Mon, 25 May 2020 12:33:39 +0200}, biburl = {https://dblp.org/rec/conf/asm/BenyagoubAS20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f298c0acaf232d9ba55fb16a8b82570c","permalink":"/publication/benyagoubas20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/benyagoubas20/","section":"publication","summary":"Abstract Choreographies prescribe the rendez-vous synchronisation of messages in a communicating system. Such a system is called realisable, if the traces of the prescribed communication coincide with those of the asynchronous system of peers, where the communication channels either use FIFO queues or multiset mailboxes.","tags":["ABZ'20"],"title":"Event-B-Supported Choreography-Defined Communicating Systems - Correctness and Completeness","type":"publication"},{"authors":["Kenza Kraibi"],"categories":[],"content":"Abstract Event-B [3] is a formal method that allows the verification of critical systems properties.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_35.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Kraibi20, author = {Kenza Kraibi}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Event-B: From Systems to Sub-systems Modeling}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {418--422}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_35}, doi = {10.1007/978-3-030-48077-6\\_35}, timestamp = {Sun, 02 Oct 2022 15:55:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/Kraibi20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c3347c57918454288cff048cd00bd78c","permalink":"/publication/kraibi20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/kraibi20/","section":"publication","summary":"Abstract Event-B [3] is a formal method that allows the verification of critical systems properties.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible.","tags":["ABZ'20"],"title":"Event-B: From Systems to Sub-systems Modeling","type":"publication"},{"authors":["Héctor Ruíz Barradas","Lilian Burdy","David Déharbe"],"categories":[],"content":"Abstract Proof obligations of the B method and of Event B use predicates in the Constraints, Sets, Properties and Invariant clauses as hypotheses in proof obligations. A contradiction in these predicates results in trivially valid proof obligations and essentially voids the development. A textbook on the B method [3] presents three “existence proof obligations” to show the satisfiability of the Constraints, Properties and Invariant clauses as soon as they are stated in a component. Together with new existence proof obligations for refinement, this prevents the introduction of such contradictions in the refinement chain. This paper presents a detailed formalization of these existence proof obligations, specifying their implementation in Atelier B.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_20.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BarradasBD20, author = {H{\\'{e}}ctor Ru{\\'{\\i}}z Barradas and Lilian Burdy and David D{\\'{e}}harbe}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Existence Proof Obligations for Constraints, Properties and Invariants in Atelier {B}}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {255--259}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_20}, doi = {10.1007/978-3-030-48077-6\\_20}, timestamp = {Mon, 25 May 2020 12:33:39 +0200}, biburl = {https://dblp.org/rec/conf/asm/BarradasBD20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"16bec59eed64348c77813a4027725d56","permalink":"/publication/barradasbd20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/barradasbd20/","section":"publication","summary":"Abstract Proof obligations of the B method and of Event B use predicates in the Constraints, Sets, Properties and Invariant clauses as hypotheses in proof obligations. A contradiction in these predicates results in trivially valid proof obligations and essentially voids the development.","tags":["ABZ'20"],"title":"Existence Proof Obligations for Constraints, Properties and Invariants in Atelier B","type":"publication"},{"authors":["Nuno Macedo 0001","Alcino Cunha","José Pereira 0001","Renato Carvalho","Ricardo Silva","Ana C. R. Paiva","Miguel Sozinho Ramalho","Daniel Castro Silva"],"categories":[],"content":"Abstract This paper presents Alloy4Fun, a web application that enables online editing and sharing of Alloy models and instances (including dynamic ones developed with the Electrum extension), to be used mainly in an educational context. By introducing secret paragraphs and commands in the models, Alloy4Fun allows the distribution and automated assessment of simple specification challenges, a mechanism that enables students to learn the language at their own pace. Alloy4Fun stores all versions of shared and analyzed models, as well as derivation trees that depict how they evolved over time: this wealth of information can be mined by researchers or tutors to identify, for example, learning breakdowns in the class or typical mistakes made by Alloy users. Alloy4Fun has been used in formal methods graduate courses for two years and for the latest edition we present results regarding its adoption by the students, as well as preliminary insights regarding the most common bottlenecks when learning Alloy (and Electrum).\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_5.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MacedoCPCSPRS20, author = {Nuno Macedo and Alcino Cunha and Jos{\\'{e}} Pereira and Renato Carvalho and Ricardo Silva and Ana C. R. Paiva and Miguel Sozinho Ramalho and Daniel Castro Silva}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Experiences on Teaching Alloy with an Automated Assessment Platform}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {61--77}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_5}, doi = {10.1007/978-3-030-48077-6\\_5}, timestamp = {Tue, 25 Jun 2024 21:03:18 +0200}, biburl = {https://dblp.org/rec/conf/asm/MacedoCPCSPRS20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"76105380fcfd7bebd2c2284eabf9d362","permalink":"/publication/macedocpcsprs20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/macedocpcsprs20/","section":"publication","summary":"Abstract This paper presents Alloy4Fun, a web application that enables online editing and sharing of Alloy models and instances (including dynamic ones developed with the Electrum extension), to be used mainly in an educational context.","tags":["ABZ'20"],"title":"Experiences on Teaching Alloy with an Automated Assessment Platform","type":"publication"},{"authors":["Elvinia Riccobene","Patrizia Scandurra"],"categories":[],"content":"Abstract Modern intelligent software systems are rapidly growing in complexity and scale, and many real usage scenarios might be impossible to reproduce and validate at design-time. As envisioned by the Models@run.time research community, the use of formal models at runtime are fundamental to address this challenge. In this paper, we explore the concept of ASM@run.time and put this definition into the context of the runtime enforcement technique to address the runtime assurance of software systems. This is a work-in-progress research line.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_18.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{RiccobeneS20, author = {Elvinia Riccobene and Patrizia Scandurra}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Exploring the Concept of Abstract State Machines for System Runtime Enforcement}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {244--247}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_18}, doi = {10.1007/978-3-030-48077-6\\_18}, timestamp = {Mon, 15 Jun 2020 17:09:54 +0200}, biburl = {https://dblp.org/rec/conf/asm/RiccobeneS20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"51f4b6c359bfb4195bfdc380f117d22d","permalink":"/publication/riccobenes20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/riccobenes20/","section":"publication","summary":"Abstract Modern intelligent software systems are rapidly growing in complexity and scale, and many real usage scenarios might be impossible to reproduce and validate at design-time. As envisioned by the Models@run.","tags":["ABZ'20"],"title":"Exploring the Concept of Abstract State Machines for System Runtime Enforcement","type":"publication"},{"authors":["Paulius Stankaitis","Alexei Iliasov","Tsutomu Kobayashi","Yamine Aït Ameur","Fuyuki Ishikawa","Alexander B. Romanovsky"],"categories":[],"content":"Abstract The decentralisation of railway signalling systems has the potential to increase railway network capacity, availability and reduce maintenance costs. Given the safety-critical nature of railway signalling and the complexity of novel distributed signalling solutions, their safety should be guaranteed by using thorough system validation methods. In this paper, we present a rigorous formal development and verification of a distributed protocol for reservation of railway sections, which we believe could deliver benefits of a decentralised signalling while ensuring safety and liveness properties. For the formal distributed protocol development and verification, we devised a multifaceted framework, which aims to reduce modelling and verification effort, while still providing complementary techniques to study protocol from all relevant perspectives.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_14.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{StankaitisIKAIR20, author = {Paulius Stankaitis and Alexei Iliasov and Tsutomu Kobayashi and Yamine A{\\\u0026quot;{\\i}}t Ameur and Fuyuki Ishikawa and Alexander B. Romanovsky}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Formal Distributed Protocol Development for Reservation of Railway Sections}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {203--219}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_14}, doi = {10.1007/978-3-030-48077-6\\_14}, timestamp = {Mon, 05 Feb 2024 20:35:41 +0100}, biburl = {https://dblp.org/rec/conf/asm/StankaitisIKAIR20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f98979a8120e9097ed83b5ef2e4d4230","permalink":"/publication/stankaitisikair20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/stankaitisikair20/","section":"publication","summary":"Abstract The decentralisation of railway signalling systems has the potential to increase railway network capacity, availability and reduce maintenance costs. Given the safety-critical nature of railway signalling and the complexity of novel distributed signalling solutions, their safety should be guaranteed by using thorough system validation methods.","tags":["ABZ'20"],"title":"Formal Distributed Protocol Development for Reservation of Railway Sections","type":"publication"},{"authors":["Mohammad Jahanian","Jiachen Chen","K. K. Ramakrishnan"],"categories":[],"content":"Abstract The Internet is composed of many interconnected, interoperating networks. With the recent advances in Future Internet design, multiple new network architectures, especially Information-Centric Networks (ICN) have emerged. Given the ubiquity of networks based on the Internet Protocol (IP), it is likely that we will have a number of different interconnecting network domains with different architectures, including ICNs. Their interoperability is important, but at the same time difficult to prove. A formal tool can be helpful for such analysis. ICNs have a number of unique characteristics, warranting formal analysis, establishing properties that go beyond, and are different from, what have been used in the state-of-the-art because ICN operates at the level of content names rather than node addresses. We need to focus on node-to-content reachability, rather than node-to-node reachability. In this paper, we present a formal approach to model and analyze information-centric interoperability (ICI). We use Alloy Analyzer’s model finding approach to verify properties expressed as invariants for information-centric services (both pull and push-based models) including content reachability and returnability. We extend our use of Alloy to model counting, to quantitatively analyze failure and mobility properties. We present a formally-verified ICI framework that allows for seamless interoperation among a multitude of network architectures. We also report on the impact of domain types, routing policies, and binding techniques on the probability of content reachability and returnability, under failures and mobility.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_4.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{JahanianCR20, author = {Mohammad Jahanian and Jiachen Chen and K. K. Ramakrishnan}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Formal Verification of Interoperability Between Future Network Architectures Using Alloy}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {44--60}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_4}, doi = {10.1007/978-3-030-48077-6\\_4}, timestamp = {Mon, 25 May 2020 12:33:39 +0200}, biburl = {https://dblp.org/rec/conf/asm/JahanianCR20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"500dc78fac4ed6eab47c74e24d28b0d7","permalink":"/publication/jahaniancr20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/jahaniancr20/","section":"publication","summary":"Abstract The Internet is composed of many interconnected, interoperating networks. With the recent advances in Future Internet design, multiple new network architectures, especially Information-Centric Networks (ICN) have emerged. Given the ubiquity of networks based on the Internet Protocol (IP), it is likely that we will have a number of different interconnecting network domains with different architectures, including ICNs.","tags":["ABZ'20"],"title":"Formal Verification of Interoperability Between Future Network Architectures Using Alloy","type":"publication"},{"authors":["Guillaume Dupont","Yamine Aït Ameur","Marc Pantel","Neeraj Kumar Singh 0001"],"categories":[],"content":"Abstract Cyber-Physical Systems (CPS) play a central role in modern days technology. From simple thermostat controllers to more advanced autonomous cars, their versatility makes them perfect candidates for many applications, in particular for safety critical ones. Thus, their certification is a key issue and formal methods are good candidates to assess safety and produce associated certificates. Hybrid systems show continuous-time dynamics depending on mode that is required in several stages of the architecture of Cyber-Physical Systems. Our work addresses the problem of formally verifying hybrid systems using refinement and proof with Event-B. Our previous work [14] presented formally verified generic architecture patterns for designing centralised hybrid systems, based on our generic approach [15]. We extend this work and give a formally verified architecture pattern aimed at modelling distributed hybrid systems, featuring multiple plants and multiple controllers. We validate the approach and illustrate the use of the defined pattern on an extension of a very common case study, borrowed from literature.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_12.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DupontAPS20, author = {Guillaume Dupont and Yamine A{\\\u0026quot;{\\i}}t Ameur and Marc Pantel and Neeraj Kumar Singh}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Formally Verified Architecture Patterns of Hybrid Systems Using Proof and Refinement with Event-B}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {169--185}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_12}, doi = {10.1007/978-3-030-48077-6\\_12}, timestamp = {Thu, 10 Nov 2022 08:55:26 +0100}, biburl = {https://dblp.org/rec/conf/asm/DupontAPS20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"3043cab0a3a4fb820cc1a8d82a3a6d17","permalink":"/publication/dupontaps20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/dupontaps20/","section":"publication","summary":"Abstract Cyber-Physical Systems (CPS) play a central role in modern days technology. From simple thermostat controllers to more advanced autonomous cars, their versatility makes them perfect candidates for many applications, in particular for safety critical ones.","tags":["ABZ'20"],"title":"Formally Verified Architecture Patterns of Hybrid Systems Using Proof and Refinement with Event-B","type":"publication"},{"authors":["Fahad Alotaibi"],"categories":[],"content":"Abstract Self-Driving Vehicles (SDVs) are considered to be safety-critical system. They may jeopardize the lives of passengers in the vehicle and people in the street, or damaging public property such as the transportation infrastructure. According to the National Transportation Safety Board report [1] of an Uber self-driving crash, the accident was caused by the internal components of SDVs when the AI module failed to detect a victim. The autonomous system was implemented to give a human driver control of a vehicle on the unmanaged areas; however, the driver was distracted and did not react within the appropriate time.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_32.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Alotaibi20, author = {Fahad Alotaibi}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Improving Trustworthiness of Self-driving Systems}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {405--408}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_32}, doi = {10.1007/978-3-030-48077-6\\_32}, timestamp = {Tue, 16 Jun 2020 17:18:07 +0200}, biburl = {https://dblp.org/rec/conf/asm/Alotaibi20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"92398aee4f96f6e70a6dba64532a7f1e","permalink":"/publication/alotaibi20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/alotaibi20/","section":"publication","summary":"Abstract Self-Driving Vehicles (SDVs) are considered to be safety-critical system. They may jeopardize the lives of passengers in the vehicle and people in the street, or damaging public property such as the transportation infrastructure.","tags":["ABZ'20"],"title":"Improving Trustworthiness of Self-driving Systems","type":"publication"},{"authors":["Fatima Shokri-Manninen","Leonidas Tsiopoulos","Jüri Vain","Marina Waldén"],"categories":[],"content":"Abstract Developing safety-critical systems requires to consider safety and real-time requirements in addition to functional requirements. Event-B is a formalism that is visualised by iUML-B and supports the development of functional aspects having rich verification and validation tools. However, it lacks well-established support for timing analysis. UPPAAL Timed Automata (UTA), on the other hand, address timing aspects of systems, and enable model checking reachability and timing properties. By integrating iUML-B and UTA, we combine the best verifying and validating practices from the two methods achieving a formal development of systems. We present the mapping for translating iUML-B constructs to UTA. The novel aspect is the use of a multi-process trigger-response pattern to address the modelling and verification of reachability properties of complex systems with concurrent processes. The approach is demonstrated on an airport control system, where timing, fairness, as well as liveness properties play a vital role in proving safety requirements.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_13.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Shokri-Manninen20, author = {Fatima Shokri{-}Manninen and Leonidas Tsiopoulos and J{\\\u0026quot;{u}}ri Vain and Marina Wald{\\'{e}}n}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Integration of iUML-B and {UPPAAL} Timed Automata for Development of Real-Time Systems with Concurrent Processes}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {186--202}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_13}, doi = {10.1007/978-3-030-48077-6\\_13}, timestamp = {Fri, 09 Apr 2021 18:50:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/Shokri-Manninen20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"36534170eacf064c385bd0b1fe5f60e3","permalink":"/publication/shokri-manninen20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/shokri-manninen20/","section":"publication","summary":"Abstract Developing safety-critical systems requires to consider safety and real-time requirements in addition to functional requirements. Event-B is a formalism that is visualised by iUML-B and supports the development of functional aspects having rich verification and validation tools.","tags":["ABZ'20"],"title":"Integration of iUML-B and UPPAAL Timed Automata for Development of Real-Time Systems with Concurrent Processes","type":"publication"},{"authors":["Ana Cavalcanti 0001"],"categories":[],"content":"Abstract The RoboStar framework supports model-based engineering of robotic applications.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_1.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Cavalcanti20, author = {Ana Cavalcanti}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Modelling and Verification of Robotic Platforms for Simulation Using RoboStar Technology}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {3--5}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_1}, doi = {10.1007/978-3-030-48077-6\\_1}, timestamp = {Sat, 09 Apr 2022 12:45:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Cavalcanti20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"37511e0ae8eec6e2e9ffe23a83f183ba","permalink":"/publication/cavalcanti20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/cavalcanti20/","section":"publication","summary":"Abstract The RoboStar framework supports model-based engineering of robotic applications.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.","tags":["ABZ'20"],"title":"Modelling and Verification of Robotic Platforms for Simulation Using RoboStar Technology","type":"publication"},{"authors":["Meryem Afendi","Régine Laleau","Amel Mammar"],"categories":[],"content":"Abstract Hybrid systems are one of the most common mathematical models for Cyber-Physical Systems (CPSs). They combine discrete dynamics represented by state machines or finite automata with continuous behaviors represented by differential equations. The measurement of continuous behaviors is performed by sensors. When these sensors have a continuous access to these measurements, we call such model an Event-Triggered model. The properties of this model are easier to prove, while its implementation is difficult in practice. Therefore, it is preferable to introduce a more realistic model, called Time-Triggered model, where the sensors take periodic measurements. Contrary to Event-Triggered models, Time-Triggered models are much easier to implement, but much more difficult to verify. Based on the differential refinement logic (dR(\\mathcal {L})), a dynamic logic for refinement relations on hybrid systems, it is possible to prove that a Time-Triggered model refines an Event-Triggered model. The major limitation of such logic is that it is not supported by any prover. In this paper, we propose a correct-by-construction approach that implements the reasoning on hybrid programs particularly the reasoning of dR(\\mathcal {L}) in Event-B to take advantage of its associated tools.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_10.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{AfendiLM20, author = {Meryem Afendi and R{\\'{e}}gine Laleau and Amel Mammar}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Modelling Hybrid Programs with Event-B}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {139--154}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_10}, doi = {10.1007/978-3-030-48077-6\\_10}, timestamp = {Tue, 16 Jun 2020 17:18:07 +0200}, biburl = {https://dblp.org/rec/conf/asm/AfendiLM20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7ad37e6bfc189dcc5c58c8243c8c3bde","permalink":"/publication/afendilm20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/afendilm20/","section":"publication","summary":"Abstract Hybrid systems are one of the most common mathematical models for Cyber-Physical Systems (CPSs). They combine discrete dynamics represented by state machines or finite automata with continuous behaviors represented by differential equations.","tags":["ABZ'20"],"title":"Modelling Hybrid Programs with Event-B","type":"publication"},{"authors":["David Geleßus","Michael Leuschel"],"categories":[],"content":"Abstract We present a tool for using the B language in computational notebooks, based on the Jupyter Notebook interface and the ProB tool. Applications of B notebooks include executable documentation of formal models, interactive manuals, validation reports but also teaching of formal methods, logic, set theory and theoretical computer science. In addition to B and Event-B, the tool supports Z, (\\textsc {TLA}^{+}) and Alloy.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_19.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{GelessusL20, author = {David Gele{\\ss}us and Michael Leuschel}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {ProB and Jupyter for Logic, Set Theory, Theoretical Computer Science and Formal Methods}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {248--254}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_19}, doi = {10.1007/978-3-030-48077-6\\_19}, timestamp = {Tue, 16 Jun 2020 17:18:07 +0200}, biburl = {https://dblp.org/rec/conf/asm/GelessusL20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"1c1bab92f1226984f1d17c1ffc5e9f5c","permalink":"/publication/gelessusl20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/gelessusl20/","section":"publication","summary":"Abstract We present a tool for using the B language in computational notebooks, based on the Jupyter Notebook interface and the ProB tool. Applications of B notebooks include executable documentation of formal models, interactive manuals, validation reports but also teaching of formal methods, logic, set theory and theoretical computer science.","tags":["ABZ'20"],"title":"ProB and Jupyter for Logic, Set Theory, Theoretical Computer Science and Formal Methods","type":"publication"},{"authors":["Thierry Lecomte"],"categories":[],"content":"Abstract The CLEARSY Safety Platform (CSSP) is aimed at easing the development and the deployment of safety critical applications, up to the safety integrity level 4 (SIL4). It relies on the smart integration of the B formal method, redundant code generation and compilation, and a hardware platform that ensures a safe execution of the software. This paper exposes the programming model of the CSSP used to develop control \u0026amp; command applications based on digital I/Os.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_9.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Lecomte20, author = {Thierry Lecomte}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Programming the {CLEARSY} Safety Platform with {B}}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {124--138}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_9}, doi = {10.1007/978-3-030-48077-6\\_9}, timestamp = {Mon, 25 May 2020 12:33:39 +0200}, biburl = {https://dblp.org/rec/conf/asm/Lecomte20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7b0be35025d14cffb5e13ceeacc86511","permalink":"/publication/lecomte20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/lecomte20/","section":"publication","summary":"Abstract The CLEARSY Safety Platform (CSSP) is aimed at easing the development and the deployment of safety critical applications, up to the safety integrity level 4 (SIL4). It relies on the smart integration of the B formal method, redundant code generation and compilation, and a hardware platform that ensures a safe execution of the software.","tags":["ABZ'20"],"title":"Programming the CLEARSY Safety Platform with B","type":"publication"},{"authors":["Karla Morris","Colin F. Snook","Thai Son Hoang","Geoffrey C. Hulette","Robert C. Armstrong","Michael J. Butler"],"categories":[],"content":"Abstract Statechart notations with ‘run to completion’ semantics, are popular with engineers for designing controllers that respond to events in the environment with a sequence of state transitions. However, they lack formal refinement and rigorous verification methods. , on the other hand, is based on refinement from an initial abstraction and is designed to make formal verification by automatic theorem provers feasible. We introduce a notion of refinement into a ‘run to completion’ statechart modelling notation, and leverage tool support for theorem proving. We describe the difficulties in translating ‘run to completion’ semantics into refinements and suggest a solution. We outline how safety and liveness properties could be verified.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_23.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MorrisSHHAB20, author = {Karla Morris and Colin F. Snook and Thai Son Hoang and Geoffrey C. Hulette and Robert C. Armstrong and Michael J. Butler}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Refinement and Verification of Responsive Control Systems}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {272--277}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_23}, doi = {10.1007/978-3-030-48077-6\\_23}, timestamp = {Mon, 03 Jan 2022 22:35:01 +0100}, biburl = {https://dblp.org/rec/conf/asm/MorrisSHHAB20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"b7697bf2acd986acb6ea60fdf4518bad","permalink":"/publication/morrisshhab20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/morrisshhab20/","section":"publication","summary":"Abstract Statechart notations with ‘run to completion’ semantics, are popular with engineers for designing controllers that respond to events in the environment with a sequence of state transitions. However, they lack formal refinement and rigorous verification methods.","tags":["ABZ'20"],"title":"Refinement and Verification of Responsive Control Systems","type":"publication"},{"authors":["Philipp Paulweber","Emmanuel Pescosta","Uwe Zdun"],"categories":[],"content":"Abstract Abstract State Machine (ASM) theory is a well-known state-based formal method to analyze, verify, and specify software and hardware systems. Nowadays, as in other state-based formal methods, the proposed specification languages for ASMs still lack easy-to-comprehend language constructs for type abstractions to describe reusable and maintainable specifications. Almost all built-in behaviors are implicitly defined inside a concrete ASM language implementation and thus, the behavior is hidden from the language user. In this paper, we present a new ASM syntax extension based on traits, which allows the specifier (language user) to define new type abstractions in the form of structure and behavior definitions to reuse, maintain, structure, and extend the functionality in ASM specifications. We describe the proposed language construct by defining its syntax and semantics. The decision to use a trait-based syntax extension over other object-oriented language constructs like interfaces or mixins was motivated and driven by the results of previously conducted empirical studies. Moreover, we outline details about the implementation of the trait-based syntax extension in our Corinthian Abstract State Machine (CASM) language implementation.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_17.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{PaulweberPZ20, author = {Philipp Paulweber and Emmanuel Pescosta and Uwe Zdun}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Structuring the State and Behavior of ASMs: Introducing a Trait-Based Construct for Abstract State Machine Languages}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {237--243}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_17}, doi = {10.1007/978-3-030-48077-6\\_17}, timestamp = {Sun, 02 Oct 2022 15:55:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/PaulweberPZ20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"a3eecbdec85f782bcd0968426e51b0db","permalink":"/publication/paulweberpz20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/paulweberpz20/","section":"publication","summary":"Abstract Abstract State Machine (ASM) theory is a well-known state-based formal method to analyze, verify, and specify software and hardware systems. Nowadays, as in other state-based formal methods, the proposed specification languages for ASMs still lack easy-to-comprehend language constructs for type abstractions to describe reusable and maintainable specifications.","tags":["ABZ'20"],"title":"Structuring the State and Behavior of ASMs: Introducing a Trait-Based Construct for Abstract State Machine Languages","type":"publication"},{"authors":["Philipp Körner","Michael Leuschel","Jannik Dunkelau"],"categories":[],"content":"Abstract Many formal methods research communities lack a shared set of benchmarks. As a result, many research articles in the past have evaluated new techniques on specifications that are specifically tailored to the problem or not publicly available. While this is great for proving the concept in question, it does not offer any insights on how it performs on real-world examples. Additionally, with machine learning techniques gaining more popularity, a larger set of public specifications is required. In this paper, we present our public set of B machines and urge contribution. As we think this to be an issue in other communities in scope of the ABZ as well, we are also interested in specifications expressed in other formalisms, for example Alloy, TLA(^{+}) or Z.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_22.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{KornerLD20, author = {Philipp K{\\\u0026quot;{o}}rner and Michael Leuschel and Jannik Dunkelau}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Towards a Shared Specification Repository}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {266--271}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_22}, doi = {10.1007/978-3-030-48077-6\\_22}, timestamp = {Tue, 16 Jun 2020 17:18:07 +0200}, biburl = {https://dblp.org/rec/conf/asm/KornerLD20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e0fa115e81c9202662f8ee08f378ae72","permalink":"/publication/kornerld20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/kornerld20/","section":"publication","summary":"Abstract Many formal methods research communities lack a shared set of benchmarks. As a result, many research articles in the past have evaluated new techniques on specifications that are specifically tailored to the problem or not publicly available.","tags":["ABZ'20"],"title":"Towards a Shared Specification Repository","type":"publication"},{"authors":["Diego de Azevedo Oliveira","Marc Frappier"],"categories":[],"content":"Abstract This paper describes the formalisation of SGAC access control policies using Z3 and then we compare the performance with ProB and Alloy. SGAC is an attribute-based, fine-grain access control model that uses acyclic subject and resource graphs to provide rule inheritance and streamline policy specification. To ensure patient privacy and safety, four types of properties are checked: accessibility, availability, contextuality and rule effectiveness. Automatic translation of SGAC policies into each specification language has been defined. ProB offers the best verification performances, by two orders of magnitude. The performances of Alloy and Z3 are similar.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_15.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{OliveiraF20, author = {Diego de Azevedo Oliveira and Marc Frappier}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {Verifying {SGAC} Access Control Policies: {A} Comparison of ProB, Alloy and {Z3}}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {223--229}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_15}, doi = {10.1007/978-3-030-48077-6\\_15}, timestamp = {Mon, 25 May 2020 12:33:39 +0200}, biburl = {https://dblp.org/rec/conf/asm/OliveiraF20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"001c47d795c978c85661a68361321c50","permalink":"/publication/oliveiraf20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/oliveiraf20/","section":"publication","summary":"Abstract This paper describes the formalisation of SGAC access control policies using Z3 and then we compare the performance with ProB and Alloy. SGAC is an attribute-based, fine-grain access control model that uses acyclic subject and resource graphs to provide rule inheritance and streamline policy specification.","tags":["ABZ'20"],"title":"Verifying SGAC Access Control Policies: A Comparison of ProB, Alloy and Z3","type":"publication"},{"authors":["Michelle Werth","Michael Leuschel"],"categories":[],"content":"Abstract Visualization is important to present formal models to domain experts and to spot issues which are hard to formalise or have not been formalised yet. VisB is a visualization plugin for the ProB animator and model checker. VisB enables the user to create simple visualizations for formal models. An important design criterion was to re-use scalable vector graphics (SVG) generated by off-the-shelf graphic editors using a lightweight and easy-to-use annotation mechanism. The visualizations can be used to formal models in B, Event-B, Z, TLA+ and Alloy.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-030-48077-6_21.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{WerthL20, author = {Michelle Werth and Michael Leuschel}, editor = {Alexander Raschke and Dominique M{\\'{e}}ry and Frank Houdek}, title = {VisB: {A} Lightweight Tool to Visualize Formal Models with {SVG} Graphics}, booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ} 2020, Ulm, Germany, May 27-29, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12071}, pages = {260--265}, publisher = {Springer}, year = {2020}, url = {https://doi.org/10.1007/978-3-030-48077-6\\_21}, doi = {10.1007/978-3-030-48077-6\\_21}, timestamp = {Mon, 25 May 2020 12:33:39 +0200}, biburl = {https://dblp.org/rec/conf/asm/WerthL20.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"bb09fb00bea6e651c226a4df5300b669","permalink":"/publication/werthl20/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/werthl20/","section":"publication","summary":"Abstract Visualization is important to present formal models to domain experts and to spot issues which are hard to formalise or have not been formalised yet. VisB is a visualization plugin for the ProB animator and model checker.","tags":["ABZ'20"],"title":"VisB: A Lightweight Tool to Visualize Formal Models with SVG Graphics","type":"publication"},{"authors":null,"categories":null,"content":"","date":1528182e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c9e81e4e6298924a63564cda9fe74434","permalink":"/2018/","publishdate":"2018-06-05T09:00:00+02:00","relpermalink":"/2018/","section":"event","summary":"6th International Conference on ASM, Alloy, B, TLA, VDM, and Z","tags":["ABZ'18"],"title":"ABZ 2018 (Southampton, UK)","type":"event"},{"authors":["Thai Son Hoang","Michael Butler","Klaus Reichl"],"categories":[],"content":"Abstract This document presents a description of the European Rail Traffic Management System (ERTMS) case study. ERTMS is a system of standards for management and interoperation of signalling for railways by the European Union (EU). The case study focuses on the ERTMS Level 3 Hybrid principle, which accommodates different types of trains including ERTMS trains equiped with the Train Integrity Monitoring System (TIMS), ERTMS trains without TIMS, and non-ERTMS trains.\nDocument    var url = \"\\/data\\/abz18\\/hoang2018abz-cs.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-319-91271-4_17, author=\u0026quot;Hoang, Thai Son and Butler, Michael and Reichl, Klaus\u0026quot;, editor=\u0026quot;Butler, Michael and Raschke, Alexander and Hoang, Thai Son and Reichl, Klaus\u0026quot;, title=\u0026quot;The Hybrid ERTMS/ETCS Level 3 Case Study\u0026quot;, booktitle=\u0026quot;Abstract State Machines, Alloy, B, TLA, VDM, and Z\u0026quot;, year=\u0026quot;2018\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;251--261\u0026quot;, abstract=\u0026quot;This document presents a description of the European Rail Traffic Management System (ERTMS) case study. ERTMS is a system of standards for management and interoperation of signalling for railways by the European Union (EU). The case study focuses on the ERTMS Level 3 Hybrid principle, which accommodates different types of trains including ERTMS trains equiped with the Train Integrity Monitoring System (TIMS), ERTMS trains without TIMS, and non-ERTMS trains.\u0026quot;, isbn=\u0026quot;978-3-319-91271-4\u0026quot; }  ","date":1525737600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"71cf936dab063d03074cfcdaa34bdf3d","permalink":"/publication/hoangbr18/","publishdate":"2018-05-08T00:00:00Z","relpermalink":"/publication/hoangbr18/","section":"publication","summary":"Abstract This document presents a description of the European Rail Traffic Management System (ERTMS) case study. ERTMS is a system of standards for management and interoperation of signalling for railways by the European Union (EU).","tags":["ABZ'18"],"title":"The Hybrid ERTMS/ETCS Level 3 Case Study","type":"publication"},{"authors":["Amel Mammar","Marc Frappier","Steve Jeffrey Tueno Fotso","Régine Laleau"],"categories":[],"content":"Abstract This paper presents an Event-B model of the ABZ2018 case study on the European Rail Traffic Management System (ERTMS) standard. The case study focusses on the management of fixed virtual sub-sections (VSS). We model the hybrid level 3 of the standard, which assumes that trains may be either equipped with an on-board train integrity monitoring system (TIMS) and that they report their position and integrity, ERTMS trains not fitted with TIMS that report only their front position or non-ERTMS trains that do not report any information about their position. We take into account most of the main features of the case study. Our model is decomposed into four refinements. All proof obligations have been discharged using the Rodin provers, except those related to the computation of the VSS state machine, which was found to be ambiguous (nondeterministic). Our model has been validated using ProB. The main safety property, which is that ERTMS trains do not collide, is proved.\nDocument    var url = \"https:\\/\\/www.irit.fr\\/ABZ-CS\\/html_files\\/files\\/2018\\/PDF\\/MFJFL_ABZ2018.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DBLP:conf/asm/MammarFFL18, author = {Amel Mammar and Marc Frappier and Steve Jeffrey Tueno Fotso and R{\\'{e}}gine Laleau}, title = {An Event-B Model of the Hybrid {ERTMS/ETCS} Level 3 Standard}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, pages = {353--366}, year = {2018}, crossref = {DBLP:conf/asm/2018} }  Sources  Model Archive: ZIP Used formal method: Event-B Resources and tools: Rodin, ProB Website: http://info.usherbrooke.ca/mfrappier/abz2018-ERTMS-Case-Study  For more information, please contact the authors\n","date":1525132800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"19d63256934ef9d15e47bfb6e9fe9d43","permalink":"/publication/mammarffl18/","publishdate":"2018-05-01T00:00:00Z","relpermalink":"/publication/mammarffl18/","section":"publication","summary":"Abstract This paper presents an Event-B model of the ABZ2018 case study on the European Rail Traffic Management System (ERTMS) standard. The case study focusses on the management of fixed virtual sub-sections (VSS).","tags":["ABZ'18"],"title":"An Event-B Model of the Hybrid ERTMS/ETCS Level 3 Standard","type":"publication"},{"authors":["Dana Dghaym","Michael Poppleton","Colin F. Snook"],"categories":[],"content":"Abstract We demonstrate diagrammatic Event-B formal modelling of a hybrid, \u0026lsquo;fixed virtual block\u0026rsquo; approach to train movement control for the emerging European Rail Traffic Management System (ERTMS) level 3. We perform a refinement-based formal development and verification of the no-collision safety requirement. The development reveals limitations in the specification and identifies assumptions on the environment. We reflect on our team-based approach to finding useful modelling abstractions and demonstrate a systematic modelling method using the UMLlike state and class diagrams of iUML-B. We suggest enhancements to the existing iUML-B method that would have benefitted this development.\nDocument    var url = \"https:\\/\\/eprints.soton.ac.uk\\/417755\\/1\\/paper_abz2018.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{dghaym2018diagram, title={Diagram-led formal modelling using iUML-B for hybrid ERTMS level 3}, author={Dghaym, Dana and Poppleton, Michael and Snook, Colin}, booktitle={International Conference on Abstract State Machines, Alloy, B, TLA, VDM, and Z}, pages={338--352}, year={2018}, organization={Springer} }  Sources   Used formal method: Event-B and iUML-B\nFor more information, please contact the authors\n  ","date":1525132800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"44a6299b5786d7bb7a4337e24f2b145d","permalink":"/publication/dghaymps18/","publishdate":"2018-05-01T00:00:00Z","relpermalink":"/publication/dghaymps18/","section":"publication","summary":"Abstract We demonstrate diagrammatic Event-B formal modelling of a hybrid, \u0026lsquo;fixed virtual block\u0026rsquo; approach to train movement control for the emerging European Rail Traffic Management System (ERTMS) level 3. We perform a refinement-based formal development and verification of the no-collision safety requirement.","tags":["ABZ'18"],"title":"Diagram-Led Formal Modelling Using iUML-B for Hybrid ERTMS Level 3","type":"publication"},{"authors":["Steve Jeffrey Tueno Fotso","Marc Frappier","Régine Laleau","Amel Mammar"],"categories":[],"content":"Abstract This paper presents a specification of the hybrid ERTMS/ETCS level 3 standard in the framework of the case study proposed for the 6th edition of the ABZ conference. The specification is based on the method and tools, developed in the ANR FORMOSE project, for the modeling and formal verification of critical and complex system requirements. The requirements are specified with SysML/KAOS goal diagrams and are automatically translated into B System specifications, in order to obtain the architecture of the formal specification. Domain properties are specified by ontologies with the SysML/KAOS domain modeling language, based on OWL and PLIB. Their automatic translation completes the structural part of the formal specification. The only part of the specification, which must be manually completed, is the body of events. The construction is incremental, based on the refinement mechanisms existing within the involved methods. The formal specification of the case study is composed of seven refinement levels and all the proofs have been discharged with the Rodin prover.\nDocument    var url = \"http:\\/\\/info.usherbrooke.ca\\/mfrappier\\/abz2018-ERTMS-Case-Study-Formose\\/ABZ2018-_ERTMS_Case_Study.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-319-91271-4_18, author=\u0026quot;Tueno Fotso, Steve Jeffrey and Frappier, Marc and Laleau, R{\\'e}gine and Mammar, Amel\u0026quot;, editor=\u0026quot;Butler, Michael and Raschke, Alexander and Hoang, Thai Son and Reichl, Klaus\u0026quot;, title=\u0026quot;Modeling the Hybrid ERTMS/ETCS Level 3 Standard Using a Formal Requirements Engineering Approach\u0026quot;, booktitle=\u0026quot;Abstract State Machines, Alloy, B, TLA, VDM, and Z\u0026quot;, year=\u0026quot;2018\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;262--276\u0026quot;, isbn=\u0026quot;978-3-319-91271-4\u0026quot; }  Sources  Model Archive: ZIP Presentation: PDF Used formal method: Event-B, B Method, and SysML/KAOS Requirements Engineering Method Resources and tools: Openflexo, Rodin, The SysMLKaos Domain Modeling Tool Required OS: Linux, Mac, Windows Website: https://github.com/stuenofotso/SysML_KAOS_Domain_Model_Parser/tree/master/ABZ18_ERTMS Remarks and recommendation: The developed model focuses on formal verification of the main requirements of the protocol. Its main objective is to assess the SysML/KAOS method and to compare it with direct specification approaches using only plain Event-B.  ","date":1525132800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d69b8c0597cb90c5fbf68e6b34bfe920","permalink":"/publication/fotsoflm18/","publishdate":"2018-05-01T00:00:00Z","relpermalink":"/publication/fotsoflm18/","section":"publication","summary":"Abstract This paper presents a specification of the hybrid ERTMS/ETCS level 3 standard in the framework of the case study proposed for the 6th edition of the ABZ conference. The specification is based on the method and tools, developed in the ANR FORMOSE project, for the modeling and formal verification of critical and complex system requirements.","tags":["ABZ'18"],"title":"Modeling the Hybrid ERTMS/ETCS Level 3 Standard Using a Formal Requirements Engineering Approach","type":"publication"},{"authors":["Paolo Arcaini","Pavel Jezek","Jan Kofron"],"categories":[],"content":"Abstract The Spin model checker has been successfully applied to the modelling, validation, and verification of different safety-critical systems. In this paper, we model and validate the Hybrid ERTMS/ETCS Level 3 Case Study using Spin; in particular, we show the assumptions we made to keep the state space limited, and present the problems and ambiguities that arose during the modelling. Although Spin offers several advantages in terms of validation and verification facilities, its modelling language Promela is limited if compared to higher level notations of other formal methods. Therefore, we discuss the advantages and disadvantages of using the tool, and how it could be improved in terms of modelling facilities.\nDocument    var url = \"https:\\/\\/www.irit.fr\\/ABZ-CS\\/html_files\\/files\\/2018\\/PDF\\/AJK_ABZ2018.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{caseStudyABZ2018, author={Arcaini, Paolo and Je{\\v{z}}ek, Pavel and Kofro{\\v{n}}, Jan}, editor={Butler, Michael and Raschke, Alexander and Hoang, Thai Son and Reichl, Klaus}, title={Modelling the {Hybrid ERTMS/ETCS Level 3 Case Study in Spin}}, booktitle={Abstract State Machines, Alloy, B, TLA, VDM, and Z}, year={2018}, publisher={Springer International Publishing}, address={Cham}, pages={277--291}, isbn={978-3-319-91271-4}, doi={https://doi.org/10.1007/978-3-319-91271-4_19} }  Sources  Used formal method: Spin Resources and tools: Spin Website: http://d3s.mff.cuni.cz/~kofron/abz18casestudy.html Model Archive: ZIP  For more information, please contact the authors\n","date":1525132800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"61c8c7d432b95f0e4ee0db94c7575aaa","permalink":"/publication/arcainijk18/","publishdate":"2018-05-01T00:00:00Z","relpermalink":"/publication/arcainijk18/","section":"publication","summary":"Abstract The Spin model checker has been successfully applied to the modelling, validation, and verification of different safety-critical systems. In this paper, we model and validate the Hybrid ERTMS/ETCS Level 3 Case Study using Spin; in particular, we show the assumptions we made to keep the state space limited, and present the problems and ambiguities that arose during the modelling.","tags":["ABZ'18"],"title":"Modelling the Hybrid ERTMS/ETCS Level 3 Case Study in Spin","type":"publication"},{"authors":["Jean-Raymond Abrial"],"categories":[],"content":"Abstract Usually, case studies dealing with train systems concentrate on the safety of trains circulating on tracks equipped with points and crossings and protected by means of traffic lights and speed limit sign postings as in [1, 2, 3]. Train drivers are supposed to follow such indications. The goal of formal approaches used in such case studies is to prove that trains may circulate safely on such tracks provided drivers act correctly. This is done by constructing models of such complex systems and by using formal proof techniques.\n   var url = \"TODO\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  -- Reference % BibTex @inproceedings{abrial2018abz, title={The ABZ-2018 case study with Event-B}, author={Abrial, Jean-Raymond}, booktitle={International Conference on Abstract State Machines, Alloy, B, TLA, VDM, and Z}, pages={322--337}, year={2018}, organization={Springer} }  Sources   Used formal method: Event-B\n  Resources and tools: Rodin\nFor more information, please contact the authors\n  ","date":1525132800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"8aff0d5453b10b35946ed2e060f6757a","permalink":"/publication/abrial18a/","publishdate":"2018-05-01T00:00:00Z","relpermalink":"/publication/abrial18a/","section":"publication","summary":"Abstract Usually, case studies dealing with train systems concentrate on the safety of trains circulating on tracks equipped with points and crossings and protected by means of traffic lights and speed limit sign postings as in [1, 2, 3].","tags":["ABZ'18"],"title":"The ABZ-2018 Case Study with Event-B","type":"publication"},{"authors":["Dominik Hansen","Michael Leuschel","David Schneider","Sebastian Krings","Philipp Körner","Thomas Naulin","Nader Nayeri","Frank Skowron"],"categories":[],"content":"Abstract In this article, we present a concrete realisation of the ETCS Hybrid Level 3 concept, whose practical viability was evaluated in a field demonstration in 2017. Hybrid Level 3 (HL3) introduces Virtual SubSections (VSS) as sub-divisions of classical track sections with Trackside Train Detection (TTD). Our approach introduces an add-on for the Radio Block Centre (RBC) of Thales, called Virtual Block Function (VBF), which computes the occupation states of the VSSs according to the HL3 concept using the train position reports, train integrity information, and the TTD occupation states. From the perspective of the RBC, the VBF behaves as an Interlocking (IXL) that transmits all signal aspects for virtual signals introduced for each VSS to the RBC. We report on the development of the VBF, implemented as a formal B model executed at runtime using ProB and successfully used in a field demonstration to control real trains.\nDocument    var url = \"https:\\/\\/www3.hhu.de\\/stups\\/downloads\\/pdf\\/etcsHL3.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{hansen2018using, title={Using a formal B model at runtime in a demonstration of the ETCS hybrid level 3 concept with real trains}, author={Hansen, Dominik and Leuschel, Michael and Schneider, David and Krings, Sebastian and K{\\\u0026quot;o}rner, Philipp and Naulin, Thomas and Nayeri, Nader and Skowron, Frank}, booktitle={International Conference on Abstract State Machines, Alloy, B, TLA, VDM, and Z}, pages={292--306}, year={2018}, organization={Springer} }  Sources   Used formal method: Classical B\n  Resources and tools: ProB\nFor more information, please contact the authors\n  ","date":1525132800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"34867da7f86d2d786b9083b4504e1e15","permalink":"/publication/hansenl0kknns18/","publishdate":"2018-05-01T00:00:00Z","relpermalink":"/publication/hansenl0kknns18/","section":"publication","summary":"Abstract In this article, we present a concrete realisation of the ETCS Hybrid Level 3 concept, whose practical viability was evaluated in a field demonstration in 2017. Hybrid Level 3 (HL3) introduces Virtual SubSections (VSS) as sub-divisions of classical track sections with Trackside Train Detection (TTD).","tags":["ABZ'18"],"title":"Using a Formal B Model at Runtime in a Demonstration of the ETCS Hybrid Level 3 Concept with Real Trains","type":"publication"},{"authors":["Alcino Cunha","Nuno Macedo"],"categories":[],"content":"Abstract This paper reports on the development of a formal model for the Hybrid ERTMS/ETCS Level 3 concept in Electrum, a lightweight formal specification language that extends Alloy with mutable relations and temporal logic operators. We show how Electrum and its Analyzer can be used to perform scenario exploration to validate this model, namely to check that all the example operational scenarios described in the reference document are admissible, and to reason about expected safety properties, which can be easily specified and model checked for arbitrary track configurations. The Analyzer depicts scenarios (and counter-examples) in a graphical notation that is logic-agnostic, making them understandable for stakeholders without expertise in formal specification.\nDocument    var url = \"https:\\/\\/repositorium.sdum.uminho.pt\\/bitstream\\/1822\\/68520\\/1\\/abz18.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{cunha2018validating, title={Validating the hybrid ERTMS/ETCS level 3 concept with electrum}, author={Cunha, Alcino and Macedo, Nuno}, booktitle={International Conference on Abstract State Machines, Alloy, B, TLA, VDM, and Z}, pages={307--321}, year={2018}, organization={Springer} }  Sources   Used formal method: Electrum\n  Resources and tools: Electrum\nFor more information, please contact the authors\n  ","date":1525132800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"97981dd12e61190ecd235ac2d7365c9b","permalink":"/publication/cunham18/","publishdate":"2018-05-01T00:00:00Z","relpermalink":"/publication/cunham18/","section":"publication","summary":"Abstract This paper reports on the development of a formal model for the Hybrid ERTMS/ETCS Level 3 concept in Electrum, a lightweight formal specification language that extends Alloy with mutable relations and temporal logic operators.","tags":["ABZ'18"],"title":"Validating the Hybrid ERTMS/ETCS Level 3 Concept with Electrum","type":"publication"},{"authors":["Sebastian Krings","Joshua Schmidt","Carola Brings","Marc Frappier","Michael Leuschel"],"categories":[],"content":"Abstract In this paper, we introduce a translation of the specification language Alloy to classical B. Our translation closely follows the Alloy grammar, each construct is translated into a semantically equivalent component of the B language. In addition to basic Alloy constructs, our approach supports integers and orderings. The translation is fully automated by the tool “Alloy2B”. We evaluate the usefulness by applying AtelierB and ProB to the translated models, and show benefits for proof and solving with integers and higher-order quantification.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_6.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{KringsSBFL18, author = {Sebastian Krings and Joshua Schmidt and Carola Brings and Marc Frappier and Michael Leuschel}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {A Translation from Alloy to {B}}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {71--86}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_6}, doi = {10.1007/978-3-319-91271-4\\_6}, timestamp = {Wed, 25 Sep 2019 18:19:23 +0200}, biburl = {https://dblp.org/rec/conf/asm/KringsSBFL18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"501666252f78e341889b3708342087e4","permalink":"/publication/kringssbfl18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/kringssbfl18/","section":"publication","summary":"Abstract In this paper, we introduce a translation of the specification language Alloy to classical B. Our translation closely follows the Alloy grammar, each construct is translated into a semantically equivalent component of the B language.","tags":["ABZ'18"],"title":"A Translation from Alloy to B","type":"publication"},{"authors":["Christoph Beierle","Klaus-Dieter Schewe"],"categories":[],"content":"Abstract Type-2 Theory of Effectivity is a well established theory of computability on infinite strings, which in this paper is exploited to define a data type ( Real ) as part of the background structure of Abstract State Machines. Real numbers are represented by rapidly converging Cauchy sequences, on top of which standard operations such as addition, multiplication, division, exponentials, trigonometric functions, etc. can be defined. In this way exact computation with real numbers is enabled. Output can be generated at any degree of precision by exploring only sufficiently long prefixes of the representing Cauchy sequences.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_10.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BeierleS18, author = {Christoph Beierle and Klaus{-}Dieter Schewe}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Abstract State Machines with Exact Real Arithmetic}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {139--154}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_10}, doi = {10.1007/978-3-319-91271-4\\_10}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/BeierleS18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"264149020e4d77662c1f5502ccd12b6c","permalink":"/publication/beierles18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/beierles18/","section":"publication","summary":"Abstract Type-2 Theory of Effectivity is a well established theory of computability on infinite strings, which in this paper is exploited to define a data type ( Real ) as part of the background structure of Abstract State Machines.","tags":["ABZ'18"],"title":"Abstract State Machines with Exact Real Arithmetic","type":"publication"},{"authors":["Janet Barnes","Jonathan Hammond","Angela Wallenburg","Thomas Wilson"],"categories":[],"content":"Abstract We give an early view of an ongoing evaluation of ABZ-style languages and their accompanying tools. The target is specifications of safety- and security-critical (software-rich) systems. Our perspective is that of long-term users of formal methods in all parts of the development life cycle. The evaluation’s scope is the production of specifications. We list requirements for producing specifications, including semantic needs and the resulting requirements on language expressiveness, as well as requirements on tool support for writing, structuring, exploring, and validating specifications. We define criteria for industrial suitability – in our experience – of ABZ languages. We believe that specification structuring is a major discriminating factor for industrial scale-up. So we present an (informal) classification of such mechanisms and illustrate their use by reference to the largest formal specification written by Altran. Our lack of industrial-scale experience in some languages means we are still learning the best mechanisms to use in some cases. We welcome input on this. Finally we discuss remaining work.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_1.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BarnesHWW18, author = {Janet Barnes and Jonathan Hammond and Angela Wallenburg and Thomas Wilson}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {{ABZ} Languages and Tools in Industrial-Scale Application}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {3--15}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_1}, doi = {10.1007/978-3-319-91271-4\\_1}, timestamp = {Mon, 26 Jun 2023 20:48:45 +0200}, biburl = {https://dblp.org/rec/conf/asm/BarnesHWW18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"60417f722fb573c5e49b4ddfba5f50df","permalink":"/publication/barneshww18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/barneshww18/","section":"publication","summary":"Abstract We give an early view of an ongoing evaluation of ABZ-style languages and their accompanying tools. The target is specifications of safety- and security-critical (software-rich) systems. Our perspective is that of long-term users of formal methods in all parts of the development life cycle.","tags":["ABZ'18"],"title":"ABZ Languages and Tools in Industrial-Scale Application","type":"publication"},{"authors":["Guillaume Bury","Simon Cruanes","David Delahaye","Pierre-Louis Euvrard"],"categories":[],"content":"Abstract We propose an automation-friendly set theory for the B method. This theory is expressed using first order logic extended to polymorphic types and rewriting. Rewriting is introduced along the lines of deduction modulo theory, where axioms are turned into rewrite rules over both propositions and terms. We also provide experimental results of several tools able to deal with polymorphism and rewriting over a benchmark of problems in pure set theory (i.e. without arithmetic).\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_32.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BuryCDE18, author = {Guillaume Bury and Simon Cruanes and David Delahaye and Pierre{-}Louis Euvrard}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {An Automation-Friendly Set Theory for the {B} Method}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {409--414}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_32}, doi = {10.1007/978-3-319-91271-4\\_32}, timestamp = {Sun, 06 Oct 2024 20:56:29 +0200}, biburl = {https://dblp.org/rec/conf/asm/BuryCDE18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"6491583ef816205009d40158dd1d9804","permalink":"/publication/burycde18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/burycde18/","section":"publication","summary":"Abstract We propose an automation-friendly set theory for the B method. This theory is expressed using first order logic extended to polymorphic types and rewriting. Rewriting is introduced along the lines of deduction modulo theory, where axioms are turned into rewrite rules over both propositions and terms.","tags":["ABZ'18"],"title":"An Automation-Friendly Set Theory for the B Method","type":"publication"},{"authors":["Silvia Bonfanti","Angelo Gargantini","Atif Mashkoor"],"categories":[],"content":"Abstract In this paper, we present AsmetaA – a graphical animator for Abstract State Machines integrated within the ASMETA framework. The execution of formal specifications through animation provides several advantages, e.g., it provides an immediate feedback about system behavior, it helps understand system evolution, and it increases the overall acceptability of formal methods.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_25.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BonfantiGM18, author = {Silvia Bonfanti and Angelo Gargantini and Atif Mashkoor}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {AsmetaA: Animator for Abstract State Machines}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {369--373}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_25}, doi = {10.1007/978-3-319-91271-4\\_25}, timestamp = {Sat, 09 Apr 2022 12:45:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/BonfantiGM18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"75fbfae8c35ccb3f989709fe66bdb3c4","permalink":"/publication/bonfantigm18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/bonfantigm18/","section":"publication","summary":"Abstract In this paper, we present AsmetaA – a graphical animator for Abstract State Machines integrated within the ASMETA framework. The execution of formal specifications through animation provides several advantages, e.","tags":["ABZ'18"],"title":"AsmetaA: Animator for Abstract State Machines","type":"publication"},{"authors":["Klaus-Dieter Schewe","Loredana Tec","Qing Wang 0002"],"categories":[],"content":"Abstract Natural computing is a field of research that tries to imitate the ways of “computing” in nature. Membrane computing is a branch of natural computing that exploits hierarchically nested membrane structures that are associated with multisets of objects. The key notion is the P-system, which describes the transitions by rules for the creation, elimination and wandering of objects through membranes as well as manipulation of the membrane structure as such. In this short paper we sketch how P-systems can be captured by parallel ASMs. We further give a glimpse of further generalisations in several directions.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_27.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ScheweTW18, author = {Klaus{-}Dieter Schewe and Loredana Tec and Qing Wang}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Capturing Membrane Computing by ASMs}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {380--385}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_27}, doi = {10.1007/978-3-319-91271-4\\_27}, timestamp = {Sun, 02 Oct 2022 15:55:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/ScheweTW18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"50c83cc388112907f6221d54998f1c35","permalink":"/publication/schewetw18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/schewetw18/","section":"publication","summary":"Abstract Natural computing is a field of research that tries to imitate the ways of “computing” in nature. Membrane computing is a branch of natural computing that exploits hierarchically nested membrane structures that are associated with multisets of objects.","tags":["ABZ'18"],"title":"Capturing Membrane Computing by ASMs","type":"publication"},{"authors":["Philipp Paulweber","Emmanuel Pescosta","Uwe Zdun"],"categories":[],"content":"Abstract The Abstract State Machine (ASM) theory is a well-known formal method, which can be used to specify arbitrary algorithms, applications or even whole systems. Over the past years, there have been many approaches to implement concrete ASM-based modeling and specification languages. All of those approaches define their type systems and operator semantics differently in their internal representation, which leads to undesired or unexpected behavior during the modeling, the execution, and code generation of such ASM specifications. In this paper, we present CASM-IR, an Intermediate Representation (IR), designed to aid ASM-based language engineering which is based on a well-formed ASM-based specification format. Moreover, CASM-IR is conceptualized from the ground up to ease the formalization of ASM-based analysis and transformation passes. The feasibility of CASM-IR solving the uniform ASM representation problem is depicted. Based on our CASM-IR implementation, we were able to integrate a front-end of our statically inferred Corinthian Abstract State Machine (CASM) modeling language.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_4.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{PaulweberPZ18, author = {Philipp Paulweber and Emmanuel Pescosta and Uwe Zdun}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {{CASM-IR:} Uniform ASM-Based Intermediate Representation for Model Specification, Execution, and Transformation}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {39--54}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_4}, doi = {10.1007/978-3-319-91271-4\\_4}, timestamp = {Sat, 09 Apr 2022 12:45:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/PaulweberPZ18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"658f08d4f07b9357ac77f0c45f451eb2","permalink":"/publication/paulweberpz18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/paulweberpz18/","section":"publication","summary":"Abstract The Abstract State Machine (ASM) theory is a well-known formal method, which can be used to specify arbitrary algorithms, applications or even whole systems. Over the past years, there have been many approaches to implement concrete ASM-based modeling and specification languages.","tags":["ABZ'18"],"title":"CASM-IR: Uniform ASM-Based Intermediate Representation for Model Specification, Execution, and Transformation","type":"publication"},{"authors":["Farah Al-Shareefi","Alexei Lisitsa 0001","Clare Dixon"],"categories":[],"content":"Abstract The Simple Authentication and Security Layer (SASL) is a framework for enabling application protocols to support authentication, integrity and confidentiality services. The SASL was originally specified in RFC 2222, and later updated in RFC 4422, using natural language. However, due to the richness of natural language this involves ambiguities and imprecision. Whilst there is an Oracle implementation of SASL, its documentation also contains informal descriptions and under-defined specifications of the RFCs. This paper provides clarification of ambiguity in SASL using Abstract State Machines (ASMs). This clarification is based on two ASM essential notions: a ground model to capture the intended SASL behavior in an understandable way, and a refinement notion to accurately explicate the ambiguous parts of the behavior. We also show some differences between RFCs and the description of the Oracle implementation. We believe our work can serve as a basis for further implementation and for formal analysis.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_13.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Al-ShareefiLD18, author = {Farah Al{-}Shareefi and Alexei Lisitsa and Clare Dixon}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Clarification of Ambiguity for the Simple Authentication and Security Layer}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {189--203}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_13}, doi = {10.1007/978-3-319-91271-4\\_13}, timestamp = {Sun, 02 Oct 2022 15:55:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/Al-ShareefiLD18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"87607fb04781c78b7faea617c798d4bd","permalink":"/publication/al-shareefild18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/al-shareefild18/","section":"publication","summary":"Abstract The Simple Authentication and Security Layer (SASL) is a framework for enabling application protocols to support authentication, integrity and confidentiality services. The SASL was originally specified in RFC 2222, and later updated in RFC 4422, using natural language.","tags":["ABZ'18"],"title":"Clarification of Ambiguity for the Simple Authentication and Security Layer","type":"publication"},{"authors":["Klaus-Dieter Schewe","Flavio Ferrarotti","Loredana Tec","Qing Wang 0002"],"categories":[],"content":"Abstract A distributed system can be characterised by autonomously acting agents, where each agent executes its own program, uses shared resources and communicates with the others, but otherwise is totally oblivious to the behaviour of the other agents. In a distributed adaptive system agents may change their programs, and enter or leave the collection at any time thereby changing the behaviour of the overall system. This article first develops a language-independent axiomatic definition of distributed adaptive systems and then presents concurrent reflective Abstract State Machines (crASMs), an abstract machine model for their specification. It can be proven that any distributed adaptive system as stipulated by the axiomatisation can be step-by-step simulated by a crASM. Proofs about crASMs can be grounded in a multiple-step logic, which extends known complete one-step logics for deterministic and non-deterministic ASMs.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_2.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ScheweFTW18, author = {Klaus{-}Dieter Schewe and Flavio Ferrarotti and Loredana Tec and Qing Wang}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Distributed Adaptive Systems - Theory, Specification, Reasoning}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {16--30}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_2}, doi = {10.1007/978-3-319-91271-4\\_2}, timestamp = {Sun, 02 Oct 2022 15:55:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/ScheweFTW18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"64a8fd9083c53a0589be6c9a96e0136c","permalink":"/publication/scheweftw18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/scheweftw18/","section":"publication","summary":"Abstract A distributed system can be characterised by autonomously acting agents, where each agent executes its own program, uses shared resources and communicates with the others, but otherwise is totally oblivious to the behaviour of the other agents.","tags":["ABZ'18"],"title":"Distributed Adaptive Systems - Theory, Specification, Reasoning","type":"publication"},{"authors":["Steve Jeffrey Tueno Fotso","Amel Mammar","Régine Laleau","Marc Frappier"],"categories":[],"content":"Abstract This paper is about the extension of the SysML/KAOS requirements engineering method with domain models expressed as ontologies. More precisely, it concerns the translation of these ontologies into B System for system construction. The contributions of this paper are twofold. The first one is a formal semantics for the ontology modeling language. The second one is the formal definition of translation rules between ontologies and B system specifications in order to provide the structural part of the formal specification. These translation rules are modeled in Event-B. Their consistency and completeness are proved using Rodin. We show that they are structure preserving (two related elements within the source model remain related within the target model), by proving various isomorphisms between the ontology and the B System specification.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_5.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{FotsoMLF18, author = {Steve Jeffrey Tueno Fotso and Amel Mammar and R{\\'{e}}gine Laleau and Marc Frappier}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Event-B Expression and Verification of Translation Rules Between SysML/KAOS Domain Models and {B} System Specifications}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {55--70}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_5}, doi = {10.1007/978-3-319-91271-4\\_5}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/FotsoMLF18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"6709fdb48e12d7df36af11a499d83aca","permalink":"/publication/fotsomlf18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/fotsomlf18/","section":"publication","summary":"Abstract This paper is about the extension of the SysML/KAOS requirements engineering method with domain models expressed as ontologies. More precisely, it concerns the translation of these ontologies into B System for system construction.","tags":["ABZ'18"],"title":"Event-B Expression and Verification of Translation Rules Between SysML/KAOS Domain Models and B System Specifications","type":"publication"},{"authors":["Jure Kukovec","Thanh-Hai Tran 0002","Igor Konnov 0001"],"categories":[],"content":"Abstract In (\\textsc {TLA}^{+}), a system specification is written as a logical formula that restricts the system behavior. As a logic, (\\textsc {TLA}^{+}) does not have assignments and other imperative statements that are used by model checkers to compute the successor states of a system state. Model checkers compute successors either explicitly — by evaluating program statements — or symbolically — by translating program statements to an SMT formula and checking its satisfiability. To efficiently enumerate the successors, TLA’s model checker TLC introduces side effects. For instance, an equality (x' = e) is interpreted as an assignment of e to the yet unbound variable x. Inspired by TLC, we introduce an automatic technique for discovering expressions in (\\textsc {TLA}^{+}) formulas such as (x' = e) and (x' \\in {e_1, \\dots , e_k}) that can be provably used as assignments. In contrast to TLC, our technique does not explicitly evaluate expressions, but it reduces the problem of finding assignments to the satisfiability of an SMT formula. Hence, we give a way to slice a (\\textsc {TLA}^{+}) formula in symbolic transitions, which can be used as an input to a symbolic model checker. Our prototype implementation successfully extracts symbolic transitions from a few (\\textsc {TLA}^{+}) benchmarks.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_7.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{KukovecTK18, author = {Jure Kukovec and Thanh{-}Hai Tran and Igor Konnov}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Extracting Symbolic Transitions from TLA\\({}^{\\mbox{+}}\\) Specifications}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {89--104}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_7}, doi = {10.1007/978-3-319-91271-4\\_7}, timestamp = {Thu, 18 Nov 2021 13:33:08 +0100}, biburl = {https://dblp.org/rec/conf/asm/KukovecTK18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"89ac5ecf119f5fcc617c5aa77fc6fefc","permalink":"/publication/kukovectk18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/kukovectk18/","section":"publication","summary":"Abstract In (\\textsc {TLA}^{+}), a system specification is written as a logical formula that restricts the system behavior. As a logic, (\\textsc {TLA}^{+}) does not have assignments and other imperative statements that are used by model checkers to compute the successor states of a system state.","tags":["ABZ'18"],"title":"Extracting Symbolic Transitions from TLA+ Specifications","type":"publication"},{"authors":["Markus Leitz","Alexander Raschke"],"categories":[],"content":"Abstract Control State Diagrams (CSD) are a graphical representation of Control State Abstract State Machines, a subclass of Abstract State Machines (ASM). We extend the existing semi-formal specification of this diagram type by a concrete syntax and its formal semantics. The semantics is given by a translation approach that transforms combinations of nodes into ASM snippets which are inserted into a textual ASM. This node-by-node translation is not only the basis for a code generation tool, but it also allows users to capture the behavior of a CSD more easily.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_26.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{LeitzR18, author = {Markus Leitz and Alexander Raschke}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Formal Specification of the Semantics of Control State Diagrams}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {374--379}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_26}, doi = {10.1007/978-3-319-91271-4\\_26}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/LeitzR18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"a4f667d3b18d020ef2fa01a7e02c42d3","permalink":"/publication/leitzr18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/leitzr18/","section":"publication","summary":"Abstract Control State Diagrams (CSD) are a graphical representation of Control State Abstract State Machines, a subclass of Abstract State Machines (ASM). We extend the existing semi-formal specification of this diagram type by a concrete syntax and its formal semantics.","tags":["ABZ'18"],"title":"Formal Specification of the Semantics of Control State Diagrams","type":"publication"},{"authors":["Wen Su","Jinxin Chen","Shehroz Khan 0002"],"categories":[],"content":"Abstract This case study of an insulin pump is to describe our solution of the following difficulties. Firstly, how to model features to obtain a family of products. Secondly, how to handle complex constraints and synchronization of components when composing features. Thirdly, how to construct the continuous environment for the individual features as well as for the composed system.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_31.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SuCK18, author = {Wen Su and Jinxin Chen and Shehroz Khan}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Insulin Pump: Modular Modeling of Hybrid Systems Using Event-B}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {403--408}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_31}, doi = {10.1007/978-3-319-91271-4\\_31}, timestamp = {Thu, 18 Apr 2024 10:08:30 +0200}, biburl = {https://dblp.org/rec/conf/asm/SuCK18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f45e36de564db51a7784dcbd52d1be74","permalink":"/publication/suck18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/suck18/","section":"publication","summary":"Abstract This case study of an insulin pump is to describe our solution of the following difficulties. Firstly, how to model features to obtain a family of products. Secondly, how to handle complex constraints and synchronization of components when composing features.","tags":["ABZ'18"],"title":"Insulin Pump: Modular Modeling of Hybrid Systems Using Event-B","type":"publication"},{"authors":["Richard Banach"],"categories":[],"content":"Abstract Normally, the passengers on urban rail systems remain fairly stationary, allowing for a relatively straightforward approach to controlling the dynamics of the system, based on the total rest mass of the train and passengers. However when a mischievous rugby club board an empty train and then run and jump-stop during the braking process, they can disrupt the automatic mechanisms for aligning train and platform doors. This is the rugby club problem for automated urban train control. A simple scenario of this kind is modelled in Hybrid Event-B, and sufficient conditions are derived for the prevention of the overshoot caused by the jump-stop. The challenges of making the model more realistic are discussed, and a strategy for dealing with the rugby club problem, when it cannot be prevented, is proposed.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_12.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Banach18, author = {Richard Banach}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Issues in Automated Urban Train Control: 'Tackling' the Rugby Club Problem}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {171--186}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_12}, doi = {10.1007/978-3-319-91271-4\\_12}, timestamp = {Mon, 03 Mar 2025 20:58:01 +0100}, biburl = {https://dblp.org/rec/conf/asm/Banach18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c56fa2e1e2c5b9bcb490ed34bef58db8","permalink":"/publication/banach18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/banach18/","section":"publication","summary":"Abstract Normally, the passengers on urban rail systems remain fairly stationary, allowing for a relatively straightforward approach to controlling the dynamics of the system, based on the total rest mass of the train and passengers.","tags":["ABZ'18"],"title":"Issues in Automated Urban Train Control: \u0026apos;Tackling\u0026apos; the Rugby Club Problem","type":"publication"},{"authors":["Frédéric Badeau","Vincent Lacroix","Vincent Monfort","Laurent Voisin","Christophe Métayer"],"categories":[],"content":"Abstract The software B method has so far been mainly used in the industrial world to develop safety critical software with very basic memory management limited to arrays of fixed size defined at compilation time.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_34.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BadeauLMVM18, author = {Fr{\\'{e}}d{\\'{e}}ric Badeau and Vincent Lacroix and Vincent Monfort and Laurent Voisin and Christophe M{\\'{e}}tayer}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Modelling Dynamic Data Structures with the {B} Method}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {420--424}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_34}, doi = {10.1007/978-3-319-91271-4\\_34}, timestamp = {Tue, 29 Dec 2020 18:38:32 +0100}, biburl = {https://dblp.org/rec/conf/asm/BadeauLMVM18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"a1c38081116f4ef61c7ebe8179db874c","permalink":"/publication/badeaulmvm18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/badeaulmvm18/","section":"publication","summary":"Abstract The software B method has so far been mainly used in the industrial world to develop safety critical software with very basic memory management limited to arrays of fixed size defined at compilation time.","tags":["ABZ'18"],"title":"Modelling Dynamic Data Structures with the B Method","type":"publication"},{"authors":["Jean-Raymond Abrial"],"categories":[],"content":"Abstract After more than 20 years since the publication of the book on B [1], and almost 10 years since the publication of the book on Event-B [2], the purpose of this short paper is to present some key points of these technologies.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_3.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Abrial18, author = {Jean{-}Raymond Abrial}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {On {B} and Event-B: Principles, Success and Challenges}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {31--35}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_3}, doi = {10.1007/978-3-319-91271-4\\_3}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Abrial18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"8a3281878a0f13f53402cfa7df586a9b","permalink":"/publication/abrial18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/abrial18/","section":"publication","summary":"Abstract After more than 20 years since the publication of the book on B [1], and almost 10 years since the publication of the book on Event-B [2], the purpose of this short paper is to present some key points of these technologies.","tags":["ABZ'18"],"title":"On B and Event-B: Principles, Success and Challenges","type":"publication"},{"authors":["Yamine Aït Ameur","Idir Aït-Sadoune","P. Casteran","J. Paul Gibson","Kahina Hacid","Souad Kherroubi","Dominique Méry","Linda Mohand-Oussaïd","Neeraj Kumar Singh 0001","Laurent Voisin"],"categories":[],"content":"Abstract Although several authors like Zave and Jackson [11, 17], Bjørner [5], Van Lamsweerde [13] have drawn the attention of system designers on the necessity to handle domain knowledge, while designing systems, it is still a major concern nowadays.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_35.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{AmeurACGHKMMSV18, author = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Idir A{\\\u0026quot;{\\i}}t{-}Sadoune and P. Casteran and J. Paul Gibson and Kahina Hacid and Souad Kherroubi and Dominique M{\\'{e}}ry and Linda Mohand{-}Oussa{\\\u0026quot;{\\i}}d and Neeraj Kumar Singh and Laurent Voisin}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {On the Importance of Explicit Domain Modelling in Refinement-Based Modelling Design. Experiments with Event-B}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {425--430}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_35}, doi = {10.1007/978-3-319-91271-4\\_35}, timestamp = {Sat, 30 Sep 2023 09:34:45 +0200}, biburl = {https://dblp.org/rec/conf/asm/AmeurACGHKMMSV18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"0720444bea7bd99c677f572263cabecf","permalink":"/publication/ameuracghkmmsv18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/ameuracghkmmsv18/","section":"publication","summary":"Abstract Although several authors like Zave and Jackson [11, 17], Bjørner [5], Van Lamsweerde [13] have drawn the attention of system designers on the necessity to handle domain knowledge, while designing systems, it is still a major concern nowadays.","tags":["ABZ'18"],"title":"On the Importance of Explicit Domain Modelling in Refinement-Based Modelling Design. Experiments with Event-B","type":"publication"},{"authors":["Guillaume Dupont","Yamine Aït Ameur","Marc Pantel","Neeraj Kumar Singh 0001"],"categories":[],"content":"Abstract The design of hybrid systems controllers requires one to handle both discrete and continuous functionalities in a single development framework. In this paper, we propose the design and verification of such controllers using a correct-by-construction approach. We use proof-based formal methods to model and verify the required safety properties of the given controllers. Both Event-B with Rodin, and hybrid programs and dynamic differential logic with KeYmaera are experimented on a common case study related to the modelling of a car controller. Finally, we discuss the lessons learnt from these experiments and draw the first steps towards a generic method for modelling hybrid systems in Event-B.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_11.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DupontAPS18, author = {Guillaume Dupont and Yamine A{\\\u0026quot;{\\i}}t Ameur and Marc Pantel and Neeraj Kumar Singh}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Proof-Based Approach to Hybrid Systems Development: Dynamic Logic and Event-B}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {155--170}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_11}, doi = {10.1007/978-3-319-91271-4\\_11}, timestamp = {Thu, 10 Nov 2022 08:55:26 +0100}, biburl = {https://dblp.org/rec/conf/asm/DupontAPS18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"962b2838f652fd4cd0db4cf14755144f","permalink":"/publication/dupontaps18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/dupontaps18/","section":"publication","summary":"Abstract The design of hybrid systems controllers requires one to handle both discrete and continuous functionalities in a single development framework. In this paper, we propose the design and verification of such controllers using a correct-by-construction approach.","tags":["ABZ'18"],"title":"Proof-Based Approach to Hybrid Systems Development: Dynamic Logic and Event-B","type":"publication"},{"authors":["Julien Brunel","David Chemouil","Alcino Cunha","Thomas Hujsa","Nuno Macedo 0001","Jeanne Tawa"],"categories":[],"content":"Abstract Electrum is an extension of Alloy that adds (1) mutable signatures and fields to the modeling layer; and (2) connectives from linear temporal logic (with past) and primed variables à la (\\textsf {TLA}^+) to the constraint language. The analysis of models can then be translated into a SAT-based bounded model-checking problem, or to an LTL-based unbounded model-checking problem. Electrum has proved to be useful to model and verify dynamic systems with rich configurations. However, when specifying events, the tedious and sometimes error-prone handling of traces and frame conditions (similarly as in Alloy) remained necessary. In this paper, we introduce an extension of Electrum with a so-called “action” layer that addresses these questions.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_30.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BrunelCCHMT18, author = {Julien Brunel and David Chemouil and Alcino Cunha and Thomas Hujsa and Nuno Macedo and Jeanne Tawa}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Proposition of an Action Layer for Electrum}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {397--402}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_30}, doi = {10.1007/978-3-319-91271-4\\_30}, timestamp = {Tue, 25 Jun 2024 21:03:18 +0200}, biburl = {https://dblp.org/rec/conf/asm/BrunelCCHMT18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"88e9e4608445c6b09dc612af2fa83497","permalink":"/publication/brunelcchmt18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/brunelcchmt18/","section":"publication","summary":"Abstract Electrum is an extension of Alloy that adds (1) mutable signatures and fields to the modeling layer; and (2) connectives from linear temporal logic (with past) and primed variables à la (\\textsf {TLA}^+) to the constraint language.","tags":["ABZ'18"],"title":"Proposition of an Action Layer for Electrum","type":"publication"},{"authors":["Chenyang Zhu 0001","Michael J. Butler","Corina Cîrstea"],"categories":[],"content":"Abstract Event-B is a refinement-based formal method that is used for system-level modeling and analysis of concurrent and distributed systems. Work has been done to extend Event-B with discrete time constraints. However the previous work does not capture the communication and competition between concurrent processes. In this paper, we distinguish task-based timing properties with scheduler-based timing properties from the perspective of different system design phases. To refine task-based timing properties with scheduler-based timing properties based on existing trigger-response patterns, we introduce a nondeterministic queue based scheduling framework to schedule processes under concurrent circumstances, which addresses the problems of refining deadline constraint under concurrent situations. Additional gluing invariants are provided to this refinement. To demonstrate the usability of the framework, we provide approaches to refine this framework with FIFO scheduling policy as well as deferrable priority based scheduling policy with aging technique. We demonstrate our framework and refinement with a timed mutual exclusion case study. The model is proved using the Rodin tool.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_15.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ZhuBC18, author = {Chenyang Zhu and Michael J. Butler and Corina C{\\^{\\i}}rstea}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Refinement of Timing Constraints for Concurrent Tasks with Scheduling}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {219--233}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_15}, doi = {10.1007/978-3-319-91271-4\\_15}, timestamp = {Wed, 14 Aug 2019 12:01:55 +0200}, biburl = {https://dblp.org/rec/conf/asm/ZhuBC18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"6a5d5f7d20173750b44da412a8331f9f","permalink":"/publication/zhubc18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/zhubc18/","section":"publication","summary":"Abstract Event-B is a refinement-based formal method that is used for system-level modeling and analysis of concurrent and distributed systems. Work has been done to extend Event-B with discrete time constraints.","tags":["ABZ'18"],"title":"Refinement of Timing Constraints for Concurrent Tasks with Scheduling","type":"publication"},{"authors":["Kaiyuan Wang","Allison Sullivan","Darko Marinov","Sarfraz Khurshid"],"categories":[],"content":"Abstract We introduce ASketch, the first framework for sketching models in the Alloy language. The Alloy Analyzer is a SAT-based constraint solver that allows users to create valuations for relations with respect to given constraints and bound on the universe of discourse. Alloy users routinely use the valuations to validate their models: enumerate some valuations and inspect them to detect underconstraints or overconstraints. Our key insight is that valid and invalid valuations enable sketching Alloy models where the user writes a partial model with holes and provides some valuations, and the sketching infrastructure completes the model by synthesizing Alloy fragments for the holes. ASketch offers the following extensions to Alloy: (1) it expands the Alloy grammar, allowing users to write holes in an Alloy model; (2) it can parse regular expressions and automatically generate pools of matching fragments to replace the holes; (3) it includes a solver-based technique that encodes the model with holes, the fragments for each hole, and the expected valuations to a meta-model which completes the holes when solved. Experimental results show that ASketch works well for different Alloy models with various number of holes, providing a promising approach to bring the success of traditional program sketching for imperative and functional programs to declarative, relational logic.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_9.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{WangSMK18, author = {Kaiyuan Wang and Allison Sullivan and Darko Marinov and Sarfraz Khurshid}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Solver-Based Sketching of Alloy Models Using Test Valuations}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {121--136}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_9}, doi = {10.1007/978-3-319-91271-4\\_9}, timestamp = {Thu, 14 Oct 2021 10:31:49 +0200}, biburl = {https://dblp.org/rec/conf/asm/WangSMK18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"0c848d7c92a787a504bfbec2ad87e269","permalink":"/publication/wangsmk18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/wangsmk18/","section":"publication","summary":"Abstract We introduce ASketch, the first framework for sketching models in the Alloy language. The Alloy Analyzer is a SAT-based constraint solver that allows users to create valuations for relations with respect to given constraints and bound on the universe of discourse.","tags":["ABZ'18"],"title":"Solver-Based Sketching of Alloy Models Using Test Valuations","type":"publication"},{"authors":["John W Baugh Jr","Tristan Dyer"],"categories":[],"content":"Abstract Control systems, protocols, and hardware design are among the most common applications of state-based formal methods, and yet the types of modeling and analysis they enable are also well-suited to problems in scientific computation, where quality, reproducibility, and productivity are growing concerns. We survey the challenges faced by developers of scientific software, characterize the nature of the programs they write, and offer some perspective on the role that state-based methods can play in scientific domains.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_29.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BaughD18, author = {John W. Baugh Jr. and Tristan Dyer}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {State-Based Formal Methods in Scientific Computation}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {392--396}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_29}, doi = {10.1007/978-3-319-91271-4\\_29}, timestamp = {Mon, 16 Sep 2019 15:30:16 +0200}, biburl = {https://dblp.org/rec/conf/asm/BaughD18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"ae83120b1f2b4b2b8d9e882fceef0690","permalink":"/publication/baughd18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/baughd18/","section":"publication","summary":"Abstract Control systems, protocols, and hardware design are among the most common applications of state-based formal methods, and yet the types of modeling and analysis they enable are also well-suited to problems in scientific computation, where quality, reproducibility, and productivity are growing concerns.","tags":["ABZ'18"],"title":"State-Based Formal Methods in Scientific Computation","type":"publication"},{"authors":["Kaiyuan Wang","Allison Sullivan","Manos Koukoutos","Darko Marinov","Sarfraz Khurshid"],"categories":[],"content":"Abstract Relational algebra forms the semantic foundation in multiple domains, e.g., Alloy models, OCL constraints, UML metamodels, and SQL queries. Synthesis and repair techniques in such domains require an efficient procedure to generate (non-equivalent) expressions subject to relational constraints, e.g., the types of sets and relations, their cardinality, size of expressions, maximum arity of the intermediate expressions, etc. This paper introduces the first generator for relational expressions that are non-equivalent with respect to the semantics of relational algebra. We present the algorithms that define our generator, its embodiment based on the Alloy tool-set, and an experimental evaluation to show the effectiveness of its non-equivalent generation for a variety of problems with relational constraints.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_8.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{WangSKMK18, author = {Kaiyuan Wang and Allison Sullivan and Manos Koukoutos and Darko Marinov and Sarfraz Khurshid}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Systematic Generation of Non-equivalent Expressions for Relational Algebra}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {105--120}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_8}, doi = {10.1007/978-3-319-91271-4\\_8}, timestamp = {Thu, 14 Oct 2021 10:31:49 +0200}, biburl = {https://dblp.org/rec/conf/asm/WangSKMK18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"cc5ff0da50b0d35decb273677f8e5f20","permalink":"/publication/wangskmk18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/wangskmk18/","section":"publication","summary":"Abstract Relational algebra forms the semantic foundation in multiple domains, e.g., Alloy models, OCL constraints, UML metamodels, and SQL queries. Synthesis and repair techniques in such domains require an efficient procedure to generate (non-equivalent) expressions subject to relational constraints, e.","tags":["ABZ'18"],"title":"Systematic Generation of Non-equivalent Expressions for Relational Algebra","type":"publication"},{"authors":["Flavio Ferrarotti","Senén González","Klaus-Dieter Schewe","José Maria Turull Torres"],"categories":[],"content":"Abstract Graph algorithms that involve complex conditions on subgraphs can be specified much easier, if the specification allows expressions in higher-order logic to be used. In this paper an extension of Abstract State Machines by such expressions is introduced and its usefulness is demonstrated by examples of computations on graphs, such as graph factoring and checking self-similarity. In a naïve way these high-level specifications can be refined using submachines for the evaluation of the higher-order expressions. We show that refinements can be obtained in an automatic way for well-defined fragments of higher-order logic that collapse to second-order, by means of which the naïve refinement is only necessary for second-order logic expressions.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_14.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{FerrarottiGST18, author = {Flavio Ferrarotti and Sen{\\'{e}}n Gonz{\\'{a}}lez and Klaus{-}Dieter Schewe and Jos{\\'{e}} Maria Turull Torres}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Systematic Refinement of Abstract State Machines with Higher-Order Logic}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {204--218}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_14}, doi = {10.1007/978-3-319-91271-4\\_14}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/FerrarottiGST18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7d184464f1ff072aeb911b0c9daa8373","permalink":"/publication/ferrarottigst18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/ferrarottigst18/","section":"publication","summary":"Abstract Graph algorithms that involve complex conditions on subgraphs can be specified much easier, if the specification allows expressions in higher-order logic to be used. In this paper an extension of Abstract State Machines by such expressions is introduced and its usefulness is demonstrated by examples of computations on graphs, such as graph factoring and checking self-similarity.","tags":["ABZ'18"],"title":"Systematic Refinement of Abstract State Machines with Higher-Order Logic","type":"publication"},{"authors":["Lilian Burdy","David Déharbe"],"categories":[],"content":"Abstract This paper presents an evolution of an industrial proof support framework that integrates state-of-the-art technologies without compromising the existing tool qualification status. Third-party provers produce proof rules that may be applied by the legacy system and verified using a certified approach. This approach has been implemented in Atelier B, a formal-methods based IDE for the development of software components and for the modeling of systems.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_33.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BurdyD18, author = {Lilian Burdy and David D{\\'{e}}harbe}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Teaching an Old Dog New Tricks - The Drudges of the Interactive Prover in Atelier {B}}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {415--419}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_33}, doi = {10.1007/978-3-319-91271-4\\_33}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/BurdyD18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"0d1ba2a437344418273a1c6a9249eea3","permalink":"/publication/burdyd18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/burdyd18/","section":"publication","summary":"Abstract This paper presents an evolution of an industrial proof support framework that integrates state-of-the-art technologies without compromising the existing tool qualification status. Third-party provers produce proof rules that may be applied by the legacy system and verified using a certified approach.","tags":["ABZ'18"],"title":"Teaching an Old Dog New Tricks - The Drudges of the Interactive Prover in Atelier B","type":"publication"},{"authors":["Inna Vistbakka","Mikhail Barash","Elena Troubitsyna"],"categories":[],"content":"Abstract Role-Based Access Control (RBAC) is a popular authorization model used to manage resource-access constraints in a wide range of systems. The standard RBAC framework adopts a static, state-independent approach to define the access rights to the system resources. It is often insufficient for correct implementation of the desired functionality and should be augmented with the dynamic, i.e., a state-dependant view on the access control. In this paper, we present a work in progress on creating a domain-specific language and the tool support for modelling and verification of dynamic RBAC. They support a tabular representation of the static RBAC constraints together with the graphical model of the scenarios and enable an automated translation of them into an Event-B model.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_28.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{VistbakkaBT18, author = {Inna Vistbakka and Mikhail Barash and Elena Troubitsyna}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Towards Creating a {DSL} Facilitating Modelling of Dynamic Access Control in Event-B}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {386--391}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_28}, doi = {10.1007/978-3-319-91271-4\\_28}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/VistbakkaBT18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"b5dcb57b88f1dc28fcb10aa7503535c5","permalink":"/publication/vistbakkabt18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/vistbakkabt18/","section":"publication","summary":"Abstract Role-Based Access Control (RBAC) is a popular authorization model used to manage resource-access constraints in a wide range of systems. The standard RBAC framework adopts a static, state-independent approach to define the access rights to the system resources.","tags":["ABZ'18"],"title":"Towards Creating a DSL Facilitating Modelling of Dynamic Access Control in Event-B","type":"publication"},{"authors":["Mohammadsadegh Dalvandi","Michael J. Butler","Abdolbaghi Rezazadeh","Asieh Salehi Fathabadi"],"categories":[],"content":"Abstract Scheduled Event-B (SEB) augments Event-B with a scheduling language to make the control flow in an Event-B model explicit and facilitate derivation of algorithmic structure in Event-B refinement. A concrete SEB model has a concrete algorithmic structure associated with it. Although this structure reduces the difficulty of code generation, there is still some gap between the model and executable code. This work formulates the translation of SEB models to a programming language called Dafny and proposes an approach in which a number of assertions are generated from the model that allows the verification of the generated code in a static program verifier.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-91271-4_16.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DalvandiBRF18, author = {Mohammadsadegh Dalvandi and Michael J. Butler and Abdolbaghi Rezazadeh and Asieh Salehi Fathabadi}, editor = {Michael J. Butler and Alexander Raschke and Thai Son Hoang and Klaus Reichl}, title = {Verifiable Code Generation from Scheduled Event-B Models}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {10817}, pages = {234--248}, publisher = {Springer}, year = {2018}, url = {https://doi.org/10.1007/978-3-319-91271-4\\_16}, doi = {10.1007/978-3-319-91271-4\\_16}, timestamp = {Thu, 23 Jun 2022 19:58:53 +0200}, biburl = {https://dblp.org/rec/conf/asm/DalvandiBRF18.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"2a48718abadfa5494e9ccb42be6cd0ab","permalink":"/publication/dalvandibrf18/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/publication/dalvandibrf18/","section":"publication","summary":"Abstract Scheduled Event-B (SEB) augments Event-B with a scheduling language to make the control flow in an Event-B model explicit and facilitate derivation of algorithmic structure in Event-B refinement. A concrete SEB model has a concrete algorithmic structure associated with it.","tags":["ABZ'18"],"title":"Verifiable Code Generation from Scheduled Event-B Models","type":"publication"},{"authors":["Frédéric Boniol","Virginie Wiels","Yamine Aït-Ameur","Klaus-Dieter Schewe"],"categories":[],"content":"Abstract Embedded critical systems need to be validated very thoroughly; it usually results in very long and onerous test phases. Formal techniques, in particular formal specification languages and associated proof tools, could be an advantageous alternative, or at least a good complement and allow a significant reduction of test phases. However, for these techniques to be used in practice, one issue to consider is their efficiency and scalability on complex industrial systems.\nDocument    var url = \"\\/data\\/sttt\\/boniol2016sttt.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @Article{Boniol2017, author=\u0026quot;Boniol, Fr{\\'e}d{\\'e}ric and Wiels, Virginie and A{\\\u0026quot;i}t-Ameur, Yamine and Schewe, Klaus-Dieter\u0026quot;, title=\u0026quot;The landing gear case study: challenges and experiments\u0026quot;, journal=\u0026quot;International Journal on Software Tools for Technology Transfer\u0026quot;, year=\u0026quot;2017\u0026quot;, month=\u0026quot;Apr\u0026quot;, day=\u0026quot;01\u0026quot;, volume=\u0026quot;19\u0026quot;, number=\u0026quot;2\u0026quot;, pages=\u0026quot;133--140\u0026quot;, issn=\u0026quot;1433-2787\u0026quot;, doi=\u0026quot;10.1007/s10009-016-0431-4\u0026quot;, url=\u0026quot;https://doi.org/10.1007/s10009-016-0431-4\u0026quot; }  Model Archive : Not available Presentation : Not available Used formal method : Event-B Resources and tools : Rodin, ProB Required OS : Linux, Mac, Windows Website : Not available Remarks and recommendation : No\n","date":1465776e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"18214f00b677808c52c4f3c20094ffcb","permalink":"/publication/boniol2016sttt/","publishdate":"2016-06-13T00:00:00Z","relpermalink":"/publication/boniol2016sttt/","section":"publication","summary":"Abstract Embedded critical systems need to be validated very thoroughly; it usually results in very long and onerous test phases. Formal techniques, in particular formal specification languages and associated proof tools, could be an advantageous alternative, or at least a good complement and allow a significant reduction of test phases.","tags":["ABZ'14"],"title":"The landing gear case study: challenges and experiments","type":"publication"},{"authors":null,"categories":null,"content":"","date":1465084800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"6041f2b077e244542ffcdc73544e4129","permalink":"/2016/","publishdate":"2016-06-05T00:00:00Z","relpermalink":"/2016/","section":"event","summary":"5th International Conference on ASM, Alloy, B, TLA, VDM, and Z","tags":["ABZ'16"],"title":"ABZ 2016 (Linz, Austria)","type":"event"},{"authors":["Atif Mashkoor"],"categories":[],"content":"Abstract This documents presents a description of a case study concerning the control of a hemodialysis (HD) machine. It provides an overview of the requirements and the design of an HD machine including a sketch of the machine’s functionality, related safety conditions, and a top-level system architectural description.\nDocument    var url = \"\\/data\\/abz16\\/mashkoor2016abz-cs.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-319-33600-8_29, author=\u0026quot;Mashkoor, Atif\u0026quot;, editor=\u0026quot;Butler, Michael and Schewe, Klaus-Dieter and Mashkoor, Atif and Biro, Miklos\u0026quot;, title=\u0026quot;The Hemodialysis Machine Case Study\u0026quot;, booktitle=\u0026quot;Abstract State Machines, Alloy, B, TLA, VDM, and Z\u0026quot;, year=\u0026quot;2016\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;329--343\u0026quot;, abstract=\u0026quot;This documents presents a description of a case study concerning the control of a hemodialysis (HD) machine. It provides an overview of the requirements and the design of an HD machine including a sketch of the machine's functionality, related safety conditions, and a top-level system architectural description.\u0026quot;, isbn=\u0026quot;978-3-319-33600-8\u0026quot; }  ","date":1462665600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e32bfa1d86ffe98ada4840633673fd96","permalink":"/publication/mashkoor16/","publishdate":"2016-05-08T00:00:00Z","relpermalink":"/publication/mashkoor16/","section":"publication","summary":"Abstract This documents presents a description of a case study concerning the control of a hemodialysis (HD) machine. It provides an overview of the requirements and the design of an HD machine including a sketch of the machine’s functionality, related safety conditions, and a top-level system architectural description.","tags":["ABZ'16"],"title":"The Hemodialysis Machine Case Study","type":"publication"},{"authors":["Richard Banach"],"categories":[],"content":"Abstract The hemodialysis machine case study is examined in Hybrid Event-B (an extension of Event-B that includes provision for continuously varying behaviour as well as the usual discrete changes of state). A broadly component based strategy is adopted, using the multi-machine and coordination facilities of Hybrid Event-B. Since, like most medical procedures, hemodialysis is under overall human control, it is largely a sequential process, with some branching to deal with exceptional circumstances. This makes for a relatively uncomplicated modelling framework, provided a model of the operator is included in order to capture the handling of exceptions.\nDocument    var url = \"https:\\/\\/www.research.manchester.ac.uk\\/portal\\/files\\/31402126\\/FULL_TEXT.PDF\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-319-33600-8_32, author=\u0026quot;Banach, Richard\u0026quot;, editor=\u0026quot;Butler, Michael and Schewe, Klaus-Dieter and Mashkoor, Atif and Biro, Miklos\u0026quot;, title=\u0026quot;Hemodialysis Machine in Hybrid Event-B\u0026quot;, booktitle=\u0026quot;Abstract State Machines, Alloy, B, TLA, VDM, and Z\u0026quot;, year=\u0026quot;2016\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;376--393\u0026quot;, isbn=\u0026quot;978-3-319-33600-8\u0026quot; }  Sources   Used formal method: Hybrid Event-B\nFor more information, please contact the authors\n  ","date":1462060800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d2e8d9c3257c8aaf88fee05c8c32c32a","permalink":"/publication/banach16/","publishdate":"2016-05-01T00:00:00Z","relpermalink":"/publication/banach16/","section":"publication","summary":"Abstract The hemodialysis machine case study is examined in Hybrid Event-B (an extension of Event-B that includes provision for continuously varying behaviour as well as the usual discrete changes of state).","tags":["ABZ'16"],"title":"Hemodialysis Machine in Hybrid Event-B","type":"publication"},{"authors":["Paolo Arcaini","Silvia Bonfanti","Angelo Gargantini","Elvinia Riccobene"],"categories":[],"content":"Abstract Medical devices are nowadays more and more software dependent, and software malfunctioning can lead to injuries or death for patients. Several standards have been proposed for the development and the validation of medical devices, but they establish general guidelines on the use of common software engineering activities without any indication regarding methods and techniques to assure safety and reliability. This paper takes advantage of the Hemodialysis machine case study to present a formal development process supporting most of the engineering activities required by the standards, and provides rigorous approaches for system validation and verification. The process is based on the Abstract State Machine formal method and its model refinement principle.\nDocument    var url = \"https:\\/\\/cs.unibg.it\\/gargantini\\/research\\/papers\\/abz2016_hemodialysisCaseStudy.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-319-33600-8_30, author=\u0026quot;Arcaini, Paolo and Bonfanti, Silvia and Gargantini, Angelo and Riccobene, Elvinia\u0026quot;, editor=\u0026quot;Butler, Michael and Schewe, Klaus-Dieter and Mashkoor, Atif and Biro, Miklos\u0026quot;, title=\u0026quot;How to Assure Correctness and Safety of Medical Software: The Hemodialysis Machine Case Study \u0026quot;, booktitle=\u0026quot;Abstract State Machines, Alloy, B, TLA, VDM, and Z\u0026quot;, year=\u0026quot;2016\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;344--359\u0026quot;, abstract=\u0026quot;Medical devices are nowadays more and more software dependent, and software malfunctioning can lead to injuries or death for patients. Several standards have been proposed for the development and the validation of medical devices, but they establish general guidelines on the use of common software engineering activities without any indication regarding methods and techniques to assure safety and reliability.\u0026quot;, isbn=\u0026quot;978-3-319-33600-8\u0026quot; }  Sources   Used formal method: ASM\nFor more information, please contact the authors\n  ","date":1462060800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d64431bd240a15e7e19d4aebcd5b3906","permalink":"/publication/arcainibgr16/","publishdate":"2016-05-01T00:00:00Z","relpermalink":"/publication/arcainibgr16/","section":"publication","summary":"Abstract Medical devices are nowadays more and more software dependent, and software malfunctioning can lead to injuries or death for patients. Several standards have been proposed for the development and the validation of medical devices, but they establish general guidelines on the use of common software engineering activities without any indication regarding methods and techniques to assure safety and reliability.","tags":["ABZ'16"],"title":"How to Assure Correctness and Safety of Medical Software: The Hemodialysis Machine Case Study","type":"publication"},{"authors":["Thomas Fayolle","Marc Frappier","Frédéric Gervais","Régine Laleau"],"categories":[],"content":"Abstract This paper presents the specification of the hemodialysis case study, proposed by ABZ'16 conference. The specification was carried out by a coupling of Algebraic State-Transition Diagrams (ASTD) and B-like methods. astd are a graphical notation, based on automata and process algebra operators. They provide an easy-to-read specification of the dynamic behaviour of the system. The data model is specified using the Event-B language. The system is incrementally designed using extended refinement of both methods.\n   var url = \"\\/fayolle2016abz.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  -- Reference % BibTex @InProceedings{10.1007/978-3-319-33600-8_33, author=\u0026quot;Fayolle, Thomas and Frappier, Marc and Gervais, Fr{\\'e}d{\\'e}ric and Laleau, R{\\'e}gine\u0026quot;, editor=\u0026quot;Butler, Michael and Schewe, Klaus-Dieter and Mashkoor, Atif and Biro, Miklos\u0026quot;, title=\u0026quot;Modelling a Hemodialysis Machine Using Algebraic State-Transition Diagrams and B-like Methods\u0026quot;, booktitle=\u0026quot;Abstract State Machines, Alloy, B, TLA, VDM, and Z\u0026quot;, year=\u0026quot;2016\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;394--408\u0026quot;, isbn=\u0026quot;978-3-319-33600-8\u0026quot; }  Sources   Used formal method: Algebraic State-Transition Diagrams (ASTD)\nFor more information, please contact the authors\n  ","date":1462060800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"8f04315f7c53021655cedfe57414e5e9","permalink":"/publication/fayollefgl16/","publishdate":"2016-05-01T00:00:00Z","relpermalink":"/publication/fayollefgl16/","section":"publication","summary":"Abstract This paper presents the specification of the hemodialysis case study, proposed by ABZ'16 conference. The specification was carried out by a coupling of Algebraic State-Transition Diagrams (ASTD) and B-like methods.","tags":["ABZ'16"],"title":"Modelling a Hemodialysis Machine Using Algebraic State-Transition Diagrams and B-like Methods","type":"publication"},{"authors":["Artur Oliveira Gomes","Andrew Butterfield"],"categories":[],"content":"Abstract We present a formal model of aspects of the haemodialysis machine case study using the Circus specification notation. We focus on building a model in which each of the software requirements (R-1–36) are represented by a Circus action. All of these act in concert with actions that model the collection of sensor data and the progress through the various therapy phases and activities. We then present how we model check the system using FDR.\nDocument    var url = \"https:\\/\\/ulir.ul.ie\\/bitstream\\/handle\\/10344\\/5458\\/Gomes_2016_modelling.pdf?sequence=2\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-319-33600-8_34, author=\u0026quot;Gomes, Artur O. and Butterfield, Andrew\u0026quot;, editor=\u0026quot;Butler, Michael and Schewe, Klaus-Dieter and Mashkoor, Atif and Biro, Miklos\u0026quot;, title=\u0026quot;Modelling the Haemodialysis Machine with Circus\u0026quot;, booktitle=\u0026quot;Abstract State Machines, Alloy, B, TLA, VDM, and Z\u0026quot;, year=\u0026quot;2016\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;409--424\u0026quot;, isbn=\u0026quot;978-3-319-33600-8\u0026quot; }  Sources   Used formal method: Circus\nFor more information, please contact the authors\n  ","date":1462060800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"b12f5099c15688e927132115581ed00a","permalink":"/publication/gomesb16/","publishdate":"2016-05-01T00:00:00Z","relpermalink":"/publication/gomesb16/","section":"publication","summary":"Abstract We present a formal model of aspects of the haemodialysis machine case study using the Circus specification notation. We focus on building a model in which each of the software requirements (R-1–36) are represented by a Circus action.","tags":["ABZ'16"],"title":"Modelling the Haemodialysis Machine with Circus","type":"publication"},{"authors":["Thai Son Hoang","Colin F. Snook","Lukas Ladenberger","Michael J. Butler"],"categories":[],"content":"Abstract We present a formal specification of a hemodialysis machine (HD machine) using Event-B. We model the HD machine using iUML-B state-machines and class diagrams and build a corresponding BMotion Studio visualisation. We focus on validation using (i) diagrams to aid the modelling of the sequential properties of the requirements, and (ii) ProB-based animation and visualisation tools to explore the system’s behaviour. Some of the safety properties involve dynamic behaviour which is difficult to verify in Event-B. For these properties we use co-simulation tools to validate against a continuous model of the physical behaviour.\nDocument    var url = \"https:\\/\\/eprints.soton.ac.uk\\/394742\\/1\\/HDMachine-final.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-319-33600-8_31, author=\u0026quot;Hoang, Thai Son and Snook, Colin and Ladenberger, Lukas and Butler, Michael\u0026quot;, editor=\u0026quot;Butler, Michael and Schewe, Klaus-Dieter and Mashkoor, Atif and Biro, Miklos\u0026quot;, title=\u0026quot;Validating the Requirements and Design of a Hemodialysis Machine Using iUML-B, BMotion Studio, and Co-Simulation\u0026quot;, booktitle=\u0026quot;Abstract State Machines, Alloy, B, TLA, VDM, and Z\u0026quot;, year=\u0026quot;2016\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;360--375\u0026quot;, isbn=\u0026quot;978-3-319-33600-8\u0026quot; }  Sources   Used formal method: Event-B\n  Resources and tools: ProB\nFor more information, please contact the authors\n  ","date":1462060800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e4530a85d6b5cf39ce73145e26bca53a","permalink":"/publication/hoangslb16/","publishdate":"2016-05-01T00:00:00Z","relpermalink":"/publication/hoangslb16/","section":"publication","summary":"Abstract We present a formal specification of a hemodialysis machine (HD machine) using Event-B. We model the HD machine using iUML-B state-machines and class diagrams and build a corresponding BMotion Studio visualisation.","tags":["ABZ'16"],"title":"Validating the Requirements and Design of a Hemodialysis Machine Using iUML-B, BMotion Studio, and Co-Simulation","type":"publication"},{"authors":["Yibo Liang","Yuhui Lin","Gudmund Grov"],"categories":[],"content":"Abstract PSGraph [3] is a graphical proof strategy language, which uses the formalisation of labelled hierarchical graphs to provide support for the development and maintenance of large and complex proof tactics. PSGraph has been implemented as the Tinker system, which previously supported the Isabelle and ProofPower theorem provers [4]. In this paper we present a Rodin version of Tinker, which allows Rodin users to encode, analyse and debug their proof strategies in Tinker.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_19.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{LiangLG16, author = {Yibo Liang and Yuhui Lin and Gudmund Grov}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {'The Tinker' for Rodin}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {262--268}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_19}, doi = {10.1007/978-3-319-33600-8\\_19}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/LiangLG16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"a592ac5fc29c4ab721244a46a9b5a9af","permalink":"/publication/lianglg16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/lianglg16/","section":"publication","summary":"Abstract PSGraph [3] is a graphical proof strategy language, which uses the formalisation of labelled hierarchical graphs to provide support for the development and maintenance of large and complex proof tactics.","tags":["ABZ'16"],"title":"\u0026apos;The Tinker\u0026apos; for Rodin","type":"publication"},{"authors":["Michael Leuschel","Egon Börger"],"categories":[],"content":"Abstract We present a translation of sequential ASMs to Event-B specifications. The translation also addresses the partial update problem, and allows a variable to be updated (consistently) in parallel. On the theoretical side, the translation highlights the intricacies of ASM rule execution in terms of Event-B semantics. On the practical side, we show on a series of examples that the Event-B encoding remains compact and is amenable to proof within Rodin as well as animation and model checking using ProB.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_7.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{LeuschelB16, author = {Michael Leuschel and Egon B{\\\u0026quot;{o}}rger}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {A Compact Encoding of Sequential ASMs in Event-B}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {119--134}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_7}, doi = {10.1007/978-3-319-33600-8\\_7}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/LeuschelB16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f11e2106708c2a8a95ba71cf78dceee6","permalink":"/publication/leuschelb16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/leuschelb16/","section":"publication","summary":"Abstract We present a translation of sequential ASMs to Event-B specifications. The translation also addresses the partial update problem, and allows a variable to be updated (consistently) in parallel. On the theoretical side, the translation highlights the intricacies of ASM rule execution in terms of Event-B semantics.","tags":["ABZ'16"],"title":"A Compact Encoding of Sequential ASMs in Event-B","type":"publication"},{"authors":["Dana Dghaym","Matheus Garay Trindade","Michael J. Butler","Asieh Salehi Fathabadi"],"categories":[],"content":"Abstract The Event Refinement Structures (ERS) approach provides a graphical extension of the Event-B formal method to represent event decomposition and control-flow explicitly. In this paper we present an improved version of the ERS plug-in, which provides a graphical environment for the ERS approach within the Event-B tool, Rodin. The improved ERS plug-in is based on the available frameworks that are developed to support Event-B with an EMF framework, language extensions and generic diagram extensions.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_20.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DghaymTBF16, author = {Dana Dghaym and Matheus Garay Trindade and Michael J. Butler and Asieh Salehi Fathabadi}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {A Graphical Tool for Event Refinement Structures in Event-B}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {269--274}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_20}, doi = {10.1007/978-3-319-33600-8\\_20}, timestamp = {Thu, 23 Jun 2022 19:58:53 +0200}, biburl = {https://dblp.org/rec/conf/asm/DghaymTBF16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"9239daf2bd9670d7196643cb9347ed55","permalink":"/publication/dghaymtbf16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/dghaymtbf16/","section":"publication","summary":"Abstract The Event Refinement Structures (ERS) approach provides a graphical extension of the Event-B formal method to represent event decomposition and control-flow explicitly. In this paper we present an improved version of the ERS plug-in, which provides a graphical environment for the ERS approach within the Event-B tool, Rodin.","tags":["ABZ'16"],"title":"A Graphical Tool for Event Refinement Structures in Event-B","type":"publication"},{"authors":["Philipp Paulweber","Uwe Zdun"],"categories":[],"content":"Abstract The Abstract State Machine (ASM) theory is a way to specify algorithms, applications and systems in a formal model. Recent ASM languages and tools address either the translation of ASM specifications to a specific target programming language or aim at the execution in a specific environment. In this work-in-progress paper we outline a model-based transformation approach supporting (1) the specification of applications or systems using the Corinthian Abstract State Machine (CASM) modeling language and (2) retargeting those applications to different programming language and hardware target domains. An intermediate model is introduced, which not only captures software-based implementations, but also the generation of hardware-related code in the same model. This approach offers a new formal modeling perspective onto modular, reusable and retargetable software and hardware designs for the development of embedded systems. We provide a short overview of our CASM compiler design as well as the retargetable model-based approach to generate code for different target domains.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_17.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{PaulweberZ16, author = {Philipp Paulweber and Uwe Zdun}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {A Model-Based Transformation Approach to Reuse and Retarget {CASM} Specifications}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {250--255}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_17}, doi = {10.1007/978-3-319-33600-8\\_17}, timestamp = {Sat, 09 Apr 2022 12:45:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/PaulweberZ16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c632388b7ec5a6ce6f280dee6c64fd09","permalink":"/publication/paulweberz16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/paulweberz16/","section":"publication","summary":"Abstract The Abstract State Machine (ASM) theory is a way to specify algorithms, applications and systems in a formal model. Recent ASM languages and tools address either the translation of ASM specifications to a specific target programming language or aim at the execution in a specific environment.","tags":["ABZ'16"],"title":"A Model-Based Transformation Approach to Reuse and Retarget CASM Specifications","type":"publication"},{"authors":["Gerhard Schellhorn","Gidon Ernst","Jörg Pfähler","Wolfgang Reif"],"categories":[],"content":"Abstract This paper defines a static check for clash-freedom of ASM rules, including sequential and parallel composition, nondeterministic choice, and recursion. The check computes a formula that, if provable, makes a relational encoding of ASM rules possible, which is an important prerequisite for efficient deduction. The check is general enough to cover all sequential rules as well as many typical uses of parallel composition.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_15.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SchellhornEPR16, author = {Gerhard Schellhorn and Gidon Ernst and J{\\\u0026quot;{o}}rg Pf{\\\u0026quot;{a}}hler and Wolfgang Reif}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {A Relational Encoding for a Clash-Free Subset of ASMs}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {237--243}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_15}, doi = {10.1007/978-3-319-33600-8\\_15}, timestamp = {Tue, 07 May 2024 20:13:31 +0200}, biburl = {https://dblp.org/rec/conf/asm/SchellhornEPR16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f60865b0e9429838990b7d0cfd345b91","permalink":"/publication/schellhornepr16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/schellhornepr16/","section":"publication","summary":"Abstract This paper defines a static check for clash-freedom of ASM rules, including sequential and parallel composition, nondeterministic choice, and recursion. The check computes a formula that, if provable, makes a relational encoding of ASM rules possible, which is an important prerequisite for efficient deduction.","tags":["ABZ'16"],"title":"A Relational Encoding for a Clash-Free Subset of ASMs","type":"publication"},{"authors":["Noran Azmy","Stephan Merz","Christoph Weidenbach"],"categories":[],"content":"Abstract Peer-to-peer protocols for maintaining distributed hash tables, such as Pastry or Chord, have become popular for a class of Internet applications. While such protocols promise certain properties concerning correctness and performance, verification attempts using formal methods invariably discover border cases that violate some of those guarantees. Tianxiang Lu reported correctness problems in published versions of Pastry and also developed a model, which he called LuPastry, for which he provided a partial proof of correct delivery assuming no node departures, mechanized in the TLA(^+) Proof System. Lu’s proof is based on certain assumptions that were left unproven. We found counter-examples to several of these assumptions. In this paper, we present a revised model and rigorous proof of correct delivery, which we call LuPastry(^+). Aside from being the first complete proof, LuPastry(^+) also improves upon Lu’s work by reformulating parts of the specification in such a way that the reasoning complexity is confined to a small part of the proof.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_5.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{AzmyMW16, author = {Noran Azmy and Stephan Merz and Christoph Weidenbach}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {A Rigorous Correctness Proof for Pastry}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {86--101}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_5}, doi = {10.1007/978-3-319-33600-8\\_5}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/AzmyMW16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"5dc95041cd427c79a840408118ef303f","permalink":"/publication/azmymw16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/azmymw16/","section":"publication","summary":"Abstract Peer-to-peer protocols for maintaining distributed hash tables, such as Pastry or Chord, have become popular for a class of Internet applications. While such protocols promise certain properties concerning correctness and performance, verification attempts using formal methods invariably discover border cases that violate some of those guarantees.","tags":["ABZ'16"],"title":"A Rigorous Correctness Proof for Pastry","type":"publication"},{"authors":["Yuhui Lin","Gudmund Grov","Colin O\u0026apos;Halloran","Priiya G"],"categories":[],"content":"Abstract The ClawZ toolset has been successful in verifying that Ada code is correctly generated from Simulink models in an industrial setting, using the Z notation. D-RisQ is now extending this technique to new domains of the C programming language, which requires changes to their highly complex proof technique. In this paper, we present initial results in the technology transfer of the graphical PSGraph language to support this extension, and show feasibility of PSGraph for industrial use with strong maintainability requirements.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_28.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{LinGOG16, author = {Yuhui Lin and Gudmund Grov and Colin O'Halloran and Priiya G.}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {A Super Industrial Application of PSGraph}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {319--325}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_28}, doi = {10.1007/978-3-319-33600-8\\_28}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/LinGOG16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f3d1ea080af31704fbeb25f17a175768","permalink":"/publication/lingog16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/lingog16/","section":"publication","summary":"Abstract The ClawZ toolset has been successful in verifying that Ada code is correctly generated from Simulink models in an industrial setting, using the Z notation. D-RisQ is now extending this technique to new domains of the C programming language, which requires changes to their highly complex proof technique.","tags":["ABZ'16"],"title":"A Super Industrial Application of PSGraph","type":"publication"},{"authors":["Michael Stegmaier","Marcel Dausend","Alexander Raschke","Matthias Tichy"],"categories":[],"content":"Abstract Abstract State Machines can be used to specify arbitrary system behaviour. However, when writing executable specifications one often has to write additional statements which organise how, e.g., in which order, the rules are executed. This reduces the readability and comprehensibility of specifications and can introduce additional defects to them. We propose a new syntax construct for the specification of control flow for the ASM language which improves the compactness and readability of specifications by providing syntactic elements for often manually realised behaviour. This construct enables to parametrise which rules shall be selected for execution and how the selected rules are executed. We illustrate how the control construct can improve the code’s readability on some examples. The proposed control construct is also released as a plugin for CoreASM.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_2.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{StegmaierDRT16, author = {Michael Stegmaier and Marcel Dausend and Alexander Raschke and Matthias Tichy}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {A Universal Control Construct for Abstract State Machines}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {37--53}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_2}, doi = {10.1007/978-3-319-33600-8\\_2}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/StegmaierDRT16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7bb2cead6a5d611a00e2466eb244a8cb","permalink":"/publication/stegmaierdrt16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/stegmaierdrt16/","section":"publication","summary":"Abstract Abstract State Machines can be used to specify arbitrary system behaviour. However, when writing executable specifications one often has to write additional statements which organise how, e.g., in which order, the rules are executed.","tags":["ABZ'16"],"title":"A Universal Control Construct for Abstract State Machines","type":"publication"},{"authors":["Ivaylo Dobrikov","Michael Leuschel"],"categories":[],"content":"Abstract In this paper we present a static analysis to determine how events influence each other in Event-B models. The analysis, called an enabling analysis, uses syntactic and constraint-based techniques to compute the effect of executing one event on the guards of another event. We describe the foundations of the approach along with the realisation in ProB. The output of the analysis can help a user to understand the control flow of a formal model. Additionally, we discuss how the information of the enabling analysis can be used to obtain a new optimised model checking algorithm. We evaluate both the performance of the enabling analysis and the new model checking technique on a variety of models. The technique is also applicable to B, (\\mathrm{TLA}^{+}), and Z models.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_6.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DobrikovL16, author = {Ivaylo Dobrikov and Michael Leuschel}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {Enabling Analysis for Event-B}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {102--118}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_6}, doi = {10.1007/978-3-319-33600-8\\_6}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/DobrikovL16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"1714c90fdfd569fcbc7a042850cd788e","permalink":"/publication/dobrikovl16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/dobrikovl16/","section":"publication","summary":"Abstract In this paper we present a static analysis to determine how events influence each other in Event-B models. The analysis, called an enabling analysis, uses syntactic and constraint-based techniques to compute the effect of executing one event on the guards of another event.","tags":["ABZ'16"],"title":"Enabling Analysis for Event-B","type":"publication"},{"authors":["Stephan Merz","Hernán Vanzetto"],"categories":[],"content":"Abstract This paper presents an encoding of a non-temporal fragment of the ({\\textsc {TLA}} ^{{+}}) language, which includes untyped set theory, functions, arithmetic expressions, and Hilbert’s (\\varepsilon ) operator, into many-sorted first-order logic, the input language of state-of-the-art smt solvers. This translation, based on encoding techniques such as boolification, injection of unsorted expressions into sorted languages, term rewriting, and abstraction, is the core component of a back-end prover based on smt solvers for the ({\\textsc {TLA}} ^{{+}}) Proof System.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_3.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MerzV16, author = {Stephan Merz and Hern{\\'{a}}n Vanzetto}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {Encoding {TLA} {\\^{}}+ + into Many-Sorted First-Order Logic}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {54--69}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_3}, doi = {10.1007/978-3-319-33600-8\\_3}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/MerzV16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7cd0b8ebd523e5d2599bd69bf568f590","permalink":"/publication/merzv16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/merzv16/","section":"publication","summary":"Abstract This paper presents an encoding of a non-temporal fragment of the ({\\textsc {TLA}} ^{{+}}) language, which includes untyped set theory, functions, arithmetic expressions, and Hilbert’s (\\varepsilon ) operator, into many-sorted first-order logic, the input language of state-of-the-art smt solvers.","tags":["ABZ'16"],"title":"Encoding TLA + + into Many-Sorted First-Order Logic","type":"publication"},{"authors":["Maha Boussabbeh","Mohamed Tounsi 0001","Mohamed Mosbah 0001","Ahmed Hadj Kacem"],"categories":[],"content":"Abstract In this paper, we propose a formal framework enhancing the termination detection property of distributed algorithms and reusing their specifications as well as their proofs. By relying on refinement and composition, we show that an algorithm specified with local termination detection, can be reused in order to compute the same algorithm with global termination detection. The main idea relies upon the development of distributed algorithms following a top/down approach and the integration of additional computation steps developed in a pre-defined module. This module is specified in a generic and scalable way in order to be composed with particular developments. Once the composition link is proven, the global termination emerges automatically.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_12.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BoussabbehTMK16, author = {Maha Boussabbeh and Mohamed Tounsi and Mohamed Mosbah and Ahmed Hadj Kacem}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {Formal Proofs of Termination Detection for Local Computations by Refinement-Based Compositions}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {198--212}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_12}, doi = {10.1007/978-3-319-33600-8\\_12}, timestamp = {Tue, 11 Oct 2022 14:59:07 +0200}, biburl = {https://dblp.org/rec/conf/asm/BoussabbehTMK16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"09d031c9300ed9bcce017547ce6d3747","permalink":"/publication/boussabbehtmk16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/boussabbehtmk16/","section":"publication","summary":"Abstract In this paper, we propose a formal framework enhancing the termination detection property of distributed algorithms and reusing their specifications as well as their proofs. By relying on refinement and composition, we show that an algorithm specified with local termination detection, can be reused in order to compute the same algorithm with global termination detection.","tags":["ABZ'16"],"title":"Formal Proofs of Termination Detection for Local Computations by Refinement-Based Compositions","type":"publication"},{"authors":["Joy Clark","Jens Bendisposto","Stefan Hallerstede","Dominik Hansen","Michael Leuschel"],"categories":[],"content":"Abstract We present a high-level algorithm description language which is translated to Event-B specifications for simulation, model checking and proof. Rather than trying to recover the program structure from a lower-level Event-B specification, we start with a high-level description of the algorithm. Our goals are more tractable code generation and more convenient modelling, while keeping the power of the Event-B method in terms of proof and refinement. We present various examples of algorithm descriptions and show that our translation ensures that they can be completely proven within Rodin while achieving a high-level of automatic proof.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_11.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ClarkBHHL16, author = {Joy Clark and Jens Bendisposto and Stefan Hallerstede and Dominik Hansen and Michael Leuschel}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {Generating Event-B Specifications from Algorithm Descriptions}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {183--197}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_11}, doi = {10.1007/978-3-319-33600-8\\_11}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/ClarkBHHL16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c8a818bb7dfad00ca49c070c7d2f48ce","permalink":"/publication/clarkbhhl16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/clarkbhhl16/","section":"publication","summary":"Abstract We present a high-level algorithm description language which is translated to Event-B specifications for simulation, model checking and proof. Rather than trying to recover the program structure from a lower-level Event-B specification, we start with a high-level description of the algorithm.","tags":["ABZ'16"],"title":"Generating Event-B Specifications from Algorithm Descriptions","type":"publication"},{"authors":["Guillaume Babin","Yamine Aït Ameur","Neeraj Kumar Singh 0001","Marc Pantel"],"categories":[],"content":"Abstract This paper presents a substitution mechanism for systems having a continuous behavior. It shall preserve the safety property stating that the output of both systems remain in a safety envelope. The whole approach is formalized using Event-B, and relies on the Rodin tools and a theory of Reals provided by the Rodin Theory Plug-in to check the internal consistency with respect to safety properties, invariants and events.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_23.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BabinASP16, author = {Guillaume Babin and Yamine A{\\\u0026quot;{\\i}}t Ameur and Neeraj Kumar Singh and Marc Pantel}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {Handling Continuous Functions in Hybrid Systems Reconfigurations: {A} Formal Event-B Development}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {290--296}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_23}, doi = {10.1007/978-3-319-33600-8\\_23}, timestamp = {Sat, 30 Sep 2023 09:34:45 +0200}, biburl = {https://dblp.org/rec/conf/asm/BabinASP16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"48a44c0554f2bce316f3f396f8a1e305","permalink":"/publication/babinasp16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/babinasp16/","section":"publication","summary":"Abstract This paper presents a substitution mechanism for systems having a continuous behavior. It shall preserve the safety property stating that the output of both systems remain in a safety envelope.","tags":["ABZ'16"],"title":"Handling Continuous Functions in Hybrid Systems Reconfigurations: A Formal Event-B Development","type":"publication"},{"authors":["Felix Kossak","Atif Mashkoor"],"categories":[],"content":"Abstract The share of formal methods is still marginal in contemporary systems and software engineering. One of the reasons is the absence of systematic guidelines and evaluation criteria that help software practitioners choose the right formal method for the problem at hand. In this paper, we present a comprehensive set of criteria, based on a systematic literature review and decade-long personal experience in industrial projects, for evaluating and comparing different formal methods. We argue that besides technical grounds (e.g., modeling capabilities and supported development phases), formal methods should also be evaluated from social and industrial perspectives. At the end of the paper, we present an evaluation of “ABZ” methods based on the stipulated criteria.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_13.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{KossakM16, author = {Felix Kossak and Atif Mashkoor}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {How to Select the Suitable Formal Method for an Industrial Application: {A} Survey}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {213--228}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_13}, doi = {10.1007/978-3-319-33600-8\\_13}, timestamp = {Wed, 25 Sep 2019 18:19:23 +0200}, biburl = {https://dblp.org/rec/conf/asm/KossakM16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"242980fd09f543fd0ff052b2ac4ef1ae","permalink":"/publication/kossakm16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/kossakm16/","section":"publication","summary":"Abstract The share of formal methods is still marginal in contemporary systems and software engineering. One of the reasons is the absence of systematic guidelines and evaluation criteria that help software practitioners choose the right formal method for the problem at hand.","tags":["ABZ'16"],"title":"How to Select the Suitable Formal Method for an Industrial Application: A Survey","type":"publication"},{"authors":["Joshua Schmidt","Sebastian Krings","Michael Leuschel"],"categories":[],"content":"Abstract When using B or Event-B for formal specifications, model checking is often used to detect errors such as invariant violations, deadlocks or refinement errors. Errors are presented as counter-example states and traces and should help fixing the underlying bugs. We suggest automating parts of this process: Using a synthesis technique, we try to generate more permissive or restrictive guards or invariants. Furthermore, synthesized actions allow to modify the behaviour of the model. All this could be done with constant user feedback, yielding an interactive debugging aid.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_25.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SchmidtKL16, author = {Joshua Schmidt and Sebastian Krings and Michael Leuschel}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {Interactive Model Repair by Synthesis}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {303--307}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_25}, doi = {10.1007/978-3-319-33600-8\\_25}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/SchmidtKL16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7bd80acb2729975aa2c5972522df7b59","permalink":"/publication/schmidtkl16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/schmidtkl16/","section":"publication","summary":"Abstract When using B or Event-B for formal specifications, model checking is often used to detect errors such as invariant violations, deadlocks or refinement errors. Errors are presented as counter-example states and traces and should help fixing the underlying bugs.","tags":["ABZ'16"],"title":"Interactive Model Repair by Synthesis","type":"publication"},{"authors":["Florent Chevrou","Aurélie Hurault","Philippe Mauran","Philippe Quéinnec"],"categories":[],"content":"Abstract In distributed systems, asynchronous communication is often viewed as a whole whereas there are actually many different interaction protocols whose properties are involved in the compatibility of peer compositions. A hierarchy of asynchronous communication models, based on refinements, is established and proven with the TLA(^+) Proof System. The work serves as a first step in the study of the substituability of the communication models when it comes to compatibility checking.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_27.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ChevrouHMQ16, author = {Florent Chevrou and Aur{\\'{e}}lie Hurault and Philippe Mauran and Philippe Qu{\\'{e}}innec}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {Mechanized Refinement of Communication Models with {TLA} {\\^{}}+ +}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {312--318}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_27}, doi = {10.1007/978-3-319-33600-8\\_27}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/ChevrouHMQ16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"9c40bb8de7a38bf96b7440fff85c67a7","permalink":"/publication/chevrouhmq16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/chevrouhmq16/","section":"publication","summary":"Abstract In distributed systems, asynchronous communication is often viewed as a whole whereas there are actually many different interaction protocols whose properties are involved in the compatibility of peer compositions. A hierarchy of asynchronous communication models, based on refinements, is established and proven with the TLA(^+) Proof System.","tags":["ABZ'16"],"title":"Mechanized Refinement of Communication Models with TLA + +","type":"publication"},{"authors":["John W Baugh Jr","Alper Altuntas"],"categories":[],"content":"Abstract We describe an Alloy model that helps check the correctness of a discrete wet-dry algorithm used in a system for hurricane storm surge prediction. Derived from simplified physics and encoded with empirical rules, the algorithm operates on a finite element mesh to allow the propagation of overland flows. Our study is motivated by complex interactions between the algorithm and a recent performance enhancement to the system that involves mesh partitioning. We briefly outline our approach and describe safety properties of the extension, as well as directions for future work.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_18.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BaughA16, author = {John W. Baugh Jr. and Alper Altuntas}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {Modeling a Discrete Wet-Dry Algorithm for Hurricane Storm Surge in Alloy}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {256--261}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_18}, doi = {10.1007/978-3-319-33600-8\\_18}, timestamp = {Sat, 30 Sep 2023 09:34:45 +0200}, biburl = {https://dblp.org/rec/conf/asm/BaughA16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"8fa7311323bde9df3197d74c11d59b56","permalink":"/publication/baugha16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/baugha16/","section":"publication","summary":"Abstract We describe an Alloy model that helps check the correctness of a discrete wet-dry algorithm used in a system for hurricane storm surge prediction. Derived from simplified physics and encoded with empirical rules, the algorithm operates on a finite element mesh to allow the propagation of overland flows.","tags":["ABZ'16"],"title":"Modeling a Discrete Wet-Dry Algorithm for Hurricane Storm Surge in Alloy","type":"publication"},{"authors":["Egon Börger"],"categories":[],"content":"Abstract We show how to model distributed algorithms by Abstract State Machines (ASMs). Comparing these models with Petri nets (PNs) reveals a certain number of idiosyncrasies of PNs which complicate both model design and analysis. The ASMs we define illustrate how one can avoid such framework related technicalities.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_1.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Borger16, author = {Egon B{\\\u0026quot;{o}}rger}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {Modeling Distributed Algorithms by Abstract State Machines Compared to Petri Nets}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {3--34}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_1}, doi = {10.1007/978-3-319-33600-8\\_1}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Borger16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"4ed77d78561c61ba765f473b92b95631","permalink":"/publication/borger16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/borger16/","section":"publication","summary":"Abstract We show how to model distributed algorithms by Abstract State Machines (ASMs). Comparing these models with Petri nets (PNs) reveals a certain number of idiosyncrasies of PNs which complicate both model design and analysis.","tags":["ABZ'16"],"title":"Modeling Distributed Algorithms by Abstract State Machines Compared to Petri Nets","type":"publication"},{"authors":["Andrew Edmunds","Colin F. Snook","Marina Waldén"],"categories":[],"content":"Abstract Efficient reuse is a goal of many software engineering strategies and is useful in the safety-critical domain where formal development is required. Event-B can be used to develop safety-critical systems, but could be improved by a component-based reuse strategy. In this paper, we outline a component-based reuse methodology for Event-B. It provides a means for bottom-up scalability, and can also be used with the existing top-down approach. We describe the process of creating library components, their composition, and specification of new properties (involving the composed elements). We introduce Event-B component interfaces and propose to use a diagrammatic representation of component instances (based on iUML-B) which can be used to describe the relationships between the composed elements. We also discuss the specification of communication flow across component boundaries and describe the additional proof obligations that are required.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_9.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{EdmundsSW16, author = {Andrew Edmunds and Colin F. Snook and Marina Wald{\\'{e}}n}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {On Component-Based Reuse for Event-B}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {151--166}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_9}, doi = {10.1007/978-3-319-33600-8\\_9}, timestamp = {Mon, 03 Jan 2022 22:35:01 +0100}, biburl = {https://dblp.org/rec/conf/asm/EdmundsSW16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"36964fe795cfe4a4d74825bf9899aa40","permalink":"/publication/edmundssw16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/edmundssw16/","section":"publication","summary":"Abstract Efficient reuse is a goal of many software engineering strategies and is useful in the safety-critical domain where formal development is required. Event-B can be used to develop safety-critical systems, but could be improved by a component-based reuse strategy.","tags":["ABZ'16"],"title":"On Component-Based Reuse for Event-B","type":"publication"},{"authors":["Sebastian Krings","Michael Leuschel"],"categories":[],"content":"Abstract We have implemented various symbolic model checking algorithms, like BMC, k-Induction and IC3 for B and Event-B. The high-level nature of B and Event-B accounts for complicated constraints arising in these symbolic analysis techniques. In this paper we suggest using static information stemming from proof obligations to simplify occurring constraints. We show how to include proof information in the aforementioned algorithms. Using different benchmarks we compare explicit state to symbolic model checking as well as techniques with and without proof assistance. In particular for models with large branching factor, e.g., due to complicated data values being manipulated, the symbolic techniques fare much better than explicit state model checking. The inclusion of proof information results in further clear performance improvements.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_8.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{KringsL16, author = {Sebastian Krings and Michael Leuschel}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {Proof Assisted Symbolic Model Checking for {B} and Event-B}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {135--150}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_8}, doi = {10.1007/978-3-319-33600-8\\_8}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/KringsL16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"39941a0d9a0b40efcd3dacf0014b8dd1","permalink":"/publication/kringsl16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/kringsl16/","section":"publication","summary":"Abstract We have implemented various symbolic model checking algorithms, like BMC, k-Induction and IC3 for B and Event-B. The high-level nature of B and Event-B accounts for complicated constraints arising in these symbolic analysis techniques.","tags":["ABZ'16"],"title":"Proof Assisted Symbolic Model Checking for B and Event-B","type":"publication"},{"authors":["Selma Azaiez","Damien Doligez","Matthieu Lemerre","Tomer Libal","Stephan Merz"],"categories":[],"content":"Abstract Executions in the PharOS real-time system are deterministic in the sense that the sequence of local states for every process is independent of the order in which processes are scheduled. The essential ingredient for achieving this property is that a temporal window of execution is associated with every instruction. Messages become visible to receiving processes only after the time window of the sending message has elapsed. We present a high-level model of PharOS in TLA+ and formally state and prove determinacy using the TLA+ Proof System.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_4.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{AzaiezDLLM16, author = {Selma Azaiez and Damien Doligez and Matthieu Lemerre and Tomer Libal and Stephan Merz}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {Proving Determinacy of the PharOS Real-Time Operating System}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {70--85}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_4}, doi = {10.1007/978-3-319-33600-8\\_4}, timestamp = {Sat, 09 Apr 2022 12:45:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/AzaiezDLLM16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"0c3be9df4986775642800ca7d0924e23","permalink":"/publication/azaiezdllm16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/azaiezdllm16/","section":"publication","summary":"Abstract Executions in the PharOS real-time system are deterministic in the sense that the sequence of local states for every process is independent of the order in which processes are scheduled.","tags":["ABZ'16"],"title":"Proving Determinacy of the PharOS Real-Time Operating System","type":"publication"},{"authors":["Alexei Iliasov","Paulius Stankaitis","David Adjepon-Yamoah","Alexander B. Romanovsky"],"categories":[],"content":"Abstract We briefly present the motivation, architecture and usage experience as well as proof statistics for a new Rodin Platform proof back-end based on the Why3 umbrella prover. Why3 offers a simple and versatile notation as a common interface to a large number of automated provers including all the leading SMT-LIB and TPTP compliant tools. The plug-in can function either in a local mode when all the provers are installed locally, or remotely as a cloud service. We discuss the experience of building the tool, the current status and the potential advantages of a cloud-hosted proof infrastructure.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_21.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{IliasovSAR16, author = {Alexei Iliasov and Paulius Stankaitis and David Adjepon{-}Yamoah and Alexander B. Romanovsky}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {Rodin Platform Why3 Plug-In}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {275--281}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_21}, doi = {10.1007/978-3-319-33600-8\\_21}, timestamp = {Mon, 05 Feb 2024 20:35:41 +0100}, biburl = {https://dblp.org/rec/conf/asm/IliasovSAR16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"cdf1f48a52af5a50cc8b93103d5d4c3d","permalink":"/publication/iliasovsar16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/iliasovsar16/","section":"publication","summary":"Abstract We briefly present the motivation, architecture and usage experience as well as proof statistics for a new Rodin Platform proof back-end based on the Why3 umbrella prover. Why3 offers a simple and versatile notation as a common interface to a large number of automated provers including all the leading SMT-LIB and TPTP compliant tools.","tags":["ABZ'16"],"title":"Rodin Platform Why3 Plug-In","type":"publication"},{"authors":["Gudmund Grov","Andrew Ireland","Maria Teresa Llano","Peter Kovacs","Simon Colton","Jeremy Gow"],"categories":[],"content":"Abstract Refinement based formal methods allow the modelling of systems through incremental steps via abstraction. Discovering the right levels of abstraction, formulating correct and meaningful invariants, and analysing faulty models are some of the challenges faced when using this technique. We propose Design Space Exploration that aims to assist a designer by automatically providing high-level modelling guidance.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_22.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{GrovILKCG16, author = {Gudmund Grov and Andrew Ireland and Maria Teresa Llano and Peter Kovacs and Simon Colton and Jeremy Gow}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {Semi-Automated Design Space Exploration for Formal Modelling}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {282--289}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_22}, doi = {10.1007/978-3-319-33600-8\\_22}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/GrovILKCG16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e4ac30970908a2f64f7f8f287c4f6af6","permalink":"/publication/grovilkcg16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/grovilkcg16/","section":"publication","summary":"Abstract Refinement based formal methods allow the modelling of systems through incremental steps via abstraction. Discovering the right levels of abstraction, formulating correct and meaningful invariants, and analysing faulty models are some of the challenges faced when using this technique.","tags":["ABZ'16"],"title":"Semi-Automated Design Space Exploration for Formal Modelling","type":"publication"},{"authors":["David Mentré"],"categories":[],"content":"Abstract We present an approach to transform SysML structural diagrams, BDD and IBD with constraints, into a B Method project skeleton. This project can then be directly used for implementation development through usual B refinement mechanism. We prototyped this approach.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_26.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Mentre16, author = {David Mentr{\\'{e}}}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {SysML2B: Automatic Tool for {B} Project Graphical Architecture Design Using SysML}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {308--311}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_26}, doi = {10.1007/978-3-319-33600-8\\_26}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Mentre16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"b164d43096d00130db5a0b13b08846de","permalink":"/publication/mentre16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/mentre16/","section":"publication","summary":"Abstract We present an approach to transform SysML structural diagrams, BDD and IBD with constraints, into a B Method project skeleton. This project can then be directly used for implementation development through usual B refinement mechanism.","tags":["ABZ'16"],"title":"SysML2B: Automatic Tool for B Project Graphical Architecture Design Using SysML","type":"publication"},{"authors":["Flavio Ferrarotti","Loredana Tec","José Maria Turull Torres"],"categories":[],"content":"Abstract Starting from Gurevich’s thesis for sequential algorithms (the so-called “sequential ASM thesis”), we propose a characterization of the behaviour of sequential algorithms enriched with reflection. That is, we present a set of postulates which we conjecture capture the fundamental properties of reflective sequential algorithms (RSAs). Then we look at the plausibility of an ASM thesis for the class of RSAs, defining a model of abstract state machine (which we call reflective ASM) that we conjecture captures the class of RSAs as defined by our postulates.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_16.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{FerrarottiTT16, author = {Flavio Ferrarotti and Loredana Tec and Jos{\\'{e}} Maria Turull Torres}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {Towards an {ASM} Thesis for Reflective Sequential Algorithms}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {244--249}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_16}, doi = {10.1007/978-3-319-33600-8\\_16}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/FerrarottiTT16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"4d04e41498da6b304ad7e4e07278d068","permalink":"/publication/ferrarottitt16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/ferrarottitt16/","section":"publication","summary":"Abstract Starting from Gurevich’s thesis for sequential algorithms (the so-called “sequential ASM thesis”), we propose a characterization of the behaviour of sequential algorithms enriched with reflection. That is, we present a set of postulates which we conjecture capture the fundamental properties of reflective sequential algorithms (RSAs).","tags":["ABZ'16"],"title":"Towards an ASM Thesis for Reflective Sequential Algorithms","type":"publication"},{"authors":["Rajiv Murali","Andrew Ireland","Gudmund Grov"],"categories":[],"content":"Abstract Use cases are a popular but informal technique used to define and analyse system behaviour. We introduce UC-B a plug-in for the Rodin platform (Event-B tool) that supports the authoring and management of use case specifications with both informal and formal components. The formal component is based on Event-B’s mathematical language. Once the behaviour of the use case is specified, UC-B automatically generates a corresponding Event-B model. The resulting model is then amenable to the Rodin verification tools that enable system level properties to be verified. By underpinning informal use case modelling with Event-B we are able to provide greater precision and formal assurance during the early stages of design.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_24.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MuraliIG16, author = {Rajiv Murali and Andrew Ireland and Gudmund Grov}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {{UC-B:} Use Case Modelling with Event-B}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {297--302}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_24}, doi = {10.1007/978-3-319-33600-8\\_24}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/MuraliIG16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"9ab2a634cd13a997a5e9c77335b1c989","permalink":"/publication/muraliig16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/muraliig16/","section":"publication","summary":"Abstract Use cases are a popular but informal technique used to define and analyse system behaviour. We introduce UC-B a plug-in for the Rodin platform (Event-B tool) that supports the authoring and management of use case specifications with both informal and formal components.","tags":["ABZ'16"],"title":"UC-B: Use Case Modelling with Event-B","type":"publication"},{"authors":["Paolo Arcaini","Silvia Bonfanti","Marcel Dausend","Angelo Gargantini","Atif Mashkoor","Alexander Raschke","Elvinia Riccobene","Patrizia Scandurra","Michael Stegmaier"],"categories":[],"content":"Abstract The paper presents our efforts in defining UASM, a unified syntax for Abstract State Machines (ASMs), based on the syntaxes of two of the main ASM frameworks, CoreASM and ASMETA, which have been adapted to accept UASM as input syntax of all their validation and verification tools.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_14.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ArcainiBDGMRRSS16, author = {Paolo Arcaini and Silvia Bonfanti and Marcel Dausend and Angelo Gargantini and Atif Mashkoor and Alexander Raschke and Elvinia Riccobene and Patrizia Scandurra and Michael Stegmaier}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {Unified Syntax for Abstract State Machines}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {231--236}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_14}, doi = {10.1007/978-3-319-33600-8\\_14}, timestamp = {Thu, 14 Oct 2021 10:31:49 +0200}, biburl = {https://dblp.org/rec/conf/asm/ArcainiBDGMRRSS16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"5007179f7d7b80b4be62d13566b1edc8","permalink":"/publication/arcainibdgmrrss16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/arcainibdgmrrss16/","section":"publication","summary":"Abstract The paper presents our efforts in defining UASM, a unified syntax for Abstract State Machines (ASMs), based on the syntaxes of two of the main ASM frameworks, CoreASM and ASMETA, which have been adapted to accept UASM as input syntax of all their validation and verification tools.","tags":["ABZ'16"],"title":"Unified Syntax for Abstract State Machines","type":"publication"},{"authors":["Dominik Hansen","David Schneider 0001","Michael Leuschel"],"categories":[],"content":"Abstract Constraint satisfaction and data validation problems can be expressed very elegantly in state-based formal methods such as B. However, is B suited for developing larger applications and are there existing tools that scale for these projects? In this paper, we present our experiences on two real-world data validation projects from different domains which are based on the B language and use ProB as the central validation tool. The first project is the validation of university timetables, and the second project is the validation of railway topologies. Based on these two projects, we present a general structure of a data validation project in B and outline common challenges along with various solutions. We also discuss possible evolutions of the B language to make it (even) more suitable for such projects.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-319-33600-8_10.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{HansenSL16, author = {Dominik Hansen and David Schneider and Michael Leuschel}, editor = {Michael J. Butler and Klaus{-}Dieter Schewe and Atif Mashkoor and Mikl{\\'{o}}s Bir{\\'{o}}}, title = {Using {B} and ProB for Data Validation Projects}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 5th International Conference, {ABZ} 2016, Linz, Austria, May 23-27, 2016, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {9675}, pages = {167--182}, publisher = {Springer}, year = {2016}, url = {https://doi.org/10.1007/978-3-319-33600-8\\_10}, doi = {10.1007/978-3-319-33600-8\\_10}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/HansenSL16.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"db718c234a68a36d0b6b4b20fb979670","permalink":"/publication/hansensl16/","publishdate":"2016-01-01T00:00:00Z","relpermalink":"/publication/hansensl16/","section":"publication","summary":"Abstract Constraint satisfaction and data validation problems can be expressed very elegantly in state-based formal methods such as B. However, is B suited for developing larger applications and are there existing tools that scale for these projects?","tags":["ABZ'16"],"title":"Using B and ProB for Data Validation Projects","type":"publication"},{"authors":["Amel Mammarue","Régine Laleau"],"categories":[],"content":"Abstract This article describes the Event-B modeling of a landing gear system of an aircraft whose complete description can be found in Boniol and Wiels (The Landing Gear System Case Study, ABZ Case Study, Communications in Computer Information Science, vol 433, Springer, Berlin, 2014). This real-life case study has been proposed by the ABZ’2014 track that took place in Toulouse, the European capital of the aeronautic industry. Our modeling is based on the Parnas and Madey’s 4-Variable Model that permits to consider the different parts of a system. These parts are incrementally introduced using the Event-B refinement technique. The entire development has been carried out with the Rodin toolset. To ensure the correctness of the different components, we use several verification techniques (animation, model checking and proof) depending on the complexity and the kind of the properties to verify. Basically, prior to the proof phase that can be tedious and complex, we use the animator ANIMB and the model checker PROB that permit to discover some trivial inconsistencies. Once no error is reported, we start the proof phase by using the Atelier B and SMT provers which we installed on Rodin. We conclude the article by drawing up some key findings of and lessons learned from this experience.\n   var url = \"\\/mammar2015sttt.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  -- Reference % BibTex @Article{Mammar2017, author=\u0026quot;Mammar, Amel and Laleau, R{\\'e}gine\u0026quot;, title=\u0026quot;Modeling a landing gear system in Event-B\u0026quot;, journal=\u0026quot;International Journal on Software Tools for Technology Transfer\u0026quot;, year=\u0026quot;2017\u0026quot;, month=\u0026quot;Apr\u0026quot;, day=\u0026quot;01\u0026quot;, volume=\u0026quot;19\u0026quot;, number=\u0026quot;2\u0026quot;, pages=\u0026quot;167--186\u0026quot;, abstract=\u0026quot;This article describes the Event-B modeling of a landing gear system of an aircraft whose complete description can be found in Boniol and Wiels (The Landing Gear System Case Study, ABZ Case Study, Communications in Computer Information Science, vol 433, Springer, Berlin, 2014). This real-life case study has been proposed by the ABZ'2014 track that took place in Toulouse, the European capital of the aeronautic industry. Our modeling is based on the Parnas and Madey's 4-Variable Model that permits to consider the different parts of a system. These parts are incrementally introduced using the Event-B refinement technique. The entire development has been carried out with the Rodin toolset. To ensure the correctness of the different components, we use several verification techniques (animation, model checking and proof) depending on the complexity and the kind of the properties to verify. Basically, prior to the proof phase that can be tedious and complex, we use the animator AnimB and the model checker ProB that permit to discover some trivial inconsistencies. Once no error is reported, we start the proof phase by using the Atelier B and SMT provers which we installed on Rodin. We conclude the article by drawing up some key findings of and lessons learned from this experience.\u0026quot;, issn=\u0026quot;1433-2787\u0026quot;, doi=\u0026quot;10.1007/s10009-015-0391-0\u0026quot;, url=\u0026quot;https://doi.org/10.1007/s10009-015-0391-0\u0026quot; }  Model Archive : Not available Presentation : Not available Used formal method : Event-B Resources and tools : Rodin, ProB Required OS : Linux, Mac, Windows Website : Not available Remarks and recommendation : No\n","date":1440201600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"301bda638f9a83a5038dde0cc2eb3adf","permalink":"/publication/mammar2015sttt/","publishdate":"2015-08-22T00:00:00Z","relpermalink":"/publication/mammar2015sttt/","section":"publication","summary":"Abstract This article describes the Event-B modeling of a landing gear system of an aircraft whose complete description can be found in Boniol and Wiels (The Landing Gear System Case Study, ABZ Case Study, Communications in Computer Information Science, vol 433, Springer, Berlin, 2014).","tags":["ABZ'14"],"title":"Modeling a landing gear system in Event-B","type":"publication"},{"authors":["Lukas Ladenberger","Dominik Hansen","Harald Wiegard","Jens Bendisposto","Michael Leuschel"],"categories":[],"content":"Abstract In this article, we present our formalization of the ABZ landing gear case study in Event-B. The development was carried out using the Rodin platform and mainly used superposition refinement to structure the specification. To validate the model, we complemented proof with animation and model checking. For the latter, we used the ProB animator and model checker. Graphical representation of the model turned out to be crucial in the development and validation of the model; this was achieved using the visualization features provided by ProB and BMotion Studio. In addition, we discuss the positive and negative aspects of the Event-B language and tools which we encountered while working on the ABZ case study.\n   var url = \"\\/ladenberger2015sttt.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  -- Reference % BibTex @Article{Ladenberger2017, author=\u0026quot;Ladenberger, Lukas and Hansen, Dominik and Wiegard, Harald and Bendisposto, Jens and Leuschel, Michael\u0026quot;, title=\u0026quot;Validation of the ABZ landing gear system using ProB\u0026quot;, journal=\u0026quot;International Journal on Software Tools for Technology Transfer\u0026quot;, year=\u0026quot;2017\u0026quot;, month=\u0026quot;Apr\u0026quot;, day=\u0026quot;01\u0026quot;, volume=\u0026quot;19\u0026quot;, number=\u0026quot;2\u0026quot;, pages=\u0026quot;187--203\u0026quot;, abstract=\u0026quot;In this article, we present our formalization of the ABZ landing gear case study in Event-B. The development was carried out using the Rodin platform and mainly used superposition refinement to structure the specification. To validate the model, we complemented proof with animation and model checking. For the latter, we used the ProB animator and model checker. Graphical representation of the model turned out to be crucial in the development and validation of the model; this was achieved using the visualization features provided by ProB and BMotion Studio. In addition, we discuss the positive and negative aspects of the Event-B language and tools which we encountered while working on the ABZ case study.\u0026quot;, issn=\u0026quot;1433-2787\u0026quot;, doi=\u0026quot;10.1007/s10009-015-0395-9\u0026quot;, url=\u0026quot;https://doi.org/10.1007/s10009-015-0395-9\u0026quot; }  Model Archive : Not available Presentation : Not available Used formal method : ProB Resources and tools : ProB Required OS : Linux Website : Not available Remarks and recommendation : No\n","date":1439596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"239238e972151ee53875cf65c45be5f5","permalink":"/publication/ladenberger2015sttt/","publishdate":"2015-08-15T00:00:00Z","relpermalink":"/publication/ladenberger2015sttt/","section":"publication","summary":"Abstract In this article, we present our formalization of the ABZ landing gear case study in Event-B. The development was carried out using the Rodin platform and mainly used superposition refinement to structure the specification.","tags":["ABZ'14"],"title":"Validation of the ABZ landing gear system using ProB","type":"publication"},{"authors":null,"categories":null,"content":"","date":1401667200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"206108f02028fa7515c2549010a398d7","permalink":"/2014/","publishdate":"2014-06-02T00:00:00Z","relpermalink":"/2014/","section":"event","summary":"4th International Conference on ASM, Alloy, B, TLA, VDM, and Z","tags":["ABZ'14"],"title":"ABZ 2014 (Toulouse, France)","type":"event"},{"authors":["Frédéric Boniol","Virginie Wiels"],"categories":[],"content":"Abstract This document presents the landing system of an aircraft. It describes the system and provides some of its requirements. We propose this case study as a benchmark for techniques and tools dedicated to the verification of behavioral properties of systems.\nDocument    var url = \"\\/data\\/abz14\\/boniol2014abz-cs.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-319-07512-9_1, author=\u0026quot;Boniol, Fr{\\'e}d{\\'e}ric and Wiels, Virginie\u0026quot;, editor=\u0026quot;Boniol, Fr{\\'e}d{\\'e}ric and Wiels, Virginie and Ait Ameur, Yamine and Schewe, Klaus-Dieter\u0026quot;, title=\u0026quot;The Landing Gear System Case Study\u0026quot;, booktitle=\u0026quot;ABZ 2014: The Landing Gear Case Study\u0026quot;, year=\u0026quot;2014\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;1--18\u0026quot;, abstract=\u0026quot;This document presents a landing gear system. It describes the system and provides some of its requirements. We propose this case study as a benchmark for techniques and tools dedicated to the verification of behavioral properties of systems.\u0026quot;, isbn=\u0026quot;978-3-319-07512-9\u0026quot; }  ","date":1399507200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"b118448cf969ef35ce827af3fdc4e3ae","permalink":"/publication/boniol2014abz-cs/","publishdate":"2014-05-08T00:00:00Z","relpermalink":"/publication/boniol2014abz-cs/","section":"publication","summary":"Abstract This document presents the landing system of an aircraft. It describes the system and provides some of its requirements. We propose this case study as a benchmark for techniques and tools dedicated to the verification of behavioral properties of systems.","tags":["ABZ'14"],"title":"The Landing Gear System Case Study","type":"publication"},{"authors":["Wen Su","Jean-Raymond Abrial"],"categories":[],"content":"Abstract This paper describes the modeling, done using the Event-B notation, of the aircraft landing gear case study that is proposed in a special track of the ABZ’2014 Conference. In the course of our development, we discovered some problems in our initial modeling approach. This has led us to propose a second approach and then a third one. Each approach is more efficient than the previous one in terms of proof obligations (roughly speaking: 2000, 1000, 500). All this will be described in this paper. We also try to go beyond this specific case study and give some thoughts about large industrial modeling.\n   var url = \"\\/su2014abz.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  -- Reference % BibTex @InProceedings{10.1007/978-3-319-07512-9_2, author=\u0026quot;Su, Wen and Abrial, Jean-Raymond\u0026quot;, editor=\u0026quot;Boniol, Fr{\\'e}d{\\'e}ric and Wiels, Virginie and Ait Ameur, Yamine and Schewe, Klaus-Dieter\u0026quot;, title=\u0026quot;Aircraft Landing Gear System: Approaches with Event-B to the Modeling of an Industrial System\u0026quot;, booktitle=\u0026quot;ABZ 2014: The Landing Gear Case Study\u0026quot;, year=\u0026quot;2014\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;19--35\u0026quot;, abstract=\u0026quot;This paper describes the modeling, done using the Event-B notation, of the aircraft landing gear case study that is proposed in a special track of the ABZ'2014 Conference. In the course of our development, we discovered some problems in our initial modeling approach. This has led us to propose a second approach and then a third one. Each approach is more efficient than the previous one in terms of proof obligations (roughly speaking: 2000, 1000, 500). All this will be described in this paper. We also try to go beyond this specific case study and give some thoughts about large industrial modeling.\u0026quot;, isbn=\u0026quot;978-3-319-07512-9\u0026quot; }  Sources   Used formal method: Event-B\n  Resources and tools: Rodin, ProB\nFor more information, please contact the authors\n  ","date":1398902400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"8181ccf75450c0d63ba809e5f421553e","permalink":"/publication/su2014abz/","publishdate":"2014-05-01T00:00:00Z","relpermalink":"/publication/su2014abz/","section":"publication","summary":"Abstract This paper describes the modeling, done using the Event-B notation, of the aircraft landing gear case study that is proposed in a special track of the ABZ’2014 Conference. In the course of our development, we discovered some problems in our initial modeling approach.","tags":["ABZ'14"],"title":"Aircraft Landing Gear System: Approaches with Event-B to the Modeling of an Industrial System","type":"publication"},{"authors":["Vitaly Savicks","Michael Butler","John Colley"],"categories":[],"content":"Abstract This work in progress presents a prototype multi-simulation environment for the Rodin platform that enables import, co-modelling and co-simulation of dynamic models and formal Event-B specifications, which can help in the design of mixed discrete-event/continuous-time systems. The proposed solution is based on the Functional Mock-up Interface standard and ProB animator for Event-B. The involved technologies and co-simulation semantics are explained, followed by a demonstration of preliminary results, obtained from a landing gear case study.\nDocument    var url = \"https:\\/\\/eprints.soton.ac.uk\\/364883\\/1\\/abz_lg_printer.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-319-07512-9_11, author=\u0026quot;Savicks, Vitaly and Butler, Michael and Colley, John\u0026quot;, editor=\u0026quot;Boniol, Fr{\\'e}d{\\'e}ric and Wiels, Virginie and Ait Ameur, Yamine and Schewe, Klaus-Dieter\u0026quot;, title=\u0026quot;Co-simulation Environment for Rodin: Landing Gear Case Study\u0026quot;, booktitle=\u0026quot;ABZ 2014: The Landing Gear Case Study\u0026quot;, year=\u0026quot;2014\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;148--153\u0026quot;, abstract=\u0026quot;This work in progress presents a prototype multi-simulation environment for the Rodin platform that enables import, co-modelling and co-simulation of dynamic models and formal Event-B specifications, which can help in the design of mixed discrete-event/continuous-time systems. The proposed solution is based on the Functional Mock-up Interface standard and ProB animator for Event-B. The involved technologies and co-simulation semantics are explained, followed by a demonstration of preliminary results, obtained from a landing gear case study.\u0026quot;, isbn=\u0026quot;978-3-319-07512-9\u0026quot; }  Sources   Used formal method: Event-B\n  Resources and tools: Rodin\nFor more information, please contact the authors\n  ","date":1398902400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"cc6e02a52fe5fee4ba680bec3fdd3dc2","permalink":"/publication/savicks2014abz/","publishdate":"2014-05-01T00:00:00Z","relpermalink":"/publication/savicks2014abz/","section":"publication","summary":"Abstract This work in progress presents a prototype multi-simulation environment for the Rodin platform that enables import, co-modelling and co-simulation of dynamic models and formal Event-B specifications, which can help in the design of mixed discrete-event/continuous-time systems.","tags":["ABZ'14"],"title":"Co-simulation Environment for Rodin: Landing Gear Case Study","type":"publication"},{"authors":["Philippe Dhaussy","Ciprian Teodorov"],"categories":[],"content":"Abstract Despite the high level of automation, the practicability of formal verification through model-checking of large models is hindered by the combinatorial explosion problem. In this paper we apply a novel context-aware verification technique to the Landing Gear System Case Study (LGS). The idea is to express and verify requirements relative to certain environmental situations. The system environment is decomposed into several independent scenarios (contexts), which are successively composed with the system during reachability analysis. These contexts are specified using a language called CDL (Context Description Language), based on activity and message sequence diagrams. The properties to be verified are specified with observer automata and attached to specific regions in the context. This approach enables an automated context-guided decomposition of the verification into smaller problems, hence effectively reducing the state-space explosion problem. In the case of the LGS this technique enabled the fully-automated decomposition of the verification into 885 smaller model-checking problems.\nDocument    var url = \"https:\\/\\/www.ensta-bretagne.fr\\/dhaussy\\/Philippe_Dhaussy_fichiers\\/Dhaussy_Papers\\/abz_3avril14.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-319-07512-9_4, author=\u0026quot;Dhaussy, Philippe and Teodorov, Ciprian\u0026quot;, editor=\u0026quot;Boniol, Fr{\\'e}d{\\'e}ric and Wiels, Virginie and Ait Ameur, Yamine and Schewe, Klaus-Dieter\u0026quot;, title=\u0026quot;Context-Aware Verification of a Landing Gear System\u0026quot;, booktitle=\u0026quot;ABZ 2014: The Landing Gear Case Study\u0026quot;, year=\u0026quot;2014\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;52--65\u0026quot;, abstract=\u0026quot;Despite the high level of automation, the practicability of formal verification through model-checking of large models is hindered by the combinatorial explosion problem. In this paper we apply a novel context-aware verification technique to the Landing Gear System Case Study (LGS) [2]. The idea is to express and verify requirements relative to certain environmental situations. The system environment is decomposed into several independent scenarios (contexts), which are successively composed with the system during reachability analysis. These contexts are specified using a language called CDL (Context Description Language), based on activity and message sequence diagrams. The properties to be verified are specified with observer automata and attached to specific regions in the context. This approach enables an automated context-guided decomposition of the verification into smaller problems, hence effectively reducing the state-space explosion problem. In the case of the LGS this technique enabled the fully-automated decomposition of the verification into 885 smaller model-checking problems.\u0026quot;, isbn=\u0026quot;978-3-319-07512-9\u0026quot; }  Sources   Used formal method: Context Description Language (CDL)\nFor more information, please contact the authors\n  ","date":1398902400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"6e72e34686f57d0e728522f128a84c11","permalink":"/publication/dhaussy2014abz/","publishdate":"2014-05-01T00:00:00Z","relpermalink":"/publication/dhaussy2014abz/","section":"publication","summary":"Abstract Despite the high level of automation, the practicability of formal verification through model-checking of large models is hindered by the combinatorial explosion problem. In this paper we apply a novel context-aware verification technique to the Landing Gear System Case Study (LGS).","tags":["ABZ'14"],"title":"Context-Aware Verification of a Landing Gear System","type":"publication"},{"authors":["Felix Kossak"],"categories":[],"content":"Abstract We present an ASM model for the case study given as a challenge for the ABZ'14 conference, which specifies the digital part of a landing gear system for aircraft. We strove to make the formal model well understandable for humans. We note inconsistencies, ambiguities and gaps in the case study and summarise our experiences during modelling and the proof of safety properties.\nDocument    var url = \"\\/data\\/abz14\\/kossak2014abz.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ABZ2014-Landing-Gear-System-Case-Study, author = {Boniol, Fr\\'ed\\'eric and Wiels, Virginie}, title = {{T}he {L}anding {G}ear {S}ystem {C}ase {S}tudy}, booktitle = {ABZ Case Study}, year = {2014}, publisher = {Springer}, series = {Communications in Computer Information Science}, volume = {433}, } @MISC{BoniolWiels2013, title = {Landing gear system}, author = {Frederic Boniol and Virginie Wiels}, year = {2013}, howpublished = {Challenge for the {ABZ}'14 conference, \\url{http://www.irit.fr/ABZ2014/landing_system.pdf}, accessed 2013-12-19} } @BOOK{BoergerStaerk2003, title = {Abstract State Machines - A Method for High-Level System Design and Analysis}, publisher = {Springer Verlag}, year = {2003}, author = {Egon B\\\u0026quot;orger and Robert St\\\u0026quot;ark} } @MISC{Kossak2014, title = {Landing Gear System: An {ASM}-based Solution for the {ABZ'14} Case Study. {Technical Report SCCH-TR-1401} with the complete model and proofs}, author = {Felix Kossak}, year = {2014}, howpublished = {\\url{http://www.scch.at/en/rse-news/landing_gear}} } @INPROCEEDINGS{KossakEtal2014, author = {Felix Kossak and Atif Mashkoor and Verena Geist and Christa Illibauer}, title = {Improving the Understandability of Formal Specifications: An Experience Report}, booktitle = {Proc. of the 20th Conf. on Requirements Engineering: Foundation for Software Quality (REFSQ'14; to appear)}, year = {2014} }  Sources   Presentation: PPT\n  Used formal method: ASM\n  Resources and tools: Paper \u0026amp; Pencil\nFor more information, please contact the authors\n  ","date":1398902400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"3fb151ad0ee91927b4a63f17c9987850","permalink":"/publication/kossak2014abz/","publishdate":"2014-05-01T00:00:00Z","relpermalink":"/publication/kossak2014abz/","section":"publication","summary":"Abstract We present an ASM model for the case study given as a challenge for the ABZ'14 conference, which specifies the digital part of a landing gear system for aircraft. We strove to make the formal model well understandable for humans.","tags":["ABZ'14"],"title":"Landing Gear System: An ASM-based Solution for the ABZ Case Study","type":"publication"},{"authors":["Bernard Berthomieu","Silvano Dal Zilio","Łukasz Fronc"],"categories":[],"content":"Abstract We describe our experience with modeling the landing gear system of an aircraft using the formal specification language Fiacre. Our model takes into account the behavior and timing properties of both the physical parts and the control software of this system. We use this formal model to check safety and real-time properties on the system but also to find a safe bound on the maximal time needed for all gears to be down and locked (assuming the absence of failures). Our approach ultimately relies on the model-checking tool Tina, that provides state-space generation and model-checking algorithms for an extension of Time Petri Nets with data and priorities.\nDocument    var url = \"https:\\/\\/www.archives-ouvertes.fr\\/hal-00967422\\/document\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-319-07512-9_8, author=\u0026quot;Berthomieu, Bernard and Dal Zilio, Silvano and Fronc, {\\L}ukasz\u0026quot;, editor=\u0026quot;Boniol, Fr{\\'e}d{\\'e}ric and Wiels, Virginie and Ait Ameur, Yamine and Schewe, Klaus-Dieter\u0026quot;, title=\u0026quot;Model-Checking Real-Time Properties of an Aircraft Landing Gear System Using Fiacre\u0026quot;, booktitle=\u0026quot;ABZ 2014: The Landing Gear Case Study\u0026quot;, year=\u0026quot;2014\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;110--125\u0026quot;, abstract=\u0026quot;We describe our experience with modeling the landing gear system of an aircraft using the formal specification language Fiacre. Our model takes into account the behavior and timing properties of both the physical parts and the control software of this system. We use this formal model to check safety and real-time properties on the system but also to find a safe bound on the maximal time needed for all gears to be down and locked (assuming the absence of failures). Our approach ultimately relies on the model-checking tool Tina, that provides state-space generation and model-checking algorithms for an extension of Time Petri Nets with data and priorities.\u0026quot;, isbn=\u0026quot;978-3-319-07512-9\u0026quot; }  Sources   Used formal method: Time Petri Nets\n  Resources and tools: Tina\nFor more information, please contact the authors\n  ","date":1398902400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"b7a0c491b135040785d10c6f55eeca23","permalink":"/publication/berthomieu2014abz/","publishdate":"2014-05-01T00:00:00Z","relpermalink":"/publication/berthomieu2014abz/","section":"publication","summary":"Abstract We describe our experience with modeling the landing gear system of an aircraft using the formal specification language Fiacre. Our model takes into account the behavior and timing properties of both the physical parts and the control software of this system.","tags":["ABZ'14"],"title":"Model-Checking Real-Time Properties of an Aircraft Landing Gear System Using Fiacre","type":"publication"},{"authors":["Amel Mammar","Régine Laleau"],"categories":[],"content":"Abstract This paper describes the Event-B modeling of the landing gear system of an aircraft whose the complete description can be found in [3]. This real-life case study has been proposed by the ABZ’2014 track that takes place in Toulouse, the European capital of the aeronautic industry. Our modeling is based on the Parnas and Madey’s 4-Variable Model that permits to consider the different parts of a system. These parts are incremently introduced using the Event-B refinement technique. The entire development has been carried out under the Rodin toolset. To validate and prove the different components, we use the Atelier B, SMT and ML provers which are plugged to Rodin.\nDocument    var url = \"http:\\/\\/www-public.imtbs-tsp.eu\\/~mammar_a\\/LandGearsModeling.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-319-07512-9_6, author=\u0026quot;Mammar, Amel and Laleau, R{\\'e}gine\u0026quot;, editor=\u0026quot;Boniol, Fr{\\'e}d{\\'e}ric and Wiels, Virginie and Ait Ameur, Yamine and Schewe, Klaus-Dieter\u0026quot;, title=\u0026quot;Modeling a Landing Gear System in Event-B\u0026quot;, booktitle=\u0026quot;ABZ 2014: The Landing Gear Case Study\u0026quot;, year=\u0026quot;2014\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;80--94\u0026quot;, abstract=\u0026quot;This paper describes the Event-B modeling of the landing gear system of an aircraft whose the complete description can be found in [3]. This real-life case study has been proposed by the ABZ'2014 track that takes place in Toulouse, the European capital of the aeronautic industry. Our modeling is based on the Parnas and Madey's 4-Variable Model that permits to consider the different parts of a system. These parts are incremently introduced using the Event-B refinement technique. The entire development has been carried out under the Rodin toolset. To validate and prove the different components, we use the Atelier B, SMT and ML provers which are plugged to Rodin.\u0026quot;, isbn=\u0026quot;978-3-319-07512-9\u0026quot; }  Sources   Used formal method: Event-B\n  Resources and tools: Rodin, ProB\nFor more information, please contact the authors\n  ","date":1398902400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"ae40ba4961285fb47d6ae1741ce377d3","permalink":"/publication/mammar2014abz/","publishdate":"2014-05-01T00:00:00Z","relpermalink":"/publication/mammar2014abz/","section":"publication","summary":"Abstract This paper describes the Event-B modeling of the landing gear system of an aircraft whose the complete description can be found in [3]. This real-life case study has been proposed by the ABZ’2014 track that takes place in Toulouse, the European capital of the aeronautic industry.","tags":["ABZ'14"],"title":"Modeling a Landing Gear System in Event-B","type":"publication"},{"authors":["Dominique Méry","Neeraj Kumar Singh"],"categories":[],"content":"Abstract This paper presents a stepwise formal development of the landing system of an aircraft. The formal models include the complex behaviour, temporal behaviour and sequence of operations of the landing gear system. The models are formalized in Event-B modeling language, and then the ProB model checker is used to verify the deadlock freedom and to validate the behaviour requirements by animating the formalized models. This case study is considered as a benchmark for techniques and tools dedicated to the verification of behavioural properties of the complex critical systems.\nDocument    var url = \"https:\\/\\/eb2all.loria.fr\\/html_files\\/files\\/landingsystem.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-319-07512-9_12, author=\u0026quot;M{\\'e}ry, Dominique and Singh, Neeraj Kumar\u0026quot;, editor=\u0026quot;Boniol, Fr{\\'e}d{\\'e}ric and Wiels, Virginie and Ait Ameur, Yamine and Schewe, Klaus-Dieter\u0026quot;, title=\u0026quot;Modeling an Aircraft Landing System in Event-B\u0026quot;, booktitle=\u0026quot;ABZ 2014: The Landing Gear Case Study\u0026quot;, year=\u0026quot;2014\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;154--159\u0026quot;, abstract=\u0026quot;This paper presents a stepwise formal development of the landing system of an aircraft. The formal models include the complex behaviour, temporal behaviour and sequence of operations of the landing gear system. The models are formalized in Event-B modeling language, and then the ProB model checker is used to verify the deadlock freedom and to validate the behaviour requirements by animating the formalized models. This case study is considered as a benchmark for techniques and tools dedicated to the verification of behavioural properties of the complex critical systems.\u0026quot;, isbn=\u0026quot;978-3-319-07512-9\u0026quot; }  Sources   Used formal method: Event-B\n  Resources and tools: Rodin, ProB\nFor more information, please contact the authors\n  ","date":1398902400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c8ee13bcb6a79b56c594ea0226dd6060","permalink":"/publication/mery2014abz/","publishdate":"2014-05-01T00:00:00Z","relpermalink":"/publication/mery2014abz/","section":"publication","summary":"Abstract This paper presents a stepwise formal development of the landing system of an aircraft. The formal models include the complex behaviour, temporal behaviour and sequence of operations of the landing gear system.","tags":["ABZ'14"],"title":"Modeling an Aircraft Landing System in Event-B","type":"publication"},{"authors":["Paolo Arcaini","Angelo Gargantini","Elvinia Riccobene"],"categories":[],"content":"Abstract The paper presents an Abstract State Machine (ASM) specification of the Landing Gear System case study, and shows how the ASMETA framework can be used to support the modeling and analysis (validation and verification) activities for developing a rigorous and correct model in terms of ASMs. We exploit the two fundamental concepts of the ASM method, i.e., the notion of ground model and the refinement principle, and we achieve model development and model analysis by the combined use of formal methods for specification and for verification.\nDocument    var url = \"https:\\/\\/cs.unibg.it\\/gargantini\\/research\\/papers\\/landingGearSystem_abz2014.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-319-07512-9_3, author=\u0026quot;Arcaini, Paolo and Gargantini, Angelo and Riccobene, Elvinia\u0026quot;, editor=\u0026quot;Boniol, Fr{\\'e}d{\\'e}ric and Wiels, Virginie and Ait Ameur, Yamine and Schewe, Klaus-Dieter\u0026quot;, title=\u0026quot;Modeling and Analyzing Using ASMs: The Landing Gear System Case Study\u0026quot;, booktitle=\u0026quot;ABZ 2014: The Landing Gear Case Study\u0026quot;, year=\u0026quot;2014\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;36--51\u0026quot;, abstract=\u0026quot;The paper presents an Abstract State Machine (ASM) specification of the Landing Gear System case study, and shows how the ASMETA framework can be used to support the modeling and analysis (validation and verification) activities for developing a rigorous and correct model in terms of ASMs. We exploit the two fundamental concepts of the ASM method, i.e., the notion of ground model and the refinement principle, and we achieve model development and model analysis by the combined use of formal methods for specification and for verification.\u0026quot;, isbn=\u0026quot;978-3-319-07512-9\u0026quot; }  Sources For more information, please contact the authors\n","date":1398902400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e53e4b254b444feaf478e1d0392c2f2a","permalink":"/publication/arcaini2014abz/","publishdate":"2014-05-01T00:00:00Z","relpermalink":"/publication/arcaini2014abz/","section":"publication","summary":"Abstract The paper presents an Abstract State Machine (ASM) specification of the Landing Gear System case study, and shows how the ASMETA framework can be used to support the modeling and analysis (validation and verification) activities for developing a rigorous and correct model in terms of ASMs.","tags":["ABZ'14"],"title":"Modeling and Analyzing Using ASMs: The Landing Gear System Case Study","type":"publication"},{"authors":["Paolo Arcaini","Angelo Gargantini","Elvinia Riccobene"],"categories":[],"content":"Abstract Formal specifications are widely used in the development of safety critical systems, as the Sensor Voting Module of the Landing Gear System. However, the conformance relationship between the formal specification and the concrete implementation must be checked. In this paper, we show a technique to formally link a Java class with its Abstract State Machine formal specification, and two approaches for checking their conformance: an offline model-based testing approach and an online runtime monitoring approach.\nDocument    var url = \"https:\\/\\/cs.unibg.it\\/gargantini\\/research\\/papers\\/votingSystem_abz2014.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-319-07512-9_7, author=\u0026quot;Arcaini, Paolo and Gargantini, Angelo and Riccobene, Elvinia\u0026quot;, editor=\u0026quot;Boniol, Fr{\\'e}d{\\'e}ric and Wiels, Virginie and Ait Ameur, Yamine and Schewe, Klaus-Dieter\u0026quot;, title=\u0026quot;Offline Model-Based Testing and Runtime Monitoring of the Sensor Voting Module\u0026quot;, booktitle=\u0026quot;ABZ 2014: The Landing Gear Case Study\u0026quot;, year=\u0026quot;2014\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;95--109\u0026quot;, abstract=\u0026quot;Formal specifications are widely used in the development of safety critical systems, as the Sensor Voting Module of the Landing Gear System. However, the conformance relationship between the formal specification and the concrete implementation must be checked. In this paper, we show a technique to formally link a Java class with its Abstract State Machine formal specification, and two approaches for checking their conformance: an offline model-based testing approach and an online runtime monitoring approach.\u0026quot;, isbn=\u0026quot;978-3-319-07512-9\u0026quot; }  Sources For more information, please contact the authors\n","date":1398902400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"389177fa55b61ddae64152d57a9c83fe","permalink":"/publication/arcaini2014abz2/","publishdate":"2014-05-01T00:00:00Z","relpermalink":"/publication/arcaini2014abz2/","section":"publication","summary":"Abstract Formal specifications are widely used in the development of safety critical systems, as the Sensor Voting Module of the Landing Gear System. However, the conformance relationship between the formal specification and the concrete implementation must be checked.","tags":["ABZ'14"],"title":"Offline Model-based Testing and Runtime Monitoring of the Sensor Voting Module","type":"publication"},{"authors":["Richard Banach"],"categories":[],"content":"Abstract A case study problem based on a set of aircraft landing gear is examined in Hybrid Event-B (an extension of Event-B that includes provision for continuously varying behaviour as well as the usual discrete changes of state). Although tool support for Hybrid Event-B is currently lacking, the complexity of the case study provides a valuable challenge for the expressivity and modelling capabilities of the formalism. The size of the case study, and in particular, the number of overtly independent subcomponents that the problem domain contains, both significantly exercise the multi-machine and coordination capabilities of Hybrid Event-B, requiring the use of novel coordination mechanisms.\nDocument    var url = \"http:\\/\\/www.cs.man.ac.uk\\/~banach\\/some.pubs\\/CEvB.LanGear.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-319-07512-9_9, author=\u0026quot;Banach, Richard\u0026quot;, editor=\u0026quot;Boniol, Fr{\\'e}d{\\'e}ric and Wiels, Virginie and Ait Ameur, Yamine and Schewe, Klaus-Dieter\u0026quot;, title=\u0026quot;The Landing Gear Case Study in Hybrid Event-B\u0026quot;, booktitle=\u0026quot;ABZ 2014: The Landing Gear Case Study\u0026quot;, year=\u0026quot;2014\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;126--141\u0026quot;, abstract=\u0026quot;A case study problem based on a set of aircraft landing gear is examined in Hybrid Event-B (an extension of Event-B that includes provision for continuously varying behaviour as well as the usual discrete changes of state). Although tool support for Hybrid Event-B is currently lacking, the complexity of the case study provides a valuable challenge for the expressivity and modelling capabilities of the formalism. The size of the case study, and in particular, the number of overtly independent subcomponents that the problem domain contains, both significantly exercise the multi-machine and coordination capabilities of Hybrid Event-B, requiring the use of novel coordination mechanisms.\u0026quot;, isbn=\u0026quot;978-3-319-07512-9\u0026quot; }  Sources   Used formal method: Hybrid Event-B\nFor more information, please contact the authors\n  ","date":1398902400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"49b76c80b240231bec2326a239bcd7c8","permalink":"/publication/banach2014abz/","publishdate":"2014-05-01T00:00:00Z","relpermalink":"/publication/banach2014abz/","section":"publication","summary":"Abstract A case study problem based on a set of aircraft landing gear is examined in Hybrid Event-B (an extension of Event-B that includes provision for continuously varying behaviour as well as the usual discrete changes of state).","tags":["ABZ'14"],"title":"The Landing Gear Case Study in Hybrid Event-B","type":"publication"},{"authors":["Dominik Hansen","Lukas Ladenberger","Harald Wiegard","Jens Bendisposto","Michael Leuschel"],"categories":[],"content":"Abstract In this paper we present our formalisation of the ABZ landing gear case study in Event-B. The development was carried out using the Rodin platform and mainly used superposition refinement to structure the specification. To validate the model we complemented proof with animation and model checking. For the latter, we used the ProB animator and model checker. Graphical representation of the model turned out to be crucial in the development and validation of the model; this was achieved using a new version of BMotion Studio integrated into ProB 2.0.\nDocument    var url = \"https:\\/\\/www3.hhu.de\\/stups\\/downloads\\/pdf\\/abz14casestudy.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @InProceedings{10.1007/978-3-319-07512-9_5, author=\u0026quot;Hansen, Dominik and Ladenberger, Lukas and Wiegard, Harald and Bendisposto, Jens and Leuschel, Michael\u0026quot;, editor=\u0026quot;Boniol, Fr{\\'e}d{\\'e}ric and Wiels, Virginie and Ait Ameur, Yamine and Schewe, Klaus-Dieter\u0026quot;, title=\u0026quot;Validation of the ABZ Landing Gear System Using ProB\u0026quot;, booktitle=\u0026quot;ABZ 2014: The Landing Gear Case Study\u0026quot;, year=\u0026quot;2014\u0026quot;, publisher=\u0026quot;Springer International Publishing\u0026quot;, address=\u0026quot;Cham\u0026quot;, pages=\u0026quot;66--79\u0026quot;, abstract=\u0026quot;In this paper we present our formalisation of the ABZ landing gear case study in Event-B. The development was carried out using the Rodin platform and mainly used superposition refinement to structure the specification. To validate the model we complemented proof with animation and model checking. For the latter, we used the ProB animator and model checker. Graphical representation of the model turned out to be crucial in the development and validation of the model; this was achieved using a new version of BMotion Studio integrated into ProB 2.0.\u0026quot;, isbn=\u0026quot;978-3-319-07512-9\u0026quot; }  Sources   Used formal method: Event-B\n  Resources and tools: ProB\nFor more information, please contact the authors\n  ","date":1398902400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"ace48d884c33eeb139de7a33011d98a2","permalink":"/publication/hansen2014abz/","publishdate":"2014-05-01T00:00:00Z","relpermalink":"/publication/hansen2014abz/","section":"publication","summary":"Abstract In this paper we present our formalisation of the ABZ landing gear case study in Event-B. The development was carried out using the Rodin platform and mainly used superposition refinement to structure the specification.","tags":["ABZ'14"],"title":"Validation of the ABZ Landing Gear System Using ProB","type":"publication"},{"authors":["Manamiary Bruno Andriamiarina","Dominique Méry","Neeraj Kumar Singh 0001"],"categories":[],"content":"Abstract Distributed systems and applications are becoming increasingly complex, due to factors such as dynamic topology, heterogeneity of components, failure detection. Therefore, they require effective techniques for guaranteeing safety, security and convergence. The self-⋆ systems are based on the idea of managing efficiently complex systems and architectures without user interaction. This paper presents a methodology for verifying distributed systems and ensuring safety and convergence requirements: Correct-by-construction and service-as-event paradigms are used for formalizing the system requirements using incremental refinement in Event B. Moreover, this paper describes a mechanized proof of correctness of the self-⋆ systems along with a case study related to the P2P-based self-healing protocol.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_9.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{AndriamiarinaMS14, author = {Manamiary Bruno Andriamiarina and Dominique M{\\'{e}}ry and Neeraj Kumar Singh}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Analysis of Self-{\\(\\star\\)} and {P2P} Systems Using Refinement}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {117--123}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_9}, doi = {10.1007/978-3-662-43652-3\\_9}, timestamp = {Thu, 10 Nov 2022 08:51:52 +0100}, biburl = {https://dblp.org/rec/conf/asm/AndriamiarinaMS14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7118a34b1a335947241712e67a920d6a","permalink":"/publication/andriamiarinams14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/andriamiarinams14/","section":"publication","summary":"Abstract Distributed systems and applications are becoming increasingly complex, due to factors such as dynamic topology, heterogeneity of components, failure detection. Therefore, they require effective techniques for guaranteeing safety, security and convergence.","tags":["ABZ'14"],"title":"Analysis of Self-⋆ and P2P Systems Using Refinement","type":"publication"},{"authors":["Rahma Ben Ayed","Simon Collart Dutilleul","Philippe Bon","Akram Idani","Yves Ledru"],"categories":[],"content":"Abstract The B method is a formal specification method and a means of formal verification and validation of safety-critical systems such as railway systems. In this short paper, we use the B4MSecure tool to transform the UML models, fulfilling requirements of European Railway Traffic Management System (ERTMS) operating rules, into B specifications in order to formally validate them.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_10.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{AyedDBIL14, author = {Rahma Ben Ayed and Simon Collart Dutilleul and Philippe Bon and Akram Idani and Yves Ledru}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {B Formal Validation of {ERTMS/ETCS} Railway Operating Rules}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {124--129}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_10}, doi = {10.1007/978-3-662-43652-3\\_10}, timestamp = {Sun, 25 Oct 2020 23:07:20 +0100}, biburl = {https://dblp.org/rec/conf/asm/AyedDBIL14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"3452e3187773954692d4d78f0e3125e0","permalink":"/publication/ayeddbil14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/ayeddbil14/","section":"publication","summary":"Abstract The B method is a formal specification method and a means of formal verification and validation of safety-critical systems such as railway systems. In this short paper, we use the B4MSecure tool to transform the UML models, fulfilling requirements of European Railway Traffic Management System (ERTMS) operating rules, into B specifications in order to formally validate them.","tags":["ABZ'14"],"title":"B Formal Validation of ERTMS/ETCS Railway Operating Rules","type":"publication"},{"authors":["Alcino Cunha"],"categories":[],"content":"Abstract Alloy is a formal modeling language based on first-order relational logic, with no native support for specifying reactive systems. We propose an extension of Alloy to allow the specification of temporal formulas using LTL, and show how they can be verified by bounded model checking with the Alloy Analyzer.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_29.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Cunha14, author = {Alcino Cunha}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Bounded Model Checking of Temporal Formulas with Alloy}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {303--308}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_29}, doi = {10.1007/978-3-662-43652-3\\_29}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Cunha14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"2f54f592b67e44c8ef1da6b0933ae801","permalink":"/publication/cunha14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/cunha14/","section":"publication","summary":"Abstract Alloy is a formal modeling language based on first-order relational logic, with no native support for specifying reactive systems. We propose an extension of Alloy to allow the specification of temporal formulas using LTL, and show how they can be verified by bounded model checking with the Alloy Analyzer.","tags":["ABZ'14"],"title":"Bounded Model Checking of Temporal Formulas with Alloy","type":"publication"},{"authors":["Ferney A. Maldonado-Lopez","Jaime Chavarriaga","Yezid Donoso"],"categories":[],"content":"Abstract In Computer Networks, several studies show that 50 to 80% of infrastructure downtime is caused by misconfiguration [1]. Current approaches are aimed to check the configuration of each device and detect conflicts, inconsistencies and bugs, other approaches focus on the specification of the intended behaviour of a network and the automatic configuration of each one of its elements [2].\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_31.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Maldonado-LopezCD14, author = {Ferney A. Maldonado{-}Lopez and Jaime Chavarriaga and Yezid Donoso}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Detecting Network Policy Conflicts Using Alloy}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {314--317}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_31}, doi = {10.1007/978-3-662-43652-3\\_31}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Maldonado-LopezCD14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"5cbc63b6ba08e80adb45fbe14f2449a8","permalink":"/publication/maldonado-lopezcd14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/maldonado-lopezcd14/","section":"publication","summary":"Abstract In Computer Networks, several studies show that 50 to 80% of infrastructure downtime is caused by misconfiguration [1]. Current approaches are aimed to check the configuration of each device and detect conflicts, inconsistencies and bugs, other approaches focus on the specification of the intended behaviour of a network and the automatic configuration of each one of its elements [2].","tags":["ABZ'14"],"title":"Detecting Network Policy Conflicts Using Alloy","type":"publication"},{"authors":["Gerhard Schellhorn","Gidon Ernst","Jörg Pfähler","Dominik Haneberg","Wolfgang Reif"],"categories":[],"content":"Abstract This paper gives an overview over the development of a formally verified file system for flash memory. We describe our approach that is based on Abstract State Machines and incremental modular refinement. Some of the important intermediate levels and the features they introduce are given. We report on the verification challenges addressed so far, and point to open problems and future work. We furthermore draw preliminary conclusions on the methodology and the required tool support.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_2.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SchellhornEPHR14, author = {Gerhard Schellhorn and Gidon Ernst and J{\\\u0026quot;{o}}rg Pf{\\\u0026quot;{a}}hler and Dominik Haneberg and Wolfgang Reif}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Development of a Verified Flash File System}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {9--24}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_2}, doi = {10.1007/978-3-662-43652-3\\_2}, timestamp = {Tue, 07 May 2024 20:13:31 +0200}, biburl = {https://dblp.org/rec/conf/asm/SchellhornEPHR14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"26735e35f3d8de128e92206ff1ffa83a","permalink":"/publication/schellhornephr14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/schellhornephr14/","section":"publication","summary":"Abstract This paper gives an overview over the development of a formally verified file system for flash memory. We describe our approach that is based on Abstract State Machines and incremental modular refinement.","tags":["ABZ'14"],"title":"Development of a Verified Flash File System","type":"publication"},{"authors":["Andreas Prinz 0001","Edel Sherratt"],"categories":[],"content":"Abstract While sequential Abstract State Machines (ASM) capture the essence of sequential computation, it is not clear that this is true of distributed ASM. This paper looks at two kinds of distributed process, one based on a global state and one based on variable access. Their commonalities are extracted and conclusions for the general understanding of distributed computation are drawn, providing integration between global state and variable access.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_18.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{PrinzS14, author = {Andreas Prinz and Edel Sherratt}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Distributed {ASM} - Pitfalls and Solutions}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {210--215}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_18}, doi = {10.1007/978-3-662-43652-3\\_18}, timestamp = {Sat, 30 Sep 2023 09:34:45 +0200}, biburl = {https://dblp.org/rec/conf/asm/PrinzS14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"15bd3d09b1ee9927365f7ea6c0b43d67","permalink":"/publication/prinzs14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/prinzs14/","section":"publication","summary":"Abstract While sequential Abstract State Machines (ASM) capture the essence of sequential computation, it is not clear that this is true of distributed ASM. This paper looks at two kinds of distributed process, one based on a global state and one based on variable access.","tags":["ABZ'14"],"title":"Distributed ASM - Pitfalls and Solutions","type":"publication"},{"authors":["Narek Nalbandyan","Uwe Glässer","Hamed Yaghoubi Shahir","Hans Wehn"],"categories":[],"content":"Abstract Situation Analysis is critical for dynamic decision-making in responding to real-world situations. The complex and intricate nature of situation analysis processes calls for evolutionary modeling and formal engineering methods that facilitate experimental validation of abstract mathematical descriptions to link the essential design aspects with rapid prototyping in early development phases. For the transition from abstract concepts and requirements to precise specifications to high level design of situation analysis systems, we derive here a generic ASM ground model as a framework for defining the precise meaning of fundamental situation analysis concepts applicable to different application domain models.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_14.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{NalbandyanGSW14, author = {Narek Nalbandyan and Uwe Gl{\\\u0026quot;{a}}sser and Hamed Yaghoubi Shahir and Hans Wehn}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Distributed Situation Analysis - {A} Formal Semantic Framework}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {158--173}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_14}, doi = {10.1007/978-3-662-43652-3\\_14}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/NalbandyanGSW14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"87f435e59a9b671c4b0bcd0aa85dbc4e","permalink":"/publication/nalbandyangsw14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/nalbandyangsw14/","section":"publication","summary":"Abstract Situation Analysis is critical for dynamic decision-making in responding to real-world situations. The complex and intricate nature of situation analysis processes calls for evolutionary modeling and formal engineering methods that facilitate experimental validation of abstract mathematical descriptions to link the essential design aspects with rapid prototyping in early development phases.","tags":["ABZ'14"],"title":"Distributed Situation Analysis - A Formal Semantic Framework","type":"publication"},{"authors":["Loïc Gammaitoni","Pierre Kelsen"],"categories":[],"content":"Abstract Alloy is a modelling language based on first order logic and relational calculus combining the precision of formal specifications with powerful automatic analysis features [4]. The automatic analysis is done by the Alloy Analyzer, a tool capable of finding instances for given Alloy models in a finite domain space using SAT solving.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_33.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{GammaitoniK14, author = {Lo{\\\u0026quot;{\\i}}c Gammaitoni and Pierre Kelsen}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Domain-Specific Visualization of Alloy Instances}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {324--327}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_33}, doi = {10.1007/978-3-662-43652-3\\_33}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/GammaitoniK14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d6732f3fd29c32c962a9a1543931b5a9","permalink":"/publication/gammaitonik14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/gammaitonik14/","section":"publication","summary":"Abstract Alloy is a modelling language based on first order logic and relational calculus combining the precision of formal specifications with powerful automatic analysis features [4]. The automatic analysis is done by the Alloy Analyzer, a tool capable of finding instances for given Alloy models in a finite domain space using SAT solving.","tags":["ABZ'14"],"title":"Domain-Specific Visualization of Alloy Instances","type":"publication"},{"authors":["Jérôme Guéry","Olivier Rolland","Joris Rehm"],"categories":[],"content":"Abstract This paper demonstrates how to introduce a fixed point arithmetic in software developed with the classical B method. The properties of this arithmetic are specified with real numbers in the AtelierB formal tool and linked to an implementation written in Ada programming language. This study has been conducted to control the loss of precision and possible overflow due to the use of fixed point arithmetic in the critical software part of a communication based train control system.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_28.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{GueryRR14, author = {J{\\'{e}}r{\\^{o}}me Gu{\\'{e}}ry and Olivier Rolland and Joris Rehm}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Fixed-Point Arithmetic Modeled in {B} Software Using Reals}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {298--302}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_28}, doi = {10.1007/978-3-662-43652-3\\_28}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/GueryRR14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"93b1b35ad1fa139f78c6d69b3f7dbd69","permalink":"/publication/gueryrr14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/gueryrr14/","section":"publication","summary":"Abstract This paper demonstrates how to introduce a fixed point arithmetic in software developed with the classical B method. The properties of this arithmetic are specified with real numbers in the AtelierB formal tool and linked to an implementation written in Ada programming language.","tags":["ABZ'14"],"title":"Fixed-Point Arithmetic Modeled in B Software Using Reals","type":"publication"},{"authors":["Inna Pereverzeva","Michael J. Butler","Asieh Salehi Fathabadi","Linas Laibinis","Elena Troubitsyna"],"categories":[],"content":"Abstract MapReduce is a powerful distributed data processing model that is currently adopted in a wide range of domains to efficiently handle large volumes of data, i.e., cope with the big data surge. In this paper, we propose an approach to formal derivation of the MapReduce framework. Our approach relies on stepwise refinement in Event-B and, in particular, the event refinement structure approach – a diagrammatic notation facilitating formal development. Our approach allows us to derive the system architecture in a systematic and well-structured way. The main principle of MapReduce is to parallelise processing of data by first mapping them to multiple processing nodes and then merging the results. To facilitate this, we formally define interdependencies between the map and reduce stages of MapReduce. This formalisation allows us to propose an alternative architectural solution that weakens blocking between the stages and, as a result, achieves a higher degree of parallelisation of MapReduce computations.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_21.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{PereverzevaBFLT14, author = {Inna Pereverzeva and Michael J. Butler and Asieh Salehi Fathabadi and Linas Laibinis and Elena Troubitsyna}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Formal Derivation of Distributed MapReduce}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {238--254}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_21}, doi = {10.1007/978-3-662-43652-3\\_21}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/PereverzevaBFLT14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"06f56704cad283e3727a6ebae285e8f9","permalink":"/publication/pereverzevabflt14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/pereverzevabflt14/","section":"publication","summary":"Abstract MapReduce is a powerful distributed data processing model that is currently adopted in a wide range of domains to efficiently handle large volumes of data, i.e., cope with the big data surge.","tags":["ABZ'14"],"title":"Formal Derivation of Distributed MapReduce","type":"publication"},{"authors":["Andreas Fürst","Thai Son Hoang","David A. Basin","Naoto Sato","Kunihiko Miyazaki"],"categories":[],"content":"Abstract We present a formal modelling approach using Abstract Data Types (ADTs) for developing large-scale systems in Event-B. The novelty of our approach is the combination of refinement and instantiation techniques to manage the complexity of systems under development. With ADTs, we model system components on an abstract level, specifying only the necessary properties of the components. At the same time, we postpone the introduction of their concrete definitions to later development steps. We evaluate our approach using a largescale case study in train control systems. The results show that our approach helps reduce system details during early development stages and leads to simpler and more automated proofs.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_20.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{FurstHBSM14, author = {Andreas F{\\\u0026quot;{u}}rst and Thai Son Hoang and David A. Basin and Naoto Sato and Kunihiko Miyazaki}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Formal System Modelling Using Abstract Data Types in Event-B}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {222--237}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_20}, doi = {10.1007/978-3-662-43652-3\\_20}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/FurstHBSM14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"28854a2f2994e6f21976aba0f7efe524","permalink":"/publication/fursthbsm14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/fursthbsm14/","section":"publication","summary":"Abstract We present a formal modelling approach using Abstract Data Types (ADTs) for developing large-scale systems in Event-B. The novelty of our approach is the combination of refinement and instantiation techniques to manage the complexity of systems under development.","tags":["ABZ'14"],"title":"Formal System Modelling Using Abstract Data Types in Event-B","type":"publication"},{"authors":["Petr N. Devyanin","Alexey V. Khoroshilov","Victor V. Kuliamin","Alexander K. Petrenko","Ilya V. Shchepetkov"],"categories":[],"content":"Abstract The paper presents a work-in-progress on formal verification of operating system security model, which integrates control of confidentiality and integrity levels with role-based access control. The main goal is to formalize completely the security model and to prove its consistency and conformance to basic correctness requirements concerning keeping levels of integrity and confidentiality. Additional goal is to perform data flow analysis of the model to check whether it can preserve security in the face of certain attacks. Alloy and Event-B were used for formalization and verification of the model. Alloy was applied to provide quick constraint-based checking and uncover various issues concerning inconsistency or incompleteness of the model. Event-B was applied for full-scale deductive verification. Both tools worked well on first steps of model development, while after certain complexity was reached Alloy began to demonstrate some scalability issues.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_30.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DevyaninKKPS14, author = {Petr N. Devyanin and Alexey V. Khoroshilov and Victor V. Kuliamin and Alexander K. Petrenko and Ilya V. Shchepetkov}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Formal Verification of {OS} Security Model with Alloy and Event-B}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {309--313}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_30}, doi = {10.1007/978-3-662-43652-3\\_30}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/DevyaninKKPS14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"eca092ee6575194b40d10b169af74c56","permalink":"/publication/devyaninkkps14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/devyaninkkps14/","section":"publication","summary":"Abstract The paper presents a work-in-progress on formal verification of operating system security model, which integrates control of confidentiality and integrity levels with role-based access control. The main goal is to formalize completely the security model and to prove its consistency and conformance to basic correctness requirements concerning keeping levels of integrity and confidentiality.","tags":["ABZ'14"],"title":"Formal Verification of OS Security Model with Alloy and Event-B","type":"publication"},{"authors":["Marcel Dausend","Alexander Raschke"],"categories":[],"content":"Abstract With the paradigm of aspect orientation, a developer is able to separate the code of so-called cross-cutting concerns from the rest of the program logic. This possibility is useful for formal specifications, too. For example, security aspects can be separated from the rest of the specification. Another use case for aspect orientation in specifications is the extension of specifications without touching the original ones. The definition of formal semantics for UML profiles without changing the original UML specification is an example for this application. This paper describes the implementation of the aspect oriented approach in Abstract State Machines. We introduce an aspect language with its syntax and formal semantics. It allows for specifying pointcuts where an original specification is augmented with aspect specification. Besides the general overview of this language extension, some ASM specific features of the realization are depicted in detail.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_15.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DausendR14, author = {Marcel Dausend and Alexander Raschke}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Introducing Aspect-Oriented Specification for Abstract State Machines}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {174--187}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_15}, doi = {10.1007/978-3-662-43652-3\\_15}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/DausendR14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"5d02aeaf0407ad6b5b40f435e7cabc98","permalink":"/publication/dausendr14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/dausendr14/","section":"publication","summary":"Abstract With the paradigm of aspect orientation, a developer is able to separate the code of so-called cross-cutting concerns from the rest of the program logic. This possibility is useful for formal specifications, too.","tags":["ABZ'14"],"title":"Introducing Aspect-Oriented Specification for Abstract State Machines","type":"publication"},{"authors":["Richard Banach"],"categories":[],"content":"Abstract We re-examine the problem of decomposing systems in Event-B. We develop a pattern for cross-cutting events and invariants that enables the core dependencies in multi-machine systems to be tracked. We give the essential verification conditions.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_23.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Banach14, author = {Richard Banach}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Invariant Guided System Decomposition}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {271--276}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_23}, doi = {10.1007/978-3-662-43652-3\\_23}, timestamp = {Mon, 03 Mar 2025 20:58:01 +0100}, biburl = {https://dblp.org/rec/conf/asm/Banach14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"72b453b875544e138d720602204d5e37","permalink":"/publication/banach14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/banach14/","section":"publication","summary":"Abstract We re-examine the problem of decomposing systems in Event-B. We develop a pattern for cross-cutting events and invariants that enables the core dependencies in multi-machine systems to be tracked. We give the essential verification conditions.","tags":["ABZ'14"],"title":"Invariant Guided System Decomposition","type":"publication"},{"authors":["Graeme Smith 0001","Qin Li 0002"],"categories":[],"content":"Abstract The formal development of multi-agent systems (MAS) may involve consideration of system functionality at three distinct levels of abstraction. The macro level focusses on the system’s overall, global behaviour, independently of how the agents of the system operate and interact. The meso level focusses on agent interactions, and the micro level on the operation of individual agents. While Object-Z with its high-level support for component-based specifications is well suited to modelling MAS at the macro and meso levels, it can become cumbersome at the micro level where the low-level mechanisms required for dealing with asynchronous communication between agents and timing constraints need to be explicitly defined. In this paper we introduce MAZE, an extension of Object-Z supporting (i) action refinement to facilitate the development process from the macro to micro level, and (ii) a number of syntactic conventions to facilitate micro-level specification. The syntactic conventions are shorthands for existing Object-Z notation and so require no redefinition of Object-Z’s semantics.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_6.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SmithL14, author = {Graeme Smith and Qin Li}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {{MAZE:} An Extension of Object-Z for Multi-Agent Systems}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {72--85}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_6}, doi = {10.1007/978-3-662-43652-3\\_6}, timestamp = {Thu, 07 Apr 2022 08:44:28 +0200}, biburl = {https://dblp.org/rec/conf/asm/SmithL14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"9f595b743d91b73c7e8d7da747f2db3f","permalink":"/publication/smithl14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/smithl14/","section":"publication","summary":"Abstract The formal development of multi-agent systems (MAS) may involve consideration of system functionality at three distinct levels of abstraction. The macro level focusses on the system’s overall, global behaviour, independently of how the agents of the system operate and interact.","tags":["ABZ'14"],"title":"MAZE: An Extension of Object-Z for Multi-Agent Systems","type":"publication"},{"authors":["José Antonio Esparza Isasa","Peter Würtz Vinther Jørgensen","Claus Ballegård Nielsen","Stefan Hallerstede"],"categories":[],"content":"Abstract Today’s embedded systems are typically battery powered devices with a limited energy budget, which makes optimal usage of energy a critical task faced by embedded system developers. One approach to making an embedded system energy-efficient is by putting its processing units (CPUs) into less energy consuming modes when their computational resources are not needed. Physical prototyping enables exploration of different strategies for energy usage by controlling the power modes of the system CPUs. This may lead to construction of many different hardware and software systems and thus impose high costs. In this paper we propose language extensions for VDM-RT that enable modelling and execution of different strategies for energy usage in embedded systems by controlling the hardware architecture and power modes of the system CPUs.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_11.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{IsasaJNH14, author = {Jos{\\'{e}} Antonio Esparza Isasa and Peter W{\\\u0026quot;{u}}rtz Vinther J{\\o}rgensen and Claus Balleg{\\aa}rd Nielsen and Stefan Hallerstede}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Modelling Energy Consumption in Embedded Systems with {VDM-RT}}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {130--135}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_11}, doi = {10.1007/978-3-662-43652-3\\_11}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/IsasaJNH14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"3fa8603b31abd02e1c06142cec2294f3","permalink":"/publication/isasajnh14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/isasajnh14/","section":"publication","summary":"Abstract Today’s embedded systems are typically battery powered devices with a limited energy budget, which makes optimal usage of energy a critical task faced by embedded system developers. One approach to making an embedded system energy-efficient is by putting its processing units (CPUs) into less energy consuming modes when their computational resources are not needed.","tags":["ABZ'14"],"title":"Modelling Energy Consumption in Embedded Systems with VDM-RT","type":"publication"},{"authors":["Gidon Ernst","Jörg Pfähler","Gerhard Schellhorn","Wolfgang Reif"],"categories":[],"content":"Abstract We describe and formalize a compositional, contract-based submachine refinement for a variant of Abstract State Machines. We motivate the approach by models of the Flash file system case study, where it is infeasible to refine a complete machine as a whole.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_16.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ErnstPSR14, author = {Gidon Ernst and J{\\\u0026quot;{o}}rg Pf{\\\u0026quot;{a}}hler and Gerhard Schellhorn and Wolfgang Reif}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Modular Refinement for Submachines of ASMs}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {188--203}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_16}, doi = {10.1007/978-3-662-43652-3\\_16}, timestamp = {Tue, 07 May 2024 20:13:31 +0200}, biburl = {https://dblp.org/rec/conf/asm/ErnstPSR14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"80ef87ac8bc5bf7c17d04e04a7e085d3","permalink":"/publication/ernstpsr14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/ernstpsr14/","section":"publication","summary":"Abstract We describe and formalize a compositional, contract-based submachine refinement for a variant of Abstract State Machines. We motivate the approach by models of the Flash file system case study, where it is infeasible to refine a complete machine as a whole.","tags":["ABZ'14"],"title":"Modular Refinement for Submachines of ASMs","type":"publication"},{"authors":["Ed Zulkoski","Chris Kleynhans","Ming-Ho Yee","Derek Rayside","Krzysztof Czarnecki 0001"],"categories":[],"content":"Abstract Software product line (SPL) engineering involves the modeling, analysis, and configuration of variability-rich systems. We improve the performance of the multi-objective optimization of SPLs in Alloy by several orders of magnitude with two techniques. First, we rewrite the model to remove binary relations that map to integers, which enables removing most of the integer atoms from the universe. SPL models often require using large bitwidths, hence the number of integer atoms in the universe can be orders of magnitude more than the other atoms. In our approach, the tuples for these integer-valued relations are computed outside the sat solver before returning the solution to the user. Second, we add a checkpointing facility to Kodkod, which allows the multi-objective optimization algorithm to reuse previously computed internal sat solver state, after backtracking. Together these result in orders of magnitude improvement in using Alloy as a multi-objective optimization tool for software product lines.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_34.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ZulkoskiKYRC14, author = {Ed Zulkoski and Chris Kleynhans and Ming{-}Ho Yee and Derek Rayside and Krzysztof Czarnecki}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Optimizing Alloy for Multi-objective Software Product Line Configuration}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {328--333}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_34}, doi = {10.1007/978-3-662-43652-3\\_34}, timestamp = {Fri, 30 Dec 2022 23:08:53 +0100}, biburl = {https://dblp.org/rec/conf/asm/ZulkoskiKYRC14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"564999c08e9f9f338e5d7c75a2c9819f","permalink":"/publication/zulkoskikyrc14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/zulkoskikyrc14/","section":"publication","summary":"Abstract Software product line (SPL) engineering involves the modeling, analysis, and configuration of variability-rich systems. We improve the performance of the multi-objective optimization of SPLs in Alloy by several orders of magnitude with two techniques.","tags":["ABZ'14"],"title":"Optimizing Alloy for Multi-objective Software Product Line Configuration","type":"publication"},{"authors":["Stefan Hallerstede"],"categories":[],"content":"Abstract Anticipation proof obligations for stated variants need to be proved in Event-B even if the variant has no variables in common with anticipated event. This often leads to models that are complicated by additional auxiliary variables and variants that need to take into account these variables. Because of such “encodings” of control flow information in the variants the corresponding proof obligations can usually not be discharged automatically. We present a new proof obligation for anticipated events that does not have this defect and prove it correct. The proof is fairly intricate due to the nondeterminism of the simulations that link refinements. An informal soundness argument suggests using a lexicographic product in the soundness proof. However, it turns out that a weaker order is required which we call quasi-lexicographic product.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_7.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Hallerstede14, author = {Stefan Hallerstede}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Quasi-Lexicographic Convergence}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {86--100}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_7}, doi = {10.1007/978-3-662-43652-3\\_7}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Hallerstede14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"b0df304d5059e73ddb934ad7c1298d2d","permalink":"/publication/hallerstede14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/hallerstede14/","section":"publication","summary":"Abstract Anticipation proof obligations for stated variants need to be proved in Event-B even if the variant has no variables in common with anticipated event. This often leads to models that are complicated by additional auxiliary variables and variants that need to take into account these variables.","tags":["ABZ'14"],"title":"Quasi-Lexicographic Convergence","type":"publication"},{"authors":["Eerke A. Boiten","Jeremy Jacob"],"categories":[],"content":"Abstract Physical means of securing information, such as sealed envelopes and scratch cards, can be used to achieve cryptographic objectives. Reasoning about this has so far been informal. We give a model of distinguishable sealed envelopes in Z, exploring design decisions and further analysis and development of such models.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_12.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BoitenJ14, author = {Eerke A. Boiten and Jeremy Jacob}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Sealed Containers in {Z}}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {136--141}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_12}, doi = {10.1007/978-3-662-43652-3\\_12}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/BoitenJ14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"59132f6715fcd34200ffeb5a00d3bccb","permalink":"/publication/boitenj14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/boitenj14/","section":"publication","summary":"Abstract Physical means of securing information, such as sealed envelopes and scratch cards, can be used to achieve cryptographic objectives. Reasoning about this has so far been informal. We give a model of distinguishable sealed envelopes in Z, exploring design decisions and further analysis and development of such models.","tags":["ABZ'14"],"title":"Sealed Containers in Z","type":"publication"},{"authors":["Egon Börger","Klaus-Dieter Schewe"],"categories":[],"content":"Abstract We define a programming language independent transaction controller and an operator which when applied to concurrent programs with shared locations turns their behavior with respect to some abstract termination criterion into a transactional behavior. We prove the correctness property that concurrent runs under the transaction controller are serialisable. We specify the transaction controller TaCtl and the operator TA in terms of Abstract State Machines. This makes TaCtl applicable to a wide range of programs and in particular provides the possibility to use it as a plug-in when specifying concurrent system components in terms of Abstract State Machines.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_13.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BorgerS14, author = {Egon B{\\\u0026quot;{o}}rger and Klaus{-}Dieter Schewe}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Specifying Transaction Control to Serialize Concurrent Program Executions}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {142--157}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_13}, doi = {10.1007/978-3-662-43652-3\\_13}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/BorgerS14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"9c4486ca7601d7051615c9e05fa3094a","permalink":"/publication/borgers14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/borgers14/","section":"publication","summary":"Abstract We define a programming language independent transaction controller and an operator which when applied to concurrent programs with shared locations turns their behavior with respect to some abstract termination criterion into a transactional behavior.","tags":["ABZ'14"],"title":"Specifying Transaction Control to Serialize Concurrent Program Executions","type":"publication"},{"authors":["Vajih Montaghami","Derek Rayside"],"categories":[],"content":"Abstract To evaluate a property of the form ‘for all x there exists some y’ with a relational model finder requires a generator axiom to force all instances of y to exist in the universe of discourse. Without the generator axiom the model finder will produce a spurious counter-example by simply not including an important instance of y. Generator axioms are generally considered to be expensive to evaluate, significantly limiting the scope of the analysis. We demonstrate that evaluating the generator axiom in a separate stage from the property results in substantial improvements in analysis speed and scalability\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_32.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MontaghamiR14, author = {Vajih Montaghami and Derek Rayside}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Staged Evaluation of Partial Instances in a Relational Model Finder}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {318--323}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_32}, doi = {10.1007/978-3-662-43652-3\\_32}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/MontaghamiR14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d9be6187e61b410594225eae921022f4","permalink":"/publication/montaghamir14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/montaghamir14/","section":"publication","summary":"Abstract To evaluate a property of the form ‘for all x there exists some y’ with a relational model finder requires a generator axiom to force all instances of y to exist in the universe of discourse.","tags":["ABZ'14"],"title":"Staged Evaluation of Partial Instances in a Relational Model Finder","type":"publication"},{"authors":["Andrew Edmunds"],"categories":[],"content":"Abstract The Event-B method, and its tools, provide a way to formally model systems; Tasking Event-B is an extension facilitating code generation. We have recently begun to explore how we can configure the code generator, for deployment on different target systems. In this paper, we describe how templates can be used to avoid hard-coding ‘boilerplate’ code, and how to merge this with code generated from the formal model. We have developed a lightweight approach, where tags (i.e. tagged mark-up) can be placed in source templates. The template-processors we introduce may be of use to other plug-in developers wishing to merge a ‘source’ text file with some generated output.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_25.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Edmunds14, author = {Andrew Edmunds}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Templates for Event-B Code Generation}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {284--289}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_25}, doi = {10.1007/978-3-662-43652-3\\_25}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Edmunds14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"6cd8885a8fbce647e8472c98f32ba6d7","permalink":"/publication/edmunds14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/edmunds14/","section":"publication","summary":"Abstract The Event-B method, and its tools, provide a way to formally model systems; Tasking Event-B is an extension facilitating code generation. We have recently begun to explore how we can configure the code generator, for deployment on different target systems.","tags":["ABZ'14"],"title":"Templates for Event-B Code Generation","type":"publication"},{"authors":["David Delahaye","Catherine Dubois","Claude Marché","David Mentré"],"categories":[],"content":"Abstract We introduce BWare, an industrial research project that aims to provide a mechanized framework to support the automated verification of proof obligations coming from the development of industrial applications using the B method and requiring high integrity. The adopted methodology consists in building a generic verification platform relying on different automated theorem provers, such as first order provers and SMT (Satisfiability Modulo Theories) solvers. Beyond the multi-tool aspect of our methodology, the originality of this project also resides in the requirement for the verification tools to produce proof objects, which are to be checked independently. In this paper, we present some preliminary results of BWare, as well as some current major lines of work.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_26.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DelahayeDMM14, author = {David Delahaye and Catherine Dubois and Claude March{\\'{e}} and David Mentr{\\'{e}}}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {The BWare Project: Building a Proof Platform for the Automated Verification of {B} Proof Obligations}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {290--293}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_26}, doi = {10.1007/978-3-662-43652-3\\_26}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/DelahayeDMM14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"3fa09e2f010e40ad1479486f6f8f6683","permalink":"/publication/delahayedmm14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/delahayedmm14/","section":"publication","summary":"Abstract We introduce BWare, an industrial research project that aims to provide a mechanized framework to support the automated verification of proof obligations coming from the development of industrial applications using the B method and requiring high integrity.","tags":["ABZ'14"],"title":"The BWare Project: Building a Proof Platform for the Automated Verification of B Proof Obligations","type":"publication"},{"authors":["Laurent Voisin","Jean-Raymond Abrial"],"categories":[],"content":"Abstract In this talk, we give an historical account of the development of the Rodin Platform during the last 10 years.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_1.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{VoisinA14, author = {Laurent Voisin and Jean{-}Raymond Abrial}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {The Rodin Platform Has Turned Ten}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {1--8}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_1}, doi = {10.1007/978-3-662-43652-3\\_1}, timestamp = {Tue, 29 Dec 2020 18:38:32 +0100}, biburl = {https://dblp.org/rec/conf/asm/VoisinA14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"1642aa7387e826b691835cfca32d8229","permalink":"/publication/voisina14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/voisina14/","section":"publication","summary":"Abstract In this talk, we give an historical account of the development of the Rodin Platform during the last 10 years.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible.","tags":["ABZ'14"],"title":"The Rodin Platform Has Turned Ten","type":"publication"},{"authors":["Elvinia Riccobene","Patrizia Scandurra"],"categories":[],"content":"Abstract This paper shows how to use multi-agent Abstract State Machines to specify self-adaptive behavior in a decentralized adaptation control system. A traffic monitoring system is taken as case study.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_17.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{RiccobeneS14, author = {Elvinia Riccobene and Patrizia Scandurra}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Towards ASM-Based Formal Specification of Self-Adaptive Systems}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {204--209}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_17}, doi = {10.1007/978-3-662-43652-3\\_17}, timestamp = {Thu, 14 Oct 2021 10:31:49 +0200}, biburl = {https://dblp.org/rec/conf/asm/RiccobeneS14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"8aa104f2dd80fefed036feeccc8d21e6","permalink":"/publication/riccobenes14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/riccobenes14/","section":"publication","summary":"Abstract This paper shows how to use multi-agent Abstract State Machines to specify self-adaptive behavior in a decentralized adaptation control system. A traffic monitoring system is taken as case study.","tags":["ABZ'14"],"title":"Towards ASM-Based Formal Specification of Self-Adaptive Systems","type":"publication"},{"authors":["Michael Leuschel","David Schneider 0001"],"categories":[],"content":"Abstract We argue that B is a good language to conveniently express a wide range of constraint satisfaction problems. We also show that some problems can be solved quite effectively by the ProB tool. We illustrate our claim on several examples, such as the jobs puzzle - for which we solve the challenge set out by Shapiro. Here we show that the B formalization is both very close to the natural language specification and can still be solved efficiently by ProB. Our approach is particularly interesting when a high assurance of correctness is required. Indeed, compared to other existing approaches and tools, validation and double checking of solutions is available for ProB and formal proof can be applied to establish important properties or provide an unambiguous semantics to the problem specification.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_8.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{LeuschelS14, author = {Michael Leuschel and David Schneider}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Towards {B} as a High-Level Constraint Modelling Language - Solving the Jobs Puzzle Challenge}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {101--116}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_8}, doi = {10.1007/978-3-662-43652-3\\_8}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/LeuschelS14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"b24f85de406cb4a5d7d0801ae7c64556","permalink":"/publication/leuschels14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/leuschels14/","section":"publication","summary":"Abstract We argue that B is a good language to conveniently express a wide range of constraint satisfaction problems. We also show that some problems can be solved quite effectively by the ProB tool.","tags":["ABZ'14"],"title":"Towards B as a High-Level Constraint Modelling Language - Solving the Jobs Puzzle Challenge","type":"publication"},{"authors":["Dominik Hansen","Michael Leuschel"],"categories":[],"content":"Abstract The state-based formal methods B and TLA + share the common base of predicate logic, arithmetic and set theory. However, there are still considerable differences, such as the way to specify state transitions, the different approaches to typing, and the available tool support. In this paper, we present a translation from B to TLA + to validate B specifications using the model checker TLC. We provide translation rules for almost all constructs of B, in particular for those which are not built-in in TLA + . The translation also includes many adaptations and optimizations to allow efficient checking by TLC. Moreover, we present a way to validate liveness properties for B specifications under fairness conditions. Our implemented translator, Tlc4B, automatically translates a B specification to TLA + , invokes the model checker TLC, and translates the results back to B. We use ProB to double check the counter examples produced by TLC and replay them in the ProB animator. We also present a series of case studies and benchmark tests comparing Tlc4B and ProB.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_4.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{HansenL14, author = {Dominik Hansen and Michael Leuschel}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Translating {B} to {TLA} + for Validation with {TLC}}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {40--55}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_4}, doi = {10.1007/978-3-662-43652-3\\_4}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/HansenL14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f5436e7cdb271cbcd07046e13e55c158","permalink":"/publication/hansenl14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/hansenl14/","section":"publication","summary":"Abstract The state-based formal methods B and TLA + share the common base of predicate logic, arithmetic and set theory. However, there are still considerable differences, such as the way to specify state transitions, the different approaches to typing, and the available tool support.","tags":["ABZ'14"],"title":"Translating B to TLA + for Validation with TLC","type":"publication"},{"authors":["Sylvain Conchon","Mohamed Iguernelala"],"categories":[],"content":"Abstract In this paper, we present recent developments in the Alt-Ergo SMT-solver to efficiently discharge proof obligations (POs) generated by Atelier B. This includes a new plugin architecture to facilitate experiments with different SAT engines, new heuristics to handle quantified formulas, and important modifications in its internal data structures to boost performances of core decision procedures. Experiments realized on more than 10,000 POs generated from industrial B projects show significant improvements.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_27.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ConchonI14, author = {Sylvain Conchon and Mohamed Iguernelala}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Tuning the Alt-Ergo {SMT} Solver for {B} Proof Obligations}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {294--297}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_27}, doi = {10.1007/978-3-662-43652-3\\_27}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/ConchonI14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d49ca8aba55988cd7f1f362002a20bde","permalink":"/publication/conchoni14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/conchoni14/","section":"publication","summary":"Abstract In this paper, we present recent developments in the Alt-Ergo SMT-solver to efficiently discharge proof obligations (POs) generated by Atelier B. This includes a new plugin architecture to facilitate experiments with different SAT engines, new heuristics to handle quantified formulas, and important modifications in its internal data structures to boost performances of core decision procedures.","tags":["ABZ'14"],"title":"Tuning the Alt-Ergo SMT Solver for B Proof Obligations","type":"publication"},{"authors":["Tsutomu Kobayashi","Fuyuki Ishikawa","Shinichi Honiden"],"categories":[],"content":"Abstract Event-B provides a promising feature of refinement to gradually construct a comprehensive specification of a complex system including various aspects. It has unique difficulties to design complexity mitigation, while obeying Event-B consistency rules, among the potentially large possibilities of refinement plans. However, despite of the difficulties, existing studies on specific examples or high-level and intuitive guidelines are missing clear rationales, as well as principles, guidelines or methods supported by the rationales. In response to this problem, this paper presents a method for refinement planning from an informal/semi-formal specification. By defining primitive rationales, the method can eliminate undesirable plans such as the ones failing to mitigate the complexity. In a case study on a popular example from a book, we derived an enough small number of valid plans only by using the general and essential rationales while explaining the one presented in the book.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_24.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{KobayashiIH14, author = {Tsutomu Kobayashi and Fuyuki Ishikawa and Shinichi Honiden}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Understanding and Planning Event-B Refinement through Primitive Rationales}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {277--283}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_24}, doi = {10.1007/978-3-662-43652-3\\_24}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/KobayashiIH14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"4b552f63da686ab4402c7f4d3c0029f3","permalink":"/publication/kobayashiih14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/kobayashiih14/","section":"publication","summary":"Abstract Event-B provides a promising feature of refinement to gradually construct a comprehensive specification of a complex system including various aspects. It has unique difficulties to design complexity mitigation, while obeying Event-B consistency rules, among the potentially large possibilities of refinement plans.","tags":["ABZ'14"],"title":"Understanding and Planning Event-B Refinement through Primitive Rationales","type":"publication"},{"authors":["Nghi Huynh","Marc Frappier","Amel Mammar","Régine Laleau","Jules Desharnais"],"categories":[],"content":"Abstract We validate the RBAC ANSI 2012 standard using the B method. Numerous problems are identified: logical errors, inconsistencies, ambiguities, typing errors, missing preconditions, invariant violation, inappropriate specification notation. A clean version of the standard written in the B notation is proposed. We argue that the ad hoc mathematical notation used in the standard is inappropriate and we propose that a more methodological and tool-supported approach must definitely be used for writing standards, in order to avoid the issues identified in the paper. Human reviewing is insufficient to produce error-free international standards.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_22.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{HuynhFMLD14, author = {Nghi Huynh and Marc Frappier and Amel Mammar and R{\\'{e}}gine Laleau and Jules Desharnais}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Validating the {RBAC} {ANSI} 2012 Standard Using {B}}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {255--270}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_22}, doi = {10.1007/978-3-662-43652-3\\_22}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/HuynhFMLD14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"54bb4d6f44e78e81b589d4d41203326b","permalink":"/publication/huynhfmld14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/huynhfmld14/","section":"publication","summary":"Abstract We validate the RBAC ANSI 2012 standard using the B method. Numerous problems are identified: logical errors, inconsistencies, ambiguities, typing errors, missing preconditions, invariant violation, inappropriate specification notation. A clean version of the standard written in the B notation is proposed.","tags":["ABZ'14"],"title":"Validating the RBAC ANSI 2012 Standard Using B","type":"publication"},{"authors":["Simone Zenzaro","Vincenzo Gervasi","Jacopo Soldani"],"categories":[],"content":"Abstract We describe WebASM, a web-based environment that embeds the CoreASM execution engine in a web page. WebASM provides several advantages to specification writers: (1) complex behaviour expressed via ASM can be made visible by using the full power of the web-based presentation layer; (2) ASM specifications can be edited and run interactively via any web browser; (3) the full CoreASM environment is made available via zero-install deployment, thus eliminating a major barrier to the adoption of the language. In this paper, we briefly outline the technicalities of the approach, present an example, and survey possible applications of WebASM.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_19.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ZenzaroGS14, author = {Simone Zenzaro and Vincenzo Gervasi and Jacopo Soldani}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {WebASM: An Abstract State Machine Execution Environment for the Web}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {216--221}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_19}, doi = {10.1007/978-3-662-43652-3\\_19}, timestamp = {Sun, 25 Oct 2020 23:07:20 +0100}, biburl = {https://dblp.org/rec/conf/asm/ZenzaroGS14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"a2d1fca657facf1d0d7610ca427f4f0e","permalink":"/publication/zenzarogs14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/zenzarogs14/","section":"publication","summary":"Abstract We describe WebASM, a web-based environment that embeds the CoreASM execution engine in a web page. WebASM provides several advantages to specification writers: (1) complex behaviour expressed via ASM can be made visible by using the full power of the web-based presentation layer; (2) ASM specifications can be edited and run interactively via any web browser; (3) the full CoreASM environment is made available via zero-install deployment, thus eliminating a major barrier to the adoption of the language.","tags":["ABZ'14"],"title":"WebASM: An Abstract State Machine Execution Environment for the Web","type":"publication"},{"authors":["Chris Newcombe"],"categories":[],"content":"Abstract Since 2011, engineers at Amazon have been using TLA + to help solve difficult design problems in critical systems. This paper describes the reasons why we chose TLA + instead of other methods, and areas in which we would welcome further progress.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_3.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Newcombe14, author = {Chris Newcombe}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {Why Amazon Chose {TLA} +}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {25--39}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_3}, doi = {10.1007/978-3-662-43652-3\\_3}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Newcombe14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"bfa3ea447be50255b63f76786c77bfa4","permalink":"/publication/newcombe14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/newcombe14/","section":"publication","summary":"Abstract Since 2011, engineers at Amazon have been using TLA + to help solve difficult design problems in critical systems. This paper describes the reasons why we chose TLA + instead of other methods, and areas in which we would welcome further progress.","tags":["ABZ'14"],"title":"Why Amazon Chose TLA +","type":"publication"},{"authors":["Aleksandar Milicevic","Ido Efrati","Daniel Jackson 0001"],"categories":[],"content":"Abstract We present αRby—an embedding of the Alloy language in Ruby—and demonstrate the benefits of having a declarative modeling language (backed by an automated solver) embedded in a traditional object-oriented imperative programming language. This approach aims to bring these two distinct paradigms (imperative and declarative) together in a novel way. We argue that having the other paradigm available within the same language is beneficial to both the modeling community of Alloy users and the object-oriented community of Ruby programmers. In this paper, we primarily focus on the benefits for the Alloy community, namely, how αRby provides elegant solutions to several well-known, outstanding problems: (1) mixed execution, (2) specifying partial instances, (3) staged model finding.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-662-43652-3_5.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MilicevicEJ14, author = {Aleksandar Milicevic and Ido Efrati and Daniel Jackson}, editor = {Yamine A{\\\u0026quot;{\\i}}t Ameur and Klaus{-}Dieter Schewe}, title = {{\\(\\alpha\\)}Rby - An Embedding of Alloy in Ruby}, booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 4th International Conference, {ABZ} 2014, Toulouse, France, June 2-6, 2014. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {8477}, pages = {56--71}, publisher = {Springer}, year = {2014}, url = {https://doi.org/10.1007/978-3-662-43652-3\\_5}, doi = {10.1007/978-3-662-43652-3\\_5}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/MilicevicEJ14.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f50d4f94da4702383d4ea0e0341b4448","permalink":"/publication/milicevicej14/","publishdate":"2014-01-01T00:00:00Z","relpermalink":"/publication/milicevicej14/","section":"publication","summary":"Abstract We present αRby—an embedding of the Alloy language in Ruby—and demonstrate the benefits of having a declarative modeling language (backed by an automated solver) embedded in a traditional object-oriented imperative programming language.","tags":["ABZ'14"],"title":"αRby - An Embedding of Alloy in Ruby","type":"publication"},{"authors":null,"categories":null,"content":"","date":1340064e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f791e4072e6f8257d08b701cbe65acb4","permalink":"/2012/","publishdate":"2012-06-19T00:00:00Z","relpermalink":"/2012/","section":"event","summary":"3rd International Conference on ASM, Alloy, B, VDM, and Z","tags":["ABZ'12"],"title":"ABZ 2012 (Pisa, Italy)","type":"event"},{"authors":["Gintautas Sulskus","Michael Poppleton"],"categories":[],"content":"Abstract Formal methods are used for the specification and verification of software and hardware systems. One class of systems interacts with the outside world through sensors and actuators, and may include nondeterminism from hardware faults or environmental inputs, making modelling more complex.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_35.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SulskusP12, author = {Gintautas Sulskus and Michael Poppleton}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {A Pattern for Modelling Fault Tolerant Systems in Event-B}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {373--376}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_35}, doi = {10.1007/978-3-642-30885-7\\_35}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/SulskusP12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7e36d8a2cd8e6e54890c14ddd16a7cf4","permalink":"/publication/sulskusp12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/sulskusp12/","section":"publication","summary":"Abstract Formal methods are used for the specification and verification of software and hardware systems. One class of systems interacts with the outside world through sensors and actuators, and may include nondeterminism from hardware faults or environmental inputs, making modelling more complex.","tags":["ABZ'12"],"title":"A Pattern for Modelling Fault Tolerant Systems in Event-B","type":"publication"},{"authors":["Thiago C. de Sousa","Paulo Sérgio Muniz Silva","Colin F. Snook"],"categories":[],"content":"Abstract Event-B is a formal method that allows flexible modelling and refinement of systems. However, it is hard to convince developers to adopt it because they are not used to mathematical models and it doesn’t provide any practical refinement method. On the other hand, UML has become the de facto standard for software modelling since it provides an easy graphical notation and nowadays it is supported by many practical process such as ICONIX. In this paper we propose a method for Event-B refinement based on a diffused UML-driven development process. So far, we have defined the steps of the method and the translation of most of the artifacts presented in ICONIX to Event-B.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_31.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SousaSS12, author = {Thiago C. de Sousa and Paulo S{\\'{e}}rgio Muniz Silva and Colin F. Snook}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {A Practical Event-B Refinement Method Based on a UML-Driven Development Process}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {357--360}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_31}, doi = {10.1007/978-3-642-30885-7\\_31}, timestamp = {Mon, 03 Jan 2022 22:35:01 +0100}, biburl = {https://dblp.org/rec/conf/asm/SousaSS12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"dd28c29c7e985106b18597937e0a13d8","permalink":"/publication/sousass12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/sousass12/","section":"publication","summary":"Abstract Event-B is a formal method that allows flexible modelling and refinement of systems. However, it is hard to convince developers to adopt it because they are not used to mathematical models and it doesn’t provide any practical refinement method.","tags":["ABZ'12"],"title":"A Practical Event-B Refinement Method Based on a UML-Driven Development Process","type":"publication"},{"authors":["Raffaela Mirandola","Pasqualina Potena","Patrizia Scandurra"],"categories":[],"content":"Abstract According to the vision of Design for Reliability, software reliability has to be considered in all the activities within the software development life cycle. In particular, writing formal specifications, like other activities in software development, is error-prone, especially for large-scale systems. This paper presents a reliability prediction method for Abstract State Machines specifications. The method considers the internal structure of an ASM by computing its reliability based on the reliabilities calculated inductively along the call tree of the ASM rules and the structure of the rule bodies.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_26.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MirandolaPS12, author = {Raffaela Mirandola and Pasqualina Potena and Patrizia Scandurra}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {A Reliability Prediction Method for Abstract State Machines}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {336--340}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_26}, doi = {10.1007/978-3-642-30885-7\\_26}, timestamp = {Thu, 14 Oct 2021 10:31:49 +0200}, biburl = {https://dblp.org/rec/conf/asm/MirandolaPS12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"57369333d373184b0796691bee591b34","permalink":"/publication/mirandolaps12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/mirandolaps12/","section":"publication","summary":"Abstract According to the vision of Design for Reliability, software reliability has to be considered in all the activities within the software development life cycle. In particular, writing formal specifications, like other activities in software development, is error-prone, especially for large-scale systems.","tags":["ABZ'12"],"title":"A Reliability Prediction Method for Abstract State Machines","type":"publication"},{"authors":["Cliff B. Jones","Matthew J. Lovert","L. Jason Steggles"],"categories":[],"content":"Abstract Specifications of programs frequently involve operators and functions that are not defined over all of their (syntactic) domains. Proofs about specifications –and those to discharge proof obligations that arise in justifying steps of design– must be based on formal rules. Since classical logic deals only with defined values, some extra thought is required. There are several ways of handling terms that can fail to denote a value — this paper provides a semantically based comparison of three of the best known approaches. In addition, some pointers are given to further alternatives.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_18.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{JonesLS12, author = {Cliff B. Jones and Matthew J. Lovert and L. Jason Steggles}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {A Semantic Analysis of Logics That Cope with Partial Terms}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {252--265}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_18}, doi = {10.1007/978-3-642-30885-7\\_18}, timestamp = {Mon, 03 Mar 2025 20:58:01 +0100}, biburl = {https://dblp.org/rec/conf/asm/JonesLS12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"ea13dd4a1daf80dd6c1651437e4ef3e2","permalink":"/publication/jonesls12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/jonesls12/","section":"publication","summary":"Abstract Specifications of programs frequently involve operators and functions that are not defined over all of their (syntactic) domains. Proofs about specifications –and those to discharge proof obligations that arise in justifying steps of design– must be based on formal rules.","tags":["ABZ'12"],"title":"A Semantic Analysis of Logics That Cope with Partial Terms","type":"publication"},{"authors":["Klaus-Dieter Schewe","Qing Wang 0002"],"categories":[],"content":"Abstract We present an idea how to simplify Gurevich’s parallel ASM thesis. The key idea is to modify only the bounded exploration postulate from the sequential ASM thesis by allowing also non-ground comprehension terms. The idea arises from comparison with work on ASM foundations of database transformations.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_27.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ScheweW12, author = {Klaus{-}Dieter Schewe and Qing Wang}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {A Simplified Parallel {ASM} Thesis}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {341--344}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_27}, doi = {10.1007/978-3-642-30885-7\\_27}, timestamp = {Sun, 02 Oct 2022 15:55:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/ScheweW12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"78cd098c1491461c0f4f8e3a1dff70a8","permalink":"/publication/schewew12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/schewew12/","section":"publication","summary":"Abstract We present an idea how to simplify Gurevich’s parallel ASM thesis. The key idea is to modify only the bounded exploration postulate from the sequential ASM thesis by allowing also non-ground comprehension terms.","tags":["ABZ'12"],"title":"A Simplified Parallel ASM Thesis","type":"publication"},{"authors":["Chris Marriott","Frank Zeyda","Ana Cavalcanti 0001"],"categories":[],"content":"Abstract Previous work described how to translate Simulink control law diagrams into Circus specifications to facilitate verification by refinement. This is not a trivial task; several tools have been developed to automate parts of the translation. This paper introduces a new tool chain that extends and integrates existing technology to cover the entire translation and cater for a larger set of diagrams. Our contributions include the integration of data types, generic definitions, and extension of the technique to model action and enabled subsystems. The tool chain has been validated using an industrial case study.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_21.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MarriottZC12, author = {Chris Marriott and Frank Zeyda and Ana Cavalcanti}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {A Tool Chain for the Automatic Generation of Circus Specifications of Simulink Diagrams}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {294--307}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_21}, doi = {10.1007/978-3-642-30885-7\\_21}, timestamp = {Mon, 05 Feb 2024 20:35:41 +0100}, biburl = {https://dblp.org/rec/conf/asm/MarriottZC12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c5ec12dceddbae964644f00b27dc017d","permalink":"/publication/marriottzc12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/marriottzc12/","section":"publication","summary":"Abstract Previous work described how to translate Simulink control law diagrams into Circus specifications to facilitate verification by refinement. This is not a trivial task; several tools have been developed to automate parts of the translation.","tags":["ABZ'12"],"title":"A Tool Chain for the Automatic Generation of Circus Specifications of Simulink Diagrams","type":"publication"},{"authors":["Roland Lezuo","Andreas Krall"],"categories":[],"content":"Abstract For safety critical embedded systems the correctness of the processor, toolchain and compiler is an important issue. Translation validation is one approach for compiler verification. A common semantic framework to represent source and target language is needed and Abstract State Machines (ASMs) are a well suited and established method. In this paper we present a method to show correctness of instruction selection by performing fully automated simulation proofs over symbolic execution traces of state transformations using an automated first-order theorem prover. We applied this approach to an industrial-strength compiler and created the ASM models in such a way that we are able to reuse them to create a cycle-accurate simulator. To achieve fast simulation we compile the ASM models to C++ and present the compilation scheme in this paper. Finally we present our preliminary results which indicate that a unified ASM model is sufficient for proving correct instruction selection and generating efficient cycle-accurate simulators.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_24.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{LezuoK12, author = {Roland Lezuo and Andreas Krall}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {A Unified Processor Model for Compiler Verification and Simulation Using {ASM}}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {327--330}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_24}, doi = {10.1007/978-3-642-30885-7\\_24}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/LezuoK12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e9c189a3fb5f36f28f4a6f91fc4992d4","permalink":"/publication/lezuok12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/lezuok12/","section":"publication","summary":"Abstract For safety critical embedded systems the correctness of the processor, toolchain and compiler is an important issue. Translation validation is one approach for compiler verification. A common semantic framework to represent source and target language is needed and Abstract State Machines (ASMs) are a well suited and established method.","tags":["ABZ'12"],"title":"A Unified Processor Model for Compiler Verification and Simulation Using ASM","type":"publication"},{"authors":["Ting Wang","Dongyao Ji"],"categories":[],"content":"Abstract In this paper, we use Alloy Analyzer, a fully automatic checker, to detect vulnerabilities in the multicast key management protocol proposed by Tanaka and Sato, and discover some previously unknown attacks. We model an active intruder in Alloy, and use Alloy Analyzer to test whether the active intruder can successfully attack the protocol. In this analysis, we check four critical properties that should be satisfied by any secure multicast protocol. However, none of these properties are satisfied. The protocol cannot resist the active intruder. Two unknown flaws caused by the active intruder are disclosed, and another two flaws found by CORAL are identified.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_12.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{WangJ12, author = {Ting Wang and Dongyao Ji}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Active Attacking Multicast Key Management Protocol Using Alloy}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {164--177}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_12}, doi = {10.1007/978-3-642-30885-7\\_12}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/WangJ12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"0dfc5a7ee27d18e5e042fa1628272e8b","permalink":"/publication/wangj12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/wangj12/","section":"publication","summary":"Abstract In this paper, we use Alloy Analyzer, a fully automatic checker, to detect vulnerabilities in the multicast key management protocol proposed by Tanaka and Sato, and discover some previously unknown attacks.","tags":["ABZ'12"],"title":"Active Attacking Multicast Key Management Protocol Using Alloy","type":"publication"},{"authors":["Vincenzo Gervasi"],"categories":[],"content":"Abstract We define an abstract standards-compliant web browser model. The model focuses on those parts of the browser behaviour which are most relevant for the deployment and execution of web applications, such as interaction with a scripting language (here, ECMAScript), cookies, and asynchronous behaviour of the network layer, while hiding other aspects, such as page navigation and presentational issues. We use a multi-agent Abstract State Machine as our formal model, showing how the browser behaviour can be partitioned into a number of distinct components, and specifying precisely their interactions. The specification can also be used as basis to prove consistency properties of common frameworks for web applications.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_6.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Gervasi12, author = {Vincenzo Gervasi}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {An {ASM} Model of Concurrency in a Web Browser}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {79--93}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_6}, doi = {10.1007/978-3-642-30885-7\\_6}, timestamp = {Sun, 25 Oct 2020 23:07:20 +0100}, biburl = {https://dblp.org/rec/conf/asm/Gervasi12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"6588ad0e91aebe5e302b02c1d7e2e7bd","permalink":"/publication/gervasi12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/gervasi12/","section":"publication","summary":"Abstract We define an abstract standards-compliant web browser model. The model focuses on those parts of the browser behaviour which are most relevant for the deployment and execution of web applications, such as interaction with a scripting language (here, ECMAScript), cookies, and asynchronous behaviour of the network layer, while hiding other aspects, such as page navigation and presentational issues.","tags":["ABZ'12"],"title":"An ASM Model of Concurrency in a Web Browser","type":"publication"},{"authors":["Richard Banach","Huibiao Zhu","Wen Su","Xiaofeng Wu"],"categories":[],"content":"Abstract While many systems are naturally viewed as the interaction between a controller subsystem and a controlled, or plant subsystem, they are often most easily understood and designed monolithically. A practical implementation needs to separate controller from plant. We study the problem of when a monolithic ASM system can be split into controller and plant subsystems along syntactic lines derived from variables’ natural affiliations. We give restrictions that enable the split to be carried out cleanly, and we give conditions that ensure that the resulting pair of controller and plant subsystems have the same behaviours as the original design. We illustrate the theory with a case study concerning eating with chopsticks. This leads to an extension of controller synthesis for continuous ASM systems, which are briefly covered. The case study is then extended into the continuous sphere.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_4.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BanachZSW12, author = {Richard Banach and Huibiao Zhu and Wen Su and Xiaofeng Wu}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {{ASM} and Controller Synthesis}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {51--64}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_4}, doi = {10.1007/978-3-642-30885-7\\_4}, timestamp = {Mon, 03 Mar 2025 20:58:01 +0100}, biburl = {https://dblp.org/rec/conf/asm/BanachZSW12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"27d6a5c352682cd784d604afc9208bea","permalink":"/publication/banachzsw12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/banachzsw12/","section":"publication","summary":"Abstract While many systems are naturally viewed as the interaction between a controller subsystem and a controlled, or plant subsystem, they are often most easily understood and designed monolithically. A practical implementation needs to separate controller from plant.","tags":["ABZ'12"],"title":"ASM and Controller Synthesis","type":"publication"},{"authors":["Claus Ballegaard Nielsen","Kenneth Lausdahl","Peter Gorm Larsen"],"categories":[],"content":"Abstract Formal methods have been used and successfully applied to a wide range of industrial applications for many years. However formal methods can be difficult to comprehend for outsiders and the link of formal models and external subsystems which are not modelled can be unclear. In this paper we present an approach which allows formal models to be more easily shared with external stakeholders and enables integration with external code. We demonstrate how an existing interpreter for an executable subset of VDM is extended enabling the combination of formal models with executable code. This eases the way in which a formal model can communicate with an external implementation or be used in graphical prototyping. A small case study is used to demonstrate how the approach can be utilized. In this paper the technique is used to combine VDM and Java, but the principles presented can be seen as a general approach for expanding the capabilities of formal modelling tools with interpretation capabilities.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_19.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{NielsenLL12, author = {Claus Ballegaard Nielsen and Kenneth Lausdahl and Peter Gorm Larsen}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Combining {VDM} with Executable Code}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {266--279}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_19}, doi = {10.1007/978-3-642-30885-7\\_19}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/NielsenLL12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"faed147eceaf32f52a5f5d7c33e5defa","permalink":"/publication/nielsenll12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/nielsenll12/","section":"publication","summary":"Abstract Formal methods have been used and successfully applied to a wide range of industrial applications for many years. However formal methods can be difficult to comprehend for outsiders and the link of formal models and external subsystems which are not modelled can be unclear.","tags":["ABZ'12"],"title":"Combining VDM with Executable Code","type":"publication"},{"authors":["Richard Banach","Huibiao Zhu","Wen Su","Xiaofeng Wu"],"categories":[],"content":"Abstract The ASM framework is extended to include continuously varying quantities as well as conventional discretely changing ones. This opens the door to the more faithful modeling of many scenarios where digital systems have to interact with the continuously varying physical world. Transitions in the extended framework are thus either moded (for discontinuous changing quantities), or pliant (for smoothly changing quantities). Refinement and retrenchment are defined in the extended context. The framework is used to develop a fragment of a simple system for the sensing problem for cardiac pacemakers, in the context of the pacemaker verification challenge.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_5.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BanachZSW12a, author = {Richard Banach and Huibiao Zhu and Wen Su and Xiaofeng Wu}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Continuous ASM, and a Pacemaker Sensing Fragment}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {65--78}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_5}, doi = {10.1007/978-3-642-30885-7\\_5}, timestamp = {Mon, 03 Mar 2025 20:58:01 +0100}, biburl = {https://dblp.org/rec/conf/asm/BanachZSW12a.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"8dbb193e9ba3e7cde94dc996ee6ea505","permalink":"/publication/banachzsw12a/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/banachzsw12a/","section":"publication","summary":"Abstract The ASM framework is extended to include continuously varying quantities as well as conventional discretely changing ones. This opens the door to the more faithful modeling of many scenarios where digital systems have to interact with the continuously varying physical world.","tags":["ABZ'12"],"title":"Continuous ASM, and a Pacemaker Sensing Fragment","type":"publication"},{"authors":["Richard Banach","Huibiao Zhu","Wen Su","Xiaofeng Wu"],"categories":[],"content":"Abstract Including provision for continuously varying behaviour as well as discrete state change is considered for Event-B. An extension of Event-B is sketched that accommodates continuous events (called pliant events) in between familiar discrete events (called mode events).\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_29.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BanachZSW12b, author = {Richard Banach and Huibiao Zhu and Wen Su and Xiaofeng Wu}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Continuous Behaviour in Event-B: {A} Sketch}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {349--352}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_29}, doi = {10.1007/978-3-642-30885-7\\_29}, timestamp = {Mon, 03 Mar 2025 20:58:01 +0100}, biburl = {https://dblp.org/rec/conf/asm/BanachZSW12b.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"07140b3b99445f924d75b08ff604e6ed","permalink":"/publication/banachzsw12b/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/banachzsw12b/","section":"publication","summary":"Abstract Including provision for continuously varying behaviour as well as discrete state change is considered for Event-B. An extension of Event-B is sketched that accommodates continuous events (called pliant events) in between familiar discrete events (called mode events).","tags":["ABZ'12"],"title":"Continuous Behaviour in Event-B: A Sketch","type":"publication"},{"authors":["Egon Börger","Antonio Cisternino","Vincenzo Gervasi"],"categories":[],"content":"Abstract We suggest an approach for accurate modeling and analysis of web application frameworks.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_1.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BorgerCG12, author = {Egon B{\\\u0026quot;{o}}rger and Antonio Cisternino and Vincenzo Gervasi}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Contribution to a Rigorous Analysis of Web Application Frameworks}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {1--20}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_1}, doi = {10.1007/978-3-642-30885-7\\_1}, timestamp = {Sun, 25 Oct 2020 23:07:20 +0100}, biburl = {https://dblp.org/rec/conf/asm/BorgerCG12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"bd5d1f132590ee741c79ece92896f907","permalink":"/publication/borgercg12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/borgercg12/","section":"publication","summary":"Abstract We suggest an approach for accurate modeling and analysis of web application frameworks.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible.","tags":["ABZ'12"],"title":"Contribution to a Rigorous Analysis of Web Application Frameworks","type":"publication"},{"authors":["David Mentré","Claude Marché","Jean-Christophe Filliâtre","Masashi Asuka"],"categories":[],"content":"Abstract We present a method to discharge proof obligations from Atelier B using multiple SMT solvers. It is based on a faithful modeling of B’s set theory into polymorphic first-order logic. We report on two case studies demonstrating a significant improvement in the ratio of obligations that are automatically discharged.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_17.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MentreMFA12, author = {David Mentr{\\'{e}} and Claude March{\\'{e}} and Jean{-}Christophe Filli{\\^{a}}tre and Masashi Asuka}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Discharging Proof Obligations from Atelier {B} Using Multiple Automated Provers}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {238--251}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_17}, doi = {10.1007/978-3-642-30885-7\\_17}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/MentreMFA12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"ddb16aeeda3cc64b29191b17fdf2582b","permalink":"/publication/mentremfa12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/mentremfa12/","section":"publication","summary":"Abstract We present a method to discharge proof obligations from Atelier B using multiple SMT solvers. It is based on a faithful modeling of B’s set theory into polymorphic first-order logic.","tags":["ABZ'12"],"title":"Discharging Proof Obligations from Atelier B Using Multiple Automated Provers","type":"publication"},{"authors":["Andrew Edmunds","Michael J. Butler","Issam Maamria","Renato Silva","Chris Lovell"],"categories":[],"content":"Abstract The Event-B method is a formal modelling approach; our interest is the final step, of generating code for concurrent programs, from Event-B. Our Tasking Event-B tool integrates Event-B to facilitate code generation. The theory plug-in allows mathematical extensions to be added to an Event-B development. When working at the implementation level we need to consider how to translate the newly added types and operators into code. In this paper, we augment the theory plug-in, by adding a Translation Rules section to the tool. This enables us to define translation rules that map Event-B formulas to code. We illustrate the approach using a small case study, where we add a theory of arrays, and specify translation rules for generating Ada code.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_33.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{EdmundsBMSL12, author = {Andrew Edmunds and Michael J. Butler and Issam Maamria and Renato Silva and Chris Lovell}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Event-B Code Generation: Type Extension with Theories}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {365--368}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_33}, doi = {10.1007/978-3-642-30885-7\\_33}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/EdmundsBMSL12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"ba4a26bc031e206cd243015373adc840","permalink":"/publication/edmundsbmsl12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/edmundsbmsl12/","section":"publication","summary":"Abstract The Event-B method is a formal modelling approach; our interest is the final step, of generating code for concurrent programs, from Event-B. Our Tasking Event-B tool integrates Event-B to facilitate code generation.","tags":["ABZ'12"],"title":"Event-B Code Generation: Type Extension with Theories","type":"publication"},{"authors":["Vajih Montaghami","Derek Rayside"],"categories":[],"content":"Abstract Kodkod, the backend of Alloy4, incorporates new features for solving models where part of the solution, that is, a partial instance, is already known. Although Kodkod has had this functionality for some time, it is not explicitly available to the modeller through the Alloy language syntax. We propose an extension to the Alloy language to make partial instances explicitly available to the Alloy user. Explicit partial instances are helpful for the Alloy user in a number of capacities, including test-driven development, regression testing, modelling by example, and combined modelling and meta-modelling. The proposed syntax also gives the modeller explicit access to the performance benefits of Kodkod’s partial instance features.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_9.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MontaghamiR12, author = {Vajih Montaghami and Derek Rayside}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Extending Alloy with Partial Instances}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {122--135}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_9}, doi = {10.1007/978-3-642-30885-7\\_9}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/MontaghamiR12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"a58338c79e883447263086e5e3195320","permalink":"/publication/montaghamir12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/montaghamir12/","section":"publication","summary":"Abstract Kodkod, the backend of Alloy4, incorporates new features for solving models where part of the solution, that is, a partial instance, is already known. Although Kodkod has had this functionality for some time, it is not explicitly available to the modeller through the Alloy language syntax.","tags":["ABZ'12"],"title":"Extending Alloy with Partial Instances","type":"publication"},{"authors":["Maximiliano Cristiá","Claudia S. Frydman"],"categories":[],"content":"Abstract The Test Template Framework (TTF) is a method for model-based testing (MBT) from Z specifications. Although the TTF covers many features of the Z notation, it does not explain how to deal with axiomatic descriptions, quantifiers and set comprehensions. In this paper we extend the TTF so it can process specifications including these features. The techniques presented here may be useful for other MBT methods for the Z notation or for other notations such as Alloy and B, since they use similar mathematical theories.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_20.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{CristiaF12, author = {Maximiliano Cristi{\\'{a}} and Claudia S. Frydman}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Extending the Test Template Framework to Deal with Axiomatic Descriptions, Quantifiers and Set Comprehensions}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {280--293}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_20}, doi = {10.1007/978-3-642-30885-7\\_20}, timestamp = {Thu, 14 Oct 2021 10:31:49 +0200}, biburl = {https://dblp.org/rec/conf/asm/CristiaF12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"42e5c0128797950ebb48da3441d2919b","permalink":"/publication/cristiaf12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/cristiaf12/","section":"publication","summary":"Abstract The Test Template Framework (TTF) is a method for model-based testing (MBT) from Z specifications. Although the TTF covers many features of the Z notation, it does not explain how to deal with axiomatic descriptions, quantifiers and set comprehensions.","tags":["ABZ'12"],"title":"Extending the Test Template Framework to Deal with Axiomatic Descriptions, Quantifiers and Set Comprehensions","type":"publication"},{"authors":["Denis Sabatier","Lilian Burdy","Antoine Requet","Jérôme Guéry"],"categories":[],"content":"Abstract The New York City Transit Authority has included formal proofs at system level as part of the safety assessment for its New York subway Line 7 modernization project, based on the CBTC from Thales Toronto. ClearSy carries out these proofs. In this paper, we describe the expected results and benefits of such proofs. We also discuss the methodology, in particular the importance of obtaining a natural language precursor for proofs. This step is paramount to find the simplest reasons why the design ensures the wanted properties.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_34.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SabatierBRG12, author = {Denis Sabatier and Lilian Burdy and Antoine Requet and J{\\'{e}}r{\\^{o}}me Gu{\\'{e}}ry}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Formal Proofs for the {NYCT} Line 7 (Flushing) Modernization Project}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {369--372}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_34}, doi = {10.1007/978-3-642-30885-7\\_34}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/SabatierBRG12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d68cf2a37e0c13ead3d19639c17c8038","permalink":"/publication/sabatierbrg12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/sabatierbrg12/","section":"publication","summary":"Abstract The New York City Transit Authority has included formal proofs at system level as part of the safety assessment for its New York subway Line 7 modernization project, based on the CBTC from Thales Toronto.","tags":["ABZ'12"],"title":"Formal Proofs for the NYCT Line 7 (Flushing) Modernization Project","type":"publication"},{"authors":["Haniel Barbosa","David Déharbe"],"categories":[],"content":"Abstract In this paper we propose an approach to verify PLC programs, a common platform to control systems in the industry. Programs written in the languages of the IEC 61131-3 standard are automatically translated to B machines and are then amenable to formal analysis of safety constraints and general structural properties of the application. This approach thus integrates formal methods into existing industrial processes.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_30.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BarbosaD12, author = {Haniel Barbosa and David D{\\'{e}}harbe}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Formal Verification of {PLC} Programs Using the {B} Method}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {353--356}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_30}, doi = {10.1007/978-3-642-30885-7\\_30}, timestamp = {Sat, 19 Oct 2019 20:28:13 +0200}, biburl = {https://dblp.org/rec/conf/asm/BarbosaD12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"40f59ee9bcc534171b2f663795e728f3","permalink":"/publication/barbosad12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/barbosad12/","section":"publication","summary":"Abstract In this paper we propose an approach to verify PLC programs, a common platform to control systems in the industry. Programs written in the languages of the IEC 61131-3 standard are automatically translated to B machines and are then amenable to formal analysis of safety constraints and general structural properties of the application.","tags":["ABZ'12"],"title":"Formal Verification of PLC Programs Using the B Method","type":"publication"},{"authors":["Jean-Raymond Abrial","Wen Su","Huibiao Zhu"],"categories":[],"content":"Abstract This paper contains the development of hybrid systems in Event-B and the Rodin Platform. It follows the seminal approach introduced at the turn of the century in Action Systems. Many examples illustrate our approach.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_13.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{AbrialSZ12, author = {Jean{-}Raymond Abrial and Wen Su and Huibiao Zhu}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Formalizing Hybrid Systems with Event-B}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {178--193}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_13}, doi = {10.1007/978-3-642-30885-7\\_13}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/AbrialSZ12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"dfa4c805586571229fe0c9a93818d7b0","permalink":"/publication/abrialsz12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/abrialsz12/","section":"publication","summary":"Abstract This paper contains the development of hybrid systems in Event-B and the Rodin Platform. It follows the seminal approach introduced at the turn of the century in Action Systems. Many examples illustrate our approach.","tags":["ABZ'12"],"title":"Formalizing Hybrid Systems with Event-B","type":"publication"},{"authors":["Ian J. Hayes","Robert Colvin"],"categories":[],"content":"Abstract Plotkin’s structural operational semantics provides a tried and tested method for defining the semantics of a programming language via sets of rules that define valid transitions between program configurations. Mosses’ modular structural operational semantics (MSOS) recasts the approach by making use of rules consisting of labelled transitions, allowing a more modular approach to defining language semantics. MSOS can be adapted by using “syntactic” labels that allow local variables and aliasing to be defined without augmenting the semantics with environments and locations. The syntactic labels allow both state-based constructs of imperative languages and event-based constructs of process algebras to the specified in an integrated manner. To illustrate the integrated approach we compare its rules with Plotkin’s original rules for both small-step and big-step operational semantics. One issue that arises is that defining concurrency requires the use of a small-step approach to handle interleaving, while defining a specification command requires a big-step approach. The integrated approach can be generalised to use a sequence of (small) steps as a label; we call this a multi-step operational semantics. This approach allows both concurrency and non-atomic specification commands to be defined.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_2.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{HayesC12, author = {Ian J. Hayes and Robert Colvin}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Integrated Operational Semantics: Small-Step, Big-Step and Multi-step}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {21--35}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_2}, doi = {10.1007/978-3-642-30885-7\\_2}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/HayesC12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"0bbf52d0f87059a02dbc907403f344e7","permalink":"/publication/hayesc12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/hayesc12/","section":"publication","summary":"Abstract Plotkin’s structural operational semantics provides a tried and tested method for defining the semantics of a programming language via sets of rules that define valid transitions between program configurations. Mosses’ modular structural operational semantics (MSOS) recasts the approach by making use of rules consisting of labelled transitions, allowing a more modular approach to defining language semantics.","tags":["ABZ'12"],"title":"Integrated Operational Semantics: Small-Step, Big-Step and Multi-step","type":"publication"},{"authors":["Ionut Dinca","Florentin Ipate","Laurentiu Mierla","Alin Stefanescu"],"categories":[],"content":"Abstract The Event-B method is a formal approach for reliable systems specification and verification, being supported by the Rodin platform, which includes mature plugins for theorem-proving, model-checking, or model (de)composition features. In order to complement these techniques with test generation and state model inference from Event-B models, we developed a new feature as a Rodin plugin. Our plugin implements a model-learning approach to iteratively construct an approximate automaton model together with an associated test suite. Test suite optimization is further applied according to different optimization criteria.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_32.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DincaIMS12, author = {Ionut Dinca and Florentin Ipate and Laurentiu Mierla and Alin Stefanescu}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Learn and Test for Event-B - {A} Rodin Plugin}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {361--364}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_32}, doi = {10.1007/978-3-642-30885-7\\_32}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/DincaIMS12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c47feba4b7c21873e4c2002d54661b05","permalink":"/publication/dincaims12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/dincaims12/","section":"publication","summary":"Abstract The Event-B method is a formal approach for reliable systems specification and verification, being supported by the Rodin platform, which includes mature plugins for theorem-proving, model-checking, or model (de)composition features.","tags":["ABZ'12"],"title":"Learn and Test for Event-B - A Rodin Plugin","type":"publication"},{"authors":["Andrea Luzzana","Mattia Rossetti","Paolo Righettini","Patrizia Scandurra"],"categories":[],"content":"Abstract This paper proposes the use of the Abstract State Machine method for a rigorous foundation in modeling and validating Vision-Based Robot Control applications. We show how to tailor control tasks definitions and associated synchronization/communication patterns in rigorous and abstract terms by using control state ASMs and an extension of the classical flowchart notation to allow the definition/instantiation of recurring design solutions and to improve model traceability.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_25.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{LuzzanaRRS12, author = {Andrea Luzzana and Mattia Rossetti and Paolo Righettini and Patrizia Scandurra}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Modeling Synchronization/Communication Patterns in Vision-Based Robot Control Applications Using ASMs}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {331--335}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_25}, doi = {10.1007/978-3-642-30885-7\\_25}, timestamp = {Sat, 09 Apr 2022 12:45:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/LuzzanaRRS12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"6e79531dc890e34b9d3d62d5112efb1c","permalink":"/publication/luzzanarrs12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/luzzanarrs12/","section":"publication","summary":"Abstract This paper proposes the use of the Abstract State Machine method for a rigorous foundation in modeling and validating Vision-Based Robot Control applications. We show how to tailor control tasks definitions and associated synchronization/communication patterns in rigorous and abstract terms by using control state ASMs and an extension of the classical flowchart notation to allow the definition/instantiation of recurring design solutions and to improve model traceability.","tags":["ABZ'12"],"title":"Modeling Synchronization/Communication Patterns in Vision-Based Robot Control Applications Using ASMs","type":"publication"},{"authors":["Benoît Fraikin","Marc Frappier","Richard St-Denis"],"categories":[],"content":"Abstract Scientific literature reveals that symbolic representation techniques behind some formal methods are attractive to synthesize parts or verify properties of large discrete event systems. They involve, however, complex encoding schemata and fine tuning heuristic parameters in order to translate specific problems into efficient BDD or SAT-based representations. This approach may be too costly when the main goal is to explore a theory, understand by simulation its underlying concepts and computation procedures, and conduct experiments by applying them to small problems. Based on previous work with Alloy on the synthesis of observers and nonblocking supervisors of a system organized hierarchically with a flat state space estimated to 1031 states, this paper investigates more deeply issues raised with its use in the modeling and prototyping of the supervisory control theory, including the application of models to practical problems. This study was conducted in a broader context than just hierarchical control since it embraces various variants of this theory.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_7.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{FraikinFS12, author = {Beno{\\^{\\i}}t Fraikin and Marc Frappier and Richard St{-}Denis}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Modeling the Supervisory Control Theory with Alloy}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {94--107}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_7}, doi = {10.1007/978-3-642-30885-7\\_7}, timestamp = {Sun, 02 Oct 2022 15:55:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/FraikinFS12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"761c2b2bad11411a4f9ad3ecafee85c4","permalink":"/publication/fraikinfs12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/fraikinfs12/","section":"publication","summary":"Abstract Scientific literature reveals that symbolic representation techniques behind some formal methods are attractive to synthesize parts or verify properties of large discrete event systems. They involve, however, complex encoding schemata and fine tuning heuristic parameters in order to translate specific problems into efficient BDD or SAT-based representations.","tags":["ABZ'12"],"title":"Modeling the Supervisory Control Theory with Alloy","type":"publication"},{"authors":["Aleksandar Milicevic","Daniel Jackson 0001"],"categories":[],"content":"Abstract In a bounded analysis, arithmetic operators become partial, and a different semantics becomes necessary. One approach, mimicking programming languages, is for overflow to result in wrap-around. Although easy to implement, wrap-around produces unexpected counterexamples that do not correspond to cases that would arise in the unbounded setting. This paper describes a new approach, implemented in the latest version of the Alloy Analyzer, in which instances that would involve overflow are suppressed, and consequently, spurious counterexamples are eliminated. The key idea is to interpret quantifiers so that bound variables range only over values that do not cause overflow.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_8.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MilicevicJ12, author = {Aleksandar Milicevic and Daniel Jackson}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Preventing Arithmetic Overflows in Alloy}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {108--121}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_8}, doi = {10.1007/978-3-642-30885-7\\_8}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/MilicevicJ12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e499a75249da9378063005413cd8f7f7","permalink":"/publication/milicevicj12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/milicevicj12/","section":"publication","summary":"Abstract In a bounded analysis, arithmetic operators become partial, and a different semantics becomes necessary. One approach, mimicking programming languages, is for overflow to result in wrap-around. Although easy to implement, wrap-around produces unexpected counterexamples that do not correspond to cases that would arise in the unbounded setting.","tags":["ABZ'12"],"title":"Preventing Arithmetic Overflows in Alloy","type":"publication"},{"authors":["Hamed Yaghoubi Shahir","Roozbeh Farahbod","Uwe Glässer"],"categories":[],"content":"Abstract The Abstract State Machine (ASM) method proposes the concept of ground models for analyzing a target system based on pseudo-code-like descriptions for reasoning about system properties in terms of state machine runs over abstract data structures. This highly iterative process builds on stepwise refinement of ground models that evolve with progressing understanding of functional system requirements. Usually, as complexity increases, reorganization of a model’s internal structure helps enhance its flexibility and robustness. While this approach is common practice, the underlying principles are usually left implicit. In this paper, we propose refactoring patterns to restructure abstract machine models with the goal of improving their intelligibility and maintainability.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_28.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ShahirFG12, author = {Hamed Yaghoubi Shahir and Roozbeh Farahbod and Uwe Gl{\\\u0026quot;{a}}sser}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Refactoring Abstract State Machine Models}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {345--348}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_28}, doi = {10.1007/978-3-642-30885-7\\_28}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/ShahirFG12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"a3429ab4144fccf3dff99230c17bae6e","permalink":"/publication/shahirfg12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/shahirfg12/","section":"publication","summary":"Abstract The Abstract State Machine (ASM) method proposes the concept of ground models for analyzing a target system based on pseudo-code-like descriptions for reasoning about system properties in terms of state machine runs over abstract data structures.","tags":["ABZ'12"],"title":"Refactoring Abstract State Machine Models","type":"publication"},{"authors":["Stefan Hallerstede","Thai Son Hoang"],"categories":[],"content":"Abstract Decomposition is a technique to separate the design of a complex system into smaller sub-models, which improves scalability and team development. In the shared-variable decomposition approach for Event-B sub-models share external variables and communicate through external events which cannot be easily refined. Our first contribution hence is a proposal for a new construct called interface that encapsulates the external variables, along with a mechanism for interface instantiation. Using the new construct and mechanism, external variables can be refined consistently. Our second contribution is an approach for verifying the correctness of Event-B extensions using the supporting Rodin tool. We illustrate our approach by proving the correctness of interface instantiation.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_16.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{HallerstedeH12, author = {Stefan Hallerstede and Thai Son Hoang}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Refinement by Interface Instantiation}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {223--237}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_16}, doi = {10.1007/978-3-642-30885-7\\_16}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/HallerstedeH12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c980197cdec3d88ea0401a2e03194569","permalink":"/publication/hallerstedeh12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/hallerstedeh12/","section":"publication","summary":"Abstract Decomposition is a technique to separate the design of a complex system into smaller sub-models, which improves scalability and team development. In the shared-variable decomposition approach for Event-B sub-models share external variables and communicate through external events which cannot be easily refined.","tags":["ABZ'12"],"title":"Refinement by Interface Instantiation","type":"publication"},{"authors":["Gudmund Grov","Andrew Ireland","Maria Teresa Llano"],"categories":[],"content":"Abstract Refinement is a powerful technique for tackling the complexities that arise when formally modelling systems. Here we focus on a posit-and-prove style of refinement, and specifically where a user requires guidance in order to overcome a failed refinement step. We take an integrated approach – combining the complementary strengths of top-down planning and bottom-up theory formation. In this paper we focus mainly on the planning perspective. Specifically, we propose a new technique called refinement plans which combines both modelling and reasoning perspectives. When a refinement step fails, refinement plans provide a basis for automatically generating modelling guidance by abstracting away from the details of low-level proof failures. The refinement plans described here are currently being implemented for the Event-B modelling formalism, and have been assessed on paper using case studies drawn from the literature. Longer-term, our aim is to identify refinement plans that are applicable to a range of modelling formalisms.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_15.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{GrovIL12, author = {Gudmund Grov and Andrew Ireland and Maria Teresa Llano}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Refinement Plans for Informed Formal Design}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {208--222}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_15}, doi = {10.1007/978-3-642-30885-7\\_15}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/GrovIL12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"1bf9865d4f85ec4cd2ac436e84ae80da","permalink":"/publication/grovil12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/grovil12/","section":"publication","summary":"Abstract Refinement is a powerful technique for tackling the complexities that arise when formally modelling systems. Here we focus on a posit-and-prove style of refinement, and specifically where a user requires guidance in order to overcome a failed refinement step.","tags":["ABZ'12"],"title":"Refinement Plans for Informed Formal Design","type":"publication"},{"authors":["David Déharbe","Pascal Fontaine","Yoann Guyot","Laurent Voisin"],"categories":[],"content":"Abstract Formal development in Event-B generally requires the validation of a large number of proof obligations. Some automatic tools exist to automatically discharge a significant part of them, thus augmenting the efficiency of the formal development. We here investigate the use of SMT (Satisfiability Modulo Theories) solvers in addition to the traditional tools, and detail the techniques used for the cooperation between the Rodin platform and SMT solvers. Our contribution is the definition of two approaches to use SMT solvers, their implementation in a Rodin plug-in, and an experimental evaluation on a large sample of industrial and academic projects. Adding SMT solvers to Atelier B provers reduces to one fourth the number of sequents that need to be proved interactively.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_14.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DeharbeFGV12, author = {David D{\\'{e}}harbe and Pascal Fontaine and Yoann Guyot and Laurent Voisin}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {{SMT} Solvers for Rodin}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {194--207}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_14}, doi = {10.1007/978-3-642-30885-7\\_14}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/DeharbeFGV12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e6a2541cb27e488ed637141888e480f2","permalink":"/publication/deharbefgv12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/deharbefgv12/","section":"publication","summary":"Abstract Formal development in Event-B generally requires the validation of a large number of proof obligations. Some automatic tools exist to automatically discharge a significant part of them, thus augmenting the efficiency of the formal development.","tags":["ABZ'12"],"title":"SMT Solvers for Rodin","type":"publication"},{"authors":["Amirhossein Vakili","Nancy A. Day"],"categories":[],"content":"Abstract The declarative and relational aspects of Alloy make it a desirable language to use for high-level modeling of transition systems. However, currently, these models must be translated to another tool to carry out full temporal logic model checking. In this article, we show how a symbolic representation of the semantics of computational tree logic with fairness constraints (CTLFC) can be written in first-order logic with the transitive closure operator, and therefore described in Alloy. Using this encoding, the question of whether a declarative model of a transition system satisfies a temporal logic formula can be solved using the Alloy Analyzer directly. Also, since a declarative description of a model may actually represent a family of transition systems, we define two distinct model checking questions on this family (existential and universal model checking) and show how these properties can be evaluated in the Alloy Analyzer.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_11.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{VakiliD12, author = {Amirhossein Vakili and Nancy A. Day}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Temporal Logic Model Checking in Alloy}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {150--163}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_11}, doi = {10.1007/978-3-642-30885-7\\_11}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/VakiliD12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"01f9ef60199cb5ce4883f03d6d9e9833","permalink":"/publication/vakilid12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/vakilid12/","section":"publication","summary":"Abstract The declarative and relational aspects of Alloy make it a desirable language to use for high-level modeling of transition systems. However, currently, these models must be translated to another tool to carry out full temporal logic model checking.","tags":["ABZ'12"],"title":"Temporal Logic Model Checking in Alloy","type":"publication"},{"authors":["Paolo Arcaini","Francesco Bolis","Angelo Gargantini"],"categories":[],"content":"Abstract Test generation techniques based on model checking suffer from the state space explosion problem. However, for a family of systems that can be easily decomposed in sub-systems, we devise a technique to cope with this problem. To model such systems, we introduce the notion of sequential net of Abstract State Machines (ASMs), which represents a system constituted by a set of ASMs such that only one ASM is active at every time. Given a net of ASMs, we first generate a test suite for every ASM in the net, then we combine the tests in order to obtain a test suite for the entire system. We prove that, under some assumptions, the technique preserves coverage of the entire system. We test our approach on a benchmark and we report a web application example for which we are able to generate complete test suites.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_3.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ArcainiBG12, author = {Paolo Arcaini and Francesco Bolis and Angelo Gargantini}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Test Generation for Sequential Nets of Abstract State Machines}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {36--50}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_3}, doi = {10.1007/978-3-642-30885-7\\_3}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/ArcainiBG12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"80ac99afadbb6b4a71eaf924a55e3140","permalink":"/publication/arcainibg12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/arcainibg12/","section":"publication","summary":"Abstract Test generation techniques based on model checking suffer from the state space explosion problem. However, for a family of systems that can be easily decomposed in sub-systems, we devise a technique to cope with this problem.","tags":["ABZ'12"],"title":"Test Generation for Sequential Nets of Abstract State Machines","type":"publication"},{"authors":["Timothy Nelson 0001","Daniel J. Dougherty","Kathi Fisler","Shriram Krishnamurthi"],"categories":[],"content":"Abstract Many model-finding tools, such as Alloy, charge users with providing bounds on the sizes of models. It would be preferable to automatically compute sufficient upper-bounds whenever possible. The Bernays-Schönfinkel-Ramsey fragment of first-order logic can relieve users of this burden in some cases: its sentences are satisfiable iff they are satisfied in a finite model, whose size is computable from the input problem. Researchers have observed, however, that the class of sentences for which such a theorem holds is richer in a many-sorted framework—which Alloy inhabits—than in the one-sorted case. This paper studies this phenomenon in the general setting of order-sorted logic supporting overloading and empty sorts. We establish a syntactic condition generalizing the Bernays-Schönfinkel-Ramsey form that ensures the Finite Model Property. We give a linear-time algorithm for deciding this condition and a polynomial-time algorithm for computing the bound on model sizes. As a consequence, model-finding is a complete decision procedure for sentences in this class. Our work has been incorporated into Margrave, a tool for policy analysis, and applies in real-world situations.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_10.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{NelsonDFK12, author = {Timothy Nelson and Daniel J. Dougherty and Kathi Fisler and Shriram Krishnamurthi}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Toward a More Complete Alloy}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {136--149}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_10}, doi = {10.1007/978-3-642-30885-7\\_10}, timestamp = {Mon, 26 Jun 2023 20:48:45 +0200}, biburl = {https://dblp.org/rec/conf/asm/NelsonDFK12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"8306a61e9c6eb3a31bc89d5476187f85","permalink":"/publication/nelsondfk12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/nelsondfk12/","section":"publication","summary":"Abstract Many model-finding tools, such as Alloy, charge users with providing bounds on the sizes of models. It would be preferable to automatically compute sufficient upper-bounds whenever possible. The Bernays-Schönfinkel-Ramsey fragment of first-order logic can relieve users of this burden in some cases: its sentences are satisfiable iff they are satisfied in a finite model, whose size is computable from the input problem.","tags":["ABZ'12"],"title":"Toward a More Complete Alloy","type":"publication"},{"authors":["Matthes Elstermann","Detlef Seese","Albert Fleischmann"],"categories":[],"content":"Abstract This paper presents the idea of using the Arbitrator Pattern, a concept from the field of robotics, and applying it to the domain of business process model interpretation, using it as a mechanism to allow dynamic adaption and extension of process instances at runtime. The idea is discussed and a formal specification is given using ASMs to detail the concept that was derived in the process of exploring the problem so far. Furthermore the non-trivial questions and issues are raised that will need to be addressed for this just started work-inprogress to advance.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_23.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ElstermannSF12, author = {Matthes Elstermann and Detlef Seese and Albert Fleischmann}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Using the Arbitrator Pattern for Dynamic Process-Instance Extension in a Work-Flow Management System}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {323--326}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_23}, doi = {10.1007/978-3-642-30885-7\\_23}, timestamp = {Mon, 03 Mar 2025 20:58:01 +0100}, biburl = {https://dblp.org/rec/conf/asm/ElstermannSF12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"1ae1016a30b306481f61cb0ab0a3aec9","permalink":"/publication/elstermannsf12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/elstermannsf12/","section":"publication","summary":"Abstract This paper presents the idea of using the Arbitrator Pattern, a concept from the field of robotics, and applying it to the domain of business process model interpretation, using it as a mechanism to allow dynamic adaption and extension of process instances at runtime.","tags":["ABZ'12"],"title":"Using the Arbitrator Pattern for Dynamic Process-Instance Extension in a Work-Flow Management System","type":"publication"},{"authors":["Ramsay Taylor"],"categories":[],"content":"Abstract Many high-integrity software development processes prevent any assumptions about the system hardware, but this makes it impossible to use these techniques on software that must interact with the hardware, such as device drivers. This work takes the opposite approach: if the analyst accepts that the analysis will only be valid for a particular target system then the specification of the system can be used to infer the behaviour of the software that interacts with it. An analysis process is developed that operates on disassembled executable files and formal specifications of the target platform to produce CSP-OZ formal models of the software’s behaviour. This analysis process is implemented in a prototype called Spurinna. This is demonstrated in conjunction with the verification tools Z2SAL and the SAL suite to demonstrate the verification of properties of an example program.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-30885-7_22.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Taylor12, author = {Ramsay Taylor}, editor = {John Derrick and John S. Fitzgerald and Stefania Gnesi and Sarfraz Khurshid and Michael Leuschel and Steve Reeves and Elvinia Riccobene}, title = {Verification of Hardware Interaction Properties of Software}, booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {7316}, pages = {308--322}, publisher = {Springer}, year = {2012}, url = {https://doi.org/10.1007/978-3-642-30885-7\\_22}, doi = {10.1007/978-3-642-30885-7\\_22}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/Taylor12.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"1a30d0b3f5c7cb213e4bd59dff72c322","permalink":"/publication/taylor12/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"/publication/taylor12/","section":"publication","summary":"Abstract Many high-integrity software development processes prevent any assumptions about the system hardware, but this makes it impossible to use these techniques on software that must interact with the hardware, such as device drivers.","tags":["ABZ'12"],"title":"Verification of Hardware Interaction Properties of Software","type":"publication"},{"authors":null,"categories":null,"content":"","date":1275350400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"95cac984b1f367f3513caedb06db78b4","permalink":"/2010/","publishdate":"2010-06-01T00:00:00Z","relpermalink":"/2010/","section":"event","summary":"2nd International Conference on ASM, Alloy, B, and Z","tags":["ABZ'10"],"title":"ABZ 2010 (Orford, Canada)","type":"event"},{"authors":["Jennifer Sorge","Michael Poppleton","Michael J. Butler"],"categories":[],"content":"Abstract Feature-oriented modelling is a well-known approach for Software Product Line (SPL) development. It is a widely used method when developing groups of related software. With an SPL approach, the development of a software product is quicker, less expensive and of higher quality than a one-off development since much effort is re-used. However, this approach is not common in formal methods development, which is generally high cost and time consuming, yet crucial in the development of critical systems. With the increase of more complex critical systems, it becomes more important to apply formal methods to the development cycle, and we propose a method that allows the application of SPL development techniques to formal methods. This results in faster and cheaper development of formal systems.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_42.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SorgePB10, author = {Jennifer Sorge and Michael Poppleton and Michael J. Butler}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {A Basis for Feature-Oriented Modelling in Event-B}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {409}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_42}, doi = {10.1007/978-3-642-11811-1\\_42}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/SorgePB10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7bdeb835c85f00da9cee06165d3a672c","permalink":"/publication/sorgepb10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/sorgepb10/","section":"publication","summary":"Abstract Feature-oriented modelling is a well-known approach for Software Product Line (SPL) development. It is a widely used method when developing groups of related software. With an SPL approach, the development of a software product is quicker, less expensive and of higher quality than a one-off development since much effort is re-used.","tags":["ABZ'10"],"title":"A Basis for Feature-Oriented Modelling in Event-B","type":"publication"},{"authors":["Danhua Shao","Divya Gopinath","Sarfraz Khurshid","Dewayne E. Perry"],"categories":[],"content":"Abstract In software verification, scope-bounded checking of programs has become an effective technique for finding subtle bugs. Given bounds (that are iteratively relaxed) on input size and length of execution paths, a program and its correctness specifications are translated into a formula, which is solved using off-the-shelf solvers – a solution to the formula is a counterexample to the correctness specification.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_30.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ShaoGKP10, author = {Danhua Shao and Divya Gopinath and Sarfraz Khurshid and Dewayne E. Perry}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {A Case for Using Data-Flow Analysis to Optimize Incremental Scope-Bounded Checking}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {392--393}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_30}, doi = {10.1007/978-3-642-11811-1\\_30}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/ShaoGKP10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"247c20b862760d3c806a099dfe203dbf","permalink":"/publication/shaogkp10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/shaogkp10/","section":"publication","summary":"Abstract In software verification, scope-bounded checking of programs has become an effective technique for finding subtle bugs. Given bounds (that are iteratively relaxed) on input size and length of execution paths, a program and its correctness specifications are translated into a formula, which is solved using off-the-shelf solvers – a solution to the formula is a counterexample to the correctness specification.","tags":["ABZ'10"],"title":"A Case for Using Data-Flow Analysis to Optimize Incremental Scope-Bounded Checking","type":"publication"},{"authors":["Idir Aït-Sadoune","Yamine Aït Ameur"],"categories":[],"content":"Abstract The Service-Oriented Architectures (SOA) are increasingly used in various application domains. Nowadays various Services operate on the Web and access various critical resources such as databases. These services are called transactional web services when they perform transactional actions. This kind of Services must verify the relevant constraints related to transactional systems. In our work, we focus on web services described with BPEL [1].\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_39.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Ait-SadouneA10, author = {Idir A{\\\u0026quot;{\\i}}t{-}Sadoune and Yamine A{\\\u0026quot;{\\i}}t Ameur}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {A Proof Based Approach for Formal Verification of Transactional {BPEL} Web Services}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {405--406}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_39}, doi = {10.1007/978-3-642-11811-1\\_39}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Ait-SadouneA10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"a654df2263098e354971d72f702c4c5a","permalink":"/publication/ait-sadounea10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/ait-sadounea10/","section":"publication","summary":"Abstract The Service-Oriented Architectures (SOA) are increasingly used in various application domains. Nowadays various Services operate on the Web and access various critical resources such as databases. These services are called transactional web services when they perform transactional actions.","tags":["ABZ'10"],"title":"A Proof Based Approach for Formal Verification of Transactional BPEL Web Services","type":"publication"},{"authors":["Edd Turner","Michael J. Butler","Michael Leuschel"],"categories":[],"content":"Abstract Symmetry reduction is a model checking technique that can help alleviate the problem of state space explosion, by preventing redundant state space exploration. In previous work, we have developed three effective approaches to symmetry reduction for B that have been implemented into the ProB model checker, and we have proved the soundness of our state symmetries. However, it is also important to show our techniques are sound with respect to standard model checking, at the algorithmic level. In this paper, we present a retrospective B development that addresses this issue through a series of B refinements. This work also demonstrates the valuable insights into a system that can be gained through formal modelling.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_18.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{TurnerBL10, author = {Edd Turner and Michael J. Butler and Michael Leuschel}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {A Refinement-Based Correctness Proof of Symmetry Reduced Model Checking}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {231--244}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_18}, doi = {10.1007/978-3-642-11811-1\\_18}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/TurnerBL10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d09439eb7df173a991a670d2f37a9928","permalink":"/publication/turnerbl10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/turnerbl10/","section":"publication","summary":"Abstract Symmetry reduction is a model checking technique that can help alleviate the problem of state space explosion, by preventing redundant state space exploration. In previous work, we have developed three effective approaches to symmetry reduction for B that have been implemented into the ProB model checker, and we have proved the soundness of our state symmetries.","tags":["ABZ'10"],"title":"A Refinement-Based Correctness Proof of Symmetry Reduced Model Checking","type":"publication"},{"authors":["Daniel Jackson 0001","Eunsuk Kang"],"categories":[],"content":"Abstract How should a software system be verified? Much research is currently focused on attempts to show that code modules meet their specifications. This is important, but bugs in code are not the weakest link in the chain. The larger problems are identifying and articulating critical properties, and ensuring that the components of a system - not only software modules, but also hardware peripherals, physical environments, and human operators - together establish them. Another common assumption is that verification must take system design and implementation as given. I’ll explain the rationale for, and elements of, a new approach to verification, in which design is driven by verification goals, and verification arguments are structured in a way that exposes the relationship between critical properties and the components that ensure them.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_1.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{JacksonK10, author = {Daniel Jackson and Eunsuk Kang}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {A Structure for Dependability Arguments}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {1}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_1}, doi = {10.1007/978-3-642-11811-1\\_1}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/JacksonK10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"57f84672eac42b445d98bf0cc27eba53","permalink":"/publication/jacksonk10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/jacksonk10/","section":"publication","summary":"Abstract How should a software system be verified? Much research is currently focused on attempts to show that code modules meet their specifications. This is important, but bugs in code are not the weakest link in the chain.","tags":["ABZ'10"],"title":"A Structure for Dependability Arguments","type":"publication"},{"authors":["Nicolás D\u0026apos;Ippolito","Marcelo F. Frias","Juan P. Galeotti","Esteban Lanzarotti","Sergio Mera"],"categories":[],"content":"Abstract Identifying a minimal unsatisfiable core in an Alloy model proved to be a very useful feature in many scenarios. We extend this concept to hot core, an approximation to unsat core that enables the user to obtain valuable feedback when the Alloy’s sat-solving process is abruptly interrupted. We present some use cases that exemplify this new feature and explain the applied heuristics. The NP-completeness nature of the verification problem makes hot core specially appealing, since it is quite frequent for users of the Alloy Analyzer to stop the analysis when some time threshold is exceeded. We provide experimental results showing very promising outcomes supporting our proposal.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_13.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DIppolitoFGLM10, author = {Nicol{\\'{a}}s D'Ippolito and Marcelo F. Frias and Juan P. Galeotti and Esteban Lanzarotti and Sergio Mera}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Alloy+HotCore: {A} Fast Approximation to Unsat Core}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {160--173}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_13}, doi = {10.1007/978-3-642-11811-1\\_13}, timestamp = {Mon, 03 Mar 2025 20:58:01 +0100}, biburl = {https://dblp.org/rec/conf/asm/DIppolitoFGLM10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"210954d72f3aabe958df3b3c28dd57a7","permalink":"/publication/dippolitofglm10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/dippolitofglm10/","section":"publication","summary":"Abstract Identifying a minimal unsatisfiable core in an Alloy model proved to be a very useful feature in many scenarios. We extend this concept to hot core, an approximation to unsat core that enables the user to obtain valuable feedback when the Alloy’s sat-solving process is abruptly interrupted.","tags":["ABZ'10"],"title":"Alloy+HotCore: A Fast Approximation to Unsat Core","type":"publication"},{"authors":["Elvinia Riccobene","Patrizia Scandurra"],"categories":[],"content":"Abstract The SystemC UML profile is a modeling language designed to lift features and abstractions of the SystemC/C++ class library to the UML level with the aim of improving the current industrial System-on-Chip design methodology. Its graphical syntax and static semantics were defined following the “profile” extension mechanism of the UML metamodel, while its behavioral semantics was given in natural language. This paper provides a precise and executable semantics of the SystemC Process State Machines that are an extension of the UML state machines and are part of the SystemC UML profile to model the reactive behavior of the SystemC processes. To this purpose, we used the meta-hooking approach of the ASM-based semantic framework, which allows the definition of the dynamic semantics of metamodel-based languages and of UML profiles.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_7.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{RiccobeneS10, author = {Elvinia Riccobene and Patrizia Scandurra}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {An Executable Semantics of the SystemC {UML} Profile}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {75--90}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_7}, doi = {10.1007/978-3-642-11811-1\\_7}, timestamp = {Thu, 14 Oct 2021 10:31:48 +0200}, biburl = {https://dblp.org/rec/conf/asm/RiccobeneS10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7d4b9266e66ccc6e94bcf7a0bd8bf500","permalink":"/publication/riccobenes10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/riccobenes10/","section":"publication","summary":"Abstract The SystemC UML profile is a modeling language designed to lift features and abstractions of the SystemC/C++ class library to the UML level with the aim of improving the current industrial System-on-Chip design methodology.","tags":["ABZ'10"],"title":"An Executable Semantics of the SystemC UML Profile","type":"publication"},{"authors":["Joseph P. Near","Daniel Jackson 0001"],"categories":[],"content":"Abstract We extend the Alloy language with the standard imperative constructs; we show the mix of declarative and imperative constructs to be useful in modeling dynamic systems. We present a translation from our extended language to the existing first-order logic of the Alloy Analyzer, allowing for efficient analysis of models.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_10.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{NearJ10, author = {Joseph P. Near and Daniel Jackson}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {An Imperative Extension to Alloy}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {118--131}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_10}, doi = {10.1007/978-3-642-11811-1\\_10}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/NearJ10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"b8d80b0dff4952084a2388e5bde286fc","permalink":"/publication/nearj10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/nearj10/","section":"publication","summary":"Abstract We extend the Alloy language with the standard imperative constructs; we show the mix of declarative and imperative constructs to be useful in modeling dynamic systems. We present a translation from our extended language to the existing first-order logic of the Alloy Analyzer, allowing for efficient analysis of models.","tags":["ABZ'10"],"title":"An Imperative Extension to Alloy","type":"publication"},{"authors":["Bruno Emerson Gurgel Gomes","David Déharbe","Anamaria Martins Moreira","Katia Moraes"],"categories":[],"content":"Abstract Smart Card applications usually require reliability and security to avoid incorrect operation or access violation in transactions and corruption or undue access to stored information. A way of reaching these requirements is improving the quality of the development process of these applications. BSmart is a method and a corresponding tool designed to support the formal development of the complete Java Card smart card application, following the B formal method.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_16.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{GomesDMM10, author = {Bruno Emerson Gurgel Gomes and David D{\\'{e}}harbe and Anamaria Martins Moreira and Katia Moraes}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Applying the {B} Method for the Rigorous Development of Smart Card Applications}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {203--216}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_16}, doi = {10.1007/978-3-642-11811-1\\_16}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/GomesDMM10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"de1d5e436d2a6f0bc95d8bf9073d7c34","permalink":"/publication/gomesdmm10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/gomesdmm10/","section":"publication","summary":"Abstract Smart Card applications usually require reliability and security to avoid incorrect operation or access violation in transactions and corruption or undue access to stored information. A way of reaching these requirements is improving the quality of the development process of these applications.","tags":["ABZ'10"],"title":"Applying the B Method for the Rigorous Development of Smart Card Applications","type":"publication"},{"authors":["Hamid Bagheri","Kevin J. Sullivan"],"categories":[],"content":"Abstract Software architecture researchers have long assumed that architecture independent application descriptions can be mapped to architectures in many styles, that results vary in quality attributes, and that the choice of a style is driven by consideration of such attributes. In our previous work [1], we demonstrated the feasibility of formally treating architectural style as an independent variable. Given an application description and architectural style description in Alloy [3], we map them to software architecture description that refines the given application in conformance with the given style. To represent a map, we extend a traditional architectural style description (in Alloy) with predicates for mapping application descriptions in a given style to architectural descriptions in the given style. These predicates take application descriptions as parameters and define relationships required to hold between them and computed architectural descriptions. Given an application description, and a map, Alloy computes corresponding architectural descriptions guaranteed to conform to the given architectural style. This paper extends our earlier work to aspect-oriented structures. In doing so, we describe an aspect-enabled application description style and a map taking application descriptions in this style to pipe-and-filter architectures. We use the Alloy Analyzer to compute architecture descriptions, represented as satisfying solutions to the constraints of a map given an application description. The A2A transformer application, developed in our research group, then converts the Alloy-computed architecture to an architecture description in a traditional architecture description language (ADL): here, AspectualACME[2].\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_32.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BagheriS10, author = {Hamid Bagheri and Kevin J. Sullivan}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Architecture as an Independent Variable for Aspect-Oriented Application Descriptions}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {395}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_32}, doi = {10.1007/978-3-642-11811-1\\_32}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/BagheriS10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"cda0def1d4a4f0bedf2cc33c2a90c4cd","permalink":"/publication/bagheris10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/bagheris10/","section":"publication","summary":"Abstract Software architecture researchers have long assumed that architecture independent application descriptions can be mapped to architectures in many styles, that results vary in quality attributes, and that the choice of a style is driven by consideration of such attributes.","tags":["ABZ'10"],"title":"Architecture as an Independent Variable for Aspect-Oriented Application Descriptions","type":"publication"},{"authors":["Paolo Arcaini","Angelo Gargantini","Elvinia Riccobene"],"categories":[],"content":"Abstract This paper presents AsmetaSMV, a model checker for Abstract State Machines (ASMs). It has been developed with the aim of enriching the ASMETA (ASM mETAmodeling) toolset – a set of tools for ASMs – with the capabilities of the model checker NuSMV to verify properties of ASM models written in the AsmetaL language. We describe the general architecture of AsmetaSMV and the process of automatically mapping ASM models into NuSMV programs. As a proof of concepts, we report the results of using AsmetaSMV to verify temporal properties of various case studies of different characteristics and complexity.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_6.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ArcainiGR10, author = {Paolo Arcaini and Angelo Gargantini and Elvinia Riccobene}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {AsmetaSMV: {A} Way to Link High-Level {ASM} Models to Low-Level NuSMV Specifications}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {61--74}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_6}, doi = {10.1007/978-3-642-11811-1\\_6}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/ArcainiGR10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"a32c9c6bc1d15b49e15585af43454ce0","permalink":"/publication/arcainigr10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/arcainigr10/","section":"publication","summary":"Abstract This paper presents AsmetaSMV, a model checker for Abstract State Machines (ASMs). It has been developed with the aim of enriching the ASMETA (ASM mETAmodeling) toolset – a set of tools for ASMs – with the capabilities of the model checker NuSMV to verify properties of ASM models written in the AsmetaL language.","tags":["ABZ'10"],"title":"AsmetaSMV: A Way to Link High-Level ASM Models to Low-Level NuSMV Specifications","type":"publication"},{"authors":["Jameleddine Hassine"],"categories":[],"content":"Abstract Scenario-driven requirement specifications are widely used to capture and represent high-level requirements. Timed Use Case Maps (TUCM) is a high-level scenario based modeling technique that can be used to capture and integrate behavioral and time-related aspects at a high level of abstraction. The Timed Use Case Maps language assumes durational semantics which introduces semantic variation points when dealing with concurrent flows. In this paper, we introduce three AsmL-based operational semantics, making the semantic variation points of TUCM concurrent behavior explicit. The proposed semantics are illustrated using an example.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_4.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Hassine10, author = {Jameleddine Hassine}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {AsmL-Based Concurrency Semantic Variations for Timed Use Case Maps}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {34--46}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_4}, doi = {10.1007/978-3-642-11811-1\\_4}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Hassine10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"9331a096512350d609048a1777efa22c","permalink":"/publication/hassine10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/hassine10/","section":"publication","summary":"Abstract Scenario-driven requirement specifications are widely used to capture and represent high-level requirements. Timed Use Case Maps (TUCM) is a high-level scenario based modeling technique that can be used to capture and integrate behavioral and time-related aspects at a high level of abstraction.","tags":["ABZ'10"],"title":"AsmL-Based Concurrency Semantic Variations for Timed Use Case Maps","type":"publication"},{"authors":["David Déharbe"],"categories":[],"content":"Abstract Software development in B and Event-B generates proof obligations that have to be discharged using theorem provers. The cost of such developments therefore depends directly on the degree of automation and efficiency of theorem proving techniques for the logics in which these lemmas are expressed. This paper presents and formalizes an approach to transform a class of proof obligations generated in the Rodin platform in a language that can be addressed by state-of-the-art SMT solvers. The work presented in the paper handles proof obligations with Booleans, integer arithmetics and basic sets.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_17.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Deharbe10, author = {David D{\\'{e}}harbe}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Automatic Verification for a Class of Proof Obligations with SMT-Solvers}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {217--230}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_17}, doi = {10.1007/978-3-642-11811-1\\_17}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Deharbe10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"841a2f2815b823d88e7cecf133ac62be","permalink":"/publication/deharbe10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/deharbe10/","section":"publication","summary":"Abstract Software development in B and Event-B generates proof obligations that have to be discharged using theorem provers. The cost of such developments therefore depends directly on the degree of automation and efficiency of theorem proving techniques for the logics in which these lemmas are expressed.","tags":["ABZ'10"],"title":"Automatic Verification for a Class of Proof Obligations with SMT-Solvers","type":"publication"},{"authors":["Jacques Julliand","Nicolas Stouls","Pierre-Christophe Bué","Pierre-Alain Masson"],"categories":[],"content":"Abstract In a model-based testing approach as well as for the verification of properties by model-checking, B models provide an interesting solution. But for industrial applications, the size of their state space often makes them hard to handle. To reduce the amount of states, an abstraction function can be used, often combining state variable elimination and domain abstractions of the remaining variables. This paper illustrates a computer aided abstraction process that combines syntactic and semantic abstraction functions. The first function syntactically transforms a B event system M into an abstract one A, and the second one transforms a B event system into a Symbolic Labelled Transition System (SLTS). The syntactic transformation suppresses some variables in M. This function is correct in the sense that A is refined by M. A process that combines the syntactic and semantic abstractions has been experimented. It significantly reduces the time cost of semantic abstraction computation. This abstraction process allows for verifying safety properties by model-checking or for generating abstract tests. These tests are generated by a coverage criteria such as all states or all transitions of an SLTS.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_41.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{JulliandSBM10, author = {Jacques Julliand and Nicolas Stouls and Pierre{-}Christophe Bu{\\'{e}} and Pierre{-}Alain Masson}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {B Model Abstraction Combining Syntactic and Semantic Methods}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {408}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_41}, doi = {10.1007/978-3-642-11811-1\\_41}, timestamp = {Sun, 02 Oct 2022 15:55:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/JulliandSBM10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"291cccf75c340f8baaadb1de1c1e9d79","permalink":"/publication/julliandsbm10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/julliandsbm10/","section":"publication","summary":"Abstract In a model-based testing approach as well as for the verification of properties by model-checking, B models provide an interesting solution. But for industrial applications, the size of their state space often makes them hard to handle.","tags":["ABZ'10"],"title":"B Model Abstraction Combining Syntactic and Semantic Methods","type":"publication"},{"authors":["David Michel 0001","Frédéric Gervais","Pierre Valarcher"],"categories":[],"content":"Abstract We aim at extending the B language in order to build ASM programs which are correct with respect to B-like logical specifications. On the one hand, the main strengths of the B formal method are: i) the ability to express logical statements, and ii) the construction of a correct implementation by refinement. On the other hand, from our viewpoint, the striking aspects of ASM are the non-bounded outer loop that can reach the fixed point of a program and the power to express naturally any kind of (sequential) algorithms.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_29.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MichelGV10, author = {David Michel and Fr{\\'{e}}d{\\'{e}}ric Gervais and Pierre Valarcher}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {{B-ASM:} Specification of {ASM} {\\`{a}} la {B}}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {391}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_29}, doi = {10.1007/978-3-642-11811-1\\_29}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/MichelGV10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"95b7636fc4273cf486aa22f781b74f55","permalink":"/publication/michelgv10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/michelgv10/","section":"publication","summary":"Abstract We aim at extending the B language in order to build ASM programs which are correct with respect to B-like logical specifications. On the one hand, the main strengths of the B formal method are: i) the ability to express logical statements, and ii) the construction of a correct implementation by refinement.","tags":["ABZ'10"],"title":"B-ASM: Specification of ASM à la B","type":"publication"},{"authors":["Michael Altenhofen","Roozbeh Farahbod"],"categories":[],"content":"Abstract Scenarios have been used in various stages of the software development process, in particular in requirement elicitation and software validation and testing. In this paper, we present our recent work on the specification, design and implementation of a CoreASM plugin, called Bârun, that offers a powerful scripting language on top of the CoreASM extensible modeling framework and tool environment for high-level design and analysis of distributed systems. We illustrate the application of Bârun and demonstrate its features using an industrial case study.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_5.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{AltenhofenF10, author = {Michael Altenhofen and Roozbeh Farahbod}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {B{\\^{a}}run: {A} Scripting Language for CoreASM}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {47--60}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_5}, doi = {10.1007/978-3-642-11811-1\\_5}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/AltenhofenF10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"6e62c3bd1e0f54c83330869eb6b51604","permalink":"/publication/altenhofenf10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/altenhofenf10/","section":"publication","summary":"Abstract Scenarios have been used in various stages of the software development process, in particular in requirement elicitation and software validation and testing. In this paper, we present our recent work on the specification, design and implementation of a CoreASM plugin, called Bârun, that offers a powerful scripting language on top of the CoreASM extensible modeling framework and tool environment for high-level design and analysis of distributed systems.","tags":["ABZ'10"],"title":"Bârun: A Scripting Language for CoreASM","type":"publication"},{"authors":["Anaheed Ayoub","Ayman M. Wahba","Ashraf M. Salem","Mohamed A. Sheirah"],"categories":[],"content":"Abstract There are two available approaches to automatically generate implementation code from timed automata model. The first approacch is implemented and attached to TIMES tool [1]. We will call this approach “TIMES approach”. While the second approach is based on using B-method [2] and its available code generation tool [3]. We will call this approach “B-method approach”. We select the model of the production cell to be used as a case study for the comparison between these two approaches. The same production cell model has been used against both approaches. The B-method approach generates platform independent code [4]. So we select the generated code using TIMES to be platform independent too for the comparison purpose. For the B-method approach, we use the deterministic semantic of timed automata which is used for TIMES code generation as given in [5]. This semantic controls the selection of the next executed function. The using of this deterministic mechanism is generally not needed for the code generated by the B-method approach. But we use it as it is the implemented mechanism for the TIMES approach. So we select to use it for comparison purpose. By running the implementation code generated using the B-method approach, it works fine as far as we run and no property violation could be found. On the other hand the code generated using TIMES approach runs successfully for the first 10 action transitions and then it progresses the time infinitely. This means that the system deadlocked, so it violates the first property of the model. While the first property is to guarantee that the system is deadlock free. This deadlock is due to the mishandling of the committed and urgent states [6]. The introduced comparison gave a result that the approach based on the using of B-method generates a verified code (by mean of simulation) and handles more timed automata features.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_37.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{AyoubWSS10, author = {Anaheed Ayoub and Ayman M. Wahba and Ashraf M. Salem and Mohamed A. Sheirah}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Code Synthesis for Timed Automata: {A} Comparison Using Case Study}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {403}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_37}, doi = {10.1007/978-3-642-11811-1\\_37}, timestamp = {Tue, 07 May 2024 20:13:31 +0200}, biburl = {https://dblp.org/rec/conf/asm/AyoubWSS10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e0fa0cc9e08f32da8d34318adf0475bb","permalink":"/publication/ayoubwss10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/ayoubwss10/","section":"publication","summary":"Abstract There are two available approaches to automatically generate implementation code from timed automata model. The first approacch is implemented and attached to TIMES tool [1]. We will call this approach “TIMES approach”.","tags":["ABZ'10"],"title":"Code Synthesis for Timed Automata: A Comparison Using Case Study","type":"publication"},{"authors":["Michael Vernon","Frank Zeyda","Ana Cavalcanti 0001"],"categories":[],"content":"Abstract We investigate the use of ClawZ, a suite of tools for the verification of implementations of control laws, to construct formal models for control systems in the area of communications and signal-processing intensive applications. Whereas ClawZ has been successfully applied to verify control components in avionic systems, special requirements need to be identified and addressed to extend its use to the aforementioned application domain. This gives rise to several extensions, which we explain and subsequently validate by constructing the Z model of a software-defined radio communication device. The experience reported provides insight into general issues surrounding the use and extension of ClawZ.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_25.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{VernonZC10, author = {Michael Vernon and Frank Zeyda and Ana Cavalcanti}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Communication Systems in ClawZ}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {334--348}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_25}, doi = {10.1007/978-3-642-11811-1\\_25}, timestamp = {Mon, 05 Feb 2024 20:35:41 +0100}, biburl = {https://dblp.org/rec/conf/asm/VernonZC10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"a7f54c3f77fba1299b9cf4ff9a997acc","permalink":"/publication/vernonzc10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/vernonzc10/","section":"publication","summary":"Abstract We investigate the use of ClawZ, a suite of tools for the verification of implementations of control laws, to construct formal models for control systems in the area of communications and signal-processing intensive applications.","tags":["ABZ'10"],"title":"Communication Systems in ClawZ","type":"publication"},{"authors":["Mamoun Filali-Amine","Julia Lawall"],"categories":[],"content":"Abstract We study the definition and the mapping of an AADL subset: the so called synchronous subset. We show that the data port protocol used for delayed and immediate connections between periodic threads can be interpreted in a synchronous way. In this paper, we formalize this interpretation and study the development of its mapping such that the original synchronous semantics is preserved. For that purpose, we use refinements through the Event B method.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_19.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Filali-AmineL10, author = {Mamoun Filali{-}Amine and Julia Lawall}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Development of a Synchronous Subset of {AADL}}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {245--258}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_19}, doi = {10.1007/978-3-642-11811-1\\_19}, timestamp = {Mon, 17 Jan 2022 15:20:19 +0100}, biburl = {https://dblp.org/rec/conf/asm/Filali-AmineL10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f97c61cca444c3fb076fe19276b4d854","permalink":"/publication/filali-aminel10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/filali-aminel10/","section":"publication","summary":"Abstract We study the definition and the mapping of an AADL subset: the so called synchronous subset. We show that the data port protocol used for delayed and immediate connections between periodic threads can be interpreted in a synchronous way.","tags":["ABZ'10"],"title":"Development of a Synchronous Subset of AADL","type":"publication"},{"authors":["Thai Son Hoang","Jean-Raymond Abrial"],"categories":[],"content":"Abstract We present here a case study developing a parallel program. The approach that we use combines refinement and decomposition techniques. This involves in the first step to abstractly specify the aim of the program, then subsequently introduce shared information between sub-processes via refinement. Afterwards, decomposition is applied to split the resulting model into sub-models for different processes. These sub-models are later independently developed using refinement. Our approach aids the understanding of parallel programs and reduces the complexity in their proofs of correctness.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_24.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{HoangA10, author = {Thai Son Hoang and Jean{-}Raymond Abrial}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Event-B Decomposition for Parallel Programs}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {319--333}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_24}, doi = {10.1007/978-3-642-11811-1\\_24}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/HoangA10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c0e5e463bba637c6da2c339ae4a916d7","permalink":"/publication/hoanga10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/hoanga10/","section":"publication","summary":"Abstract We present here a case study developing a parallel program. The approach that we use combines refinement and decomposition techniques. This involves in the first step to abstractly specify the aim of the program, then subsequently introduce shared information between sub-processes via refinement.","tags":["ABZ'10"],"title":"Event-B Decomposition for Parallel Programs","type":"publication"},{"authors":["James R. Williams","Fiona A. C. Polack","Richard F. Paige"],"categories":[],"content":"Abstract Software engineering diagrams are hard to verify and formally analyse, often due to inadequately defined diagram semantics: the semantics often does not enable formal analysis, or may be under specified to a degree that does not allow useful properties to be checked.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_46.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{WilliamsPP10, author = {James R. Williams and Fiona A. C. Polack and Richard F. Paige}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Formal Analysis in Model Management: Exploiting the Power of {CZT}}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {414}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_46}, doi = {10.1007/978-3-642-11811-1\\_46}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/WilliamsPP10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"8798581937a63c14af5a60114a002f90","permalink":"/publication/williamspp10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/williamspp10/","section":"publication","summary":"Abstract Software engineering diagrams are hard to verify and formally analyse, often due to inadequately defined diagram semantics: the semantics often does not enable formal analysis, or may be under specified to a degree that does not allow useful properties to be checked.","tags":["ABZ'10"],"title":"Formal Analysis in Model Management: Exploiting the Power of CZT","type":"publication"},{"authors":["Osman Hasan","Sofiène Tahar"],"categories":[],"content":"Abstract Traditionally, simulation is used to perform probabilistic analysis. However, it provides less accurate results and cannot handle large-scale problems due to the enormous CPU time requirements. Recently, a significant amount of formalization has been done in higher-order logic that allows us to conduct precise probabilistic analysis using theorem proving and thus overcome the limitations of the simulation. Some major contributions include the formalization of both discrete and continuous random variables and the verification of some of their corresponding probabilistic and statistical properties. This paper describes the infrastructures behind these capabilities and their utilization to conduct the probabilistic analysis of real-world systems.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_2.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{HasanT10, author = {Osman Hasan and Sofi{\\`{e}}ne Tahar}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Formal Probabilistic Analysis: {A} Higher-Order Logic Based Approach}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {2--19}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_2}, doi = {10.1007/978-3-642-11811-1\\_2}, timestamp = {Fri, 09 Apr 2021 18:50:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/HasanT10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f653d1b7ec069ed0d32fffc93e957961","permalink":"/publication/hasant10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/hasant10/","section":"publication","summary":"Abstract Traditionally, simulation is used to perform probabilistic analysis. However, it provides less accurate results and cannot handle large-scale problems due to the enormous CPU time requirements. Recently, a significant amount of formalization has been done in higher-order logic that allows us to conduct precise probabilistic analysis using theorem proving and thus overcome the limitations of the simulation.","tags":["ABZ'10"],"title":"Formal Probabilistic Analysis: A Higher-Order Logic Based Approach","type":"publication"},{"authors":["Mark Slaymaker","David J. Power","Andrew Simpson 0001"],"categories":[],"content":"Abstract The topic of access control has received a new lease of life in recent years as the need for assurance that the correct access control policy is in place is seen by many as crucial to providing assurance to individuals that their data is being treated appropriately. This trend is likely to continue with the increase in popularity of social networking sites and shifts to ‘cloud’-like commercial services: in both contexts, a clear statement of “who can do what” to one’s data is key in engendering trust. While approaches such as role-based access control (RBAC) provide a degree of abstraction, therefore increasing manageability and accessibility, policy languages such as the XML-based XACML provide greater degrees of expressibility—and, as a result, increased complexity. In this paper we explore how the mutual benefits of both RBAC and XACML, and Alloy and Z, may be used to best effect. RBAC is used as an accessible conceptual model; XACML is used as a language of implementation. Our concern is to facilitate the construction and reuse of role-based policies, which may subsequently be deployed in terms of XACML. We wish to provide assurance that these representations and transformations are, in some sense, correct. To this end, we consider formal models of both RBAC and XACML in terms of Z. We also describe how we have taken initial steps in utilising the Alloy Analyzer tool to provide a level of assurance that the two representations are consistent.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_26.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SlaymakerPS10, author = {Mark Slaymaker and David J. Power and Andrew Simpson}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Formalising and Validating RBAC-to-XACML Translation Using Lightweight Formal Methods}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {349--362}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_26}, doi = {10.1007/978-3-642-11811-1\\_26}, timestamp = {Thu, 20 Jun 2024 12:26:13 +0200}, biburl = {https://dblp.org/rec/conf/asm/SlaymakerPS10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"30ffcd9e1b397fab296470c8537263f3","permalink":"/publication/slaymakerps10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/slaymakerps10/","section":"publication","summary":"Abstract The topic of access control has received a new lease of life in recent years as the need for assurance that the correct access control policy is in place is seen by many as crucial to providing assurance to individuals that their data is being treated appropriately.","tags":["ABZ'10"],"title":"Formalising and Validating RBAC-to-XACML Translation Using Lightweight Formal Methods","type":"publication"},{"authors":["Abderrahman Matoussi","Dorian Petit"],"categories":[],"content":"Abstract The aim of this paper is to give some feedback about the B specification [1] of a localization software component which is one of the most critical parts in the land transportation system. The main difficulties when we develop a localization component is: (i) to find the correct algorithm that merges positioning data (ii) to take into account all the properties we have to deal with. At this stage, we think that a semi formal model such as KAOS [2], a goal-based requirements engineering method, will be very useful in order to have guidelines on how to do. For that, we will just focus on the architecture of the B specifications and how using KAOS help us to build it. Since goals play an important role in requirements engineering process, rather than establishing traceability from the KAOS requirements model as a whole, we propose to establish traceability from individual goals that are part of the KAOS goal model. The main idea is to specify a correspondence rule between each concept of the goal model and B elements. Up to now, we consider only functional goals of type Achieve [2]. A B machine is associated to each goal. This machine contains an operation that “realizes” the goal; i.e. it describes the “work” to perform to reach the goal, in terms of generalized substitutions. The refinement of a goal is represented by a B refinement machine that refines the machine; the abstract operation is refined by a concrete one. This operation is built by combining operations of the machines that correspond to the sub-goals of the more abstract goal and are included in the B machine via the inclusion relationship. The nature of the combination depends on the goal refinement pattern (Milestone, AND, OR). The reader can refer to [3] for more details. The main contribution of our approach is that it establishes the first brick toward the construction of the bridge between the nonformal and the formal worlds as narrow and concise as possible. Furthermore, by discharging the proof obligations generated by the B refinement process, we can prove some properties of consistency on the goal model. Regarding the different KAOS goal model concepts, we need now to consider the translation of the concepts of domain properties and non functional goals.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_36.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MatoussiP10, author = {Abderrahman Matoussi and Dorian Petit}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Improving Traceability between {KAOS} Requirements Models and {B} Specifications}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {401--402}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_36}, doi = {10.1007/978-3-642-11811-1\\_36}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/MatoussiP10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"ebdf67946cf860e751f039509dc792ed","permalink":"/publication/matoussip10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/matoussip10/","section":"publication","summary":"Abstract The aim of this paper is to give some feedback about the B specification [1] of a localization software component which is one of the most critical parts in the land transportation system.","tags":["ABZ'10"],"title":"Improving Traceability between KAOS Requirements Models and B Specifications","type":"publication"},{"authors":["Alessandro Cavalcante Gurgel","Valério Gutemberg de Medeiros","Marcel Vinícius Medeiros Oliveira","David Boris Paul Déharbe"],"categories":[],"content":"Abstract An important frequent task in both Z and B is the proof of verification conditions (VCs). In Z and B, VCs can be predicates to be discharged as a result of refinement steps, some proof about initialization properties or domain checking. Ideally, a tool that supports any Z and B technique should automatically discharge as many VCs as possible. Here, we present ZB2SMT, a Java package designed to clearly and directly integrate both Z and B tools to the satisfiability module theory (SMT) solvers such as veriT [1], a first-order logic (FOL) theorem prover that accepts the SMT syntax [4] as input. By having the SMT syntax as target we are able to easily integrate with further eleven automatic theorem provers. ZB2SMT is currently used by Batcave [2], an open source tool that generates VCs for the B method and CRefine [3], a tool that supports the Circus refinement calculus. Much of the VCs generated to validate the refinement law applications, are based on FOL predicates. Hence, CRefine uses the ZB2SMT package to automatically prove such predicates. The package integrates elements of Z and B predicates in a common language and transforms these predicates into SMT syntax. In this process, a SMT file is generated containing the predicate and some definitions. It is sent to a chosen SMT solver which yields a Boolean value for the predicate or it can be sent to several SMT solvers in a parallel approach. In order to improve the performance of the proof system, ZB2SMT has a module that can call different instances of solvers at different computers, according to a configuration file. It improves the proof process by allowing different strategies to be performed in parallel, reducing the verification time.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_45.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{GurgelMOD10, author = {Alessandro Cavalcante Gurgel and Val{\\'{e}}rio Gutemberg de Medeiros and Marcel Vin{\\'{\\i}}cius Medeiros Oliveira and David Boris Paul D{\\'{e}}harbe}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Integrating SMT-Solvers in {Z} and {B} Tools}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {412--413}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_45}, doi = {10.1007/978-3-642-11811-1\\_45}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/GurgelMOD10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"a4cd125aca67a31d50607ea029ed2d83","permalink":"/publication/gurgelmod10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/gurgelmod10/","section":"publication","summary":"Abstract An important frequent task in both Z and B is the proof of verification conditions (VCs). In Z and B, VCs can be predicates to be discharged as a result of refinement steps, some proof about initialization properties or domain checking.","tags":["ABZ'10"],"title":"Integrating SMT-Solvers in Z and B Tools","type":"publication"},{"authors":["Razieh Nokhbeh Zaeem","Sarfraz Khurshid"],"categories":[],"content":"Abstract While several different techniques utilize specifications to check correctness of programs before they are deployed, the use of specifications in deployed software is more limited, largely taking the form of runtime checking where assertions form a basis for detecting erroneous program states and terminating erroneous executions in failures. Recent approaches [1] proposed constraint-based repair where data structure constraints are used to repair erroneous states. However, data structure constraints are too weak a form of specification for error recovery in general. We have developed a specification-based approach for data structure repair, which allows repairing erroneous executions in deployed software by repairing erroneous states. The key novelty is our support for rich behavioral specifications, such as those that relate pre-states with post-states to accurately specify expected behavior and hence to enable precise repair.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_34.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ZaeemK10, author = {Razieh Nokhbeh Zaeem and Sarfraz Khurshid}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Introducing Specification-Based Data Structure Repair Using Alloy}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {398--399}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_34}, doi = {10.1007/978-3-642-11811-1\\_34}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/ZaeemK10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"6aa83d5753d1650311ade35d75442b17","permalink":"/publication/zaeemk10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/zaeemk10/","section":"publication","summary":"Abstract While several different techniques utilize specifications to check correctness of programs before they are deployed, the use of specifications in deployed software is more limited, largely taking the form of runtime checking where assertions form a basis for detecting erroneous program states and terminating erroneous executions in failures.","tags":["ABZ'10"],"title":"Introducing Specification-Based Data Structure Repair Using Alloy","type":"publication"},{"authors":["Mark C. Reynolds"],"categories":[],"content":"Abstract The Java programming language has been widely described as secure by design. Nevertheless, a number of serious security vulnerabilities have been discovered in Java, particularly in the component known as the Bytecode Verifier. This paper describes a method for representing Java security constraints using the Alloy modeling language. It further describes a system for performing a security analysis on any block of Java bytecodes by converting the bytes into relation initializers in Alloy. Any counterexamples found by the Alloy analyzer correspond directly to insecure code. Analysis of a real world malicious applet is given to demonstrate the efficacy of the approach. This type of analysis represents a significant departure from standard malware detection methods based on signatures or anomaly detection.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_12.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Reynolds10, author = {Mark C. Reynolds}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Lightweight Modeling of Java Virtual Machine Security Constraints}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {146--159}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_12}, doi = {10.1007/978-3-642-11811-1\\_12}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Reynolds10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"86336c5ca9b449a8abc5c97c74a13cf3","permalink":"/publication/reynolds10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/reynolds10/","section":"publication","summary":"Abstract The Java programming language has been widely described as secure by design. Nevertheless, a number of serious security vulnerabilities have been discovered in Java, particularly in the component known as the Bytecode Verifier.","tags":["ABZ'10"],"title":"Lightweight Modeling of Java Virtual Machine Security Constraints","type":"publication"},{"authors":["Néstor Cataño","Camilo Rueda"],"categories":[],"content":"Abstract This paper presents Matelas, a B predicate calculus definition for social networking, modelling social-network content, privacy policies, social-networks friendship relations, and how these relations effect users’ policies. The work presented in this paper is part of an ongoing work that aims at using several formal methods tools and techniques to develop a full-fledged social-network service implementing stipulated policies. Although we employed Atelier B to write Matelas, plans are to port it to Event B and to use Rodin to implement the social-network application.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_20.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{CatanoR10, author = {N{\\'{e}}stor Cata{\\~{n}}o and Camilo Rueda}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Matelas: {A} Predicate Calculus Common Formal Definition for Social Networking}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {259--272}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_20}, doi = {10.1007/978-3-642-11811-1\\_20}, timestamp = {Sat, 19 Oct 2019 20:28:13 +0200}, biburl = {https://dblp.org/rec/conf/asm/CatanoR10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"56370b3f4ca723e9c6902aef94d29f1e","permalink":"/publication/catanor10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/catanor10/","section":"publication","summary":"Abstract This paper presents Matelas, a B predicate calculus definition for social networking, modelling social-network content, privacy policies, social-networks friendship relations, and how these relations effect users’ policies. The work presented in this paper is part of an ongoing work that aims at using several formal methods tools and techniques to develop a full-fledged social-network service implementing stipulated policies.","tags":["ABZ'10"],"title":"Matelas: A Predicate Calculus Common Formal Definition for Social Networking","type":"publication"},{"authors":["Issam Maamria","Michael J. Butler","Andrew Edmunds","Abdolbaghi Rezazadeh"],"categories":[],"content":"Abstract Event-B [1] is a formalism for discrete system modelling. The Rodin platform [2] provides a toolset to carry out specification, refinement and proof in Event-B. The importance of proofs as part of formal modelling cannot be emphasised enough, and as such, it is imperative to provide effective tool support for it. An important aspect of this support is the extensibility of the prover, and more pressingly, how its soundness is preserved while allowing extensibility. Rodin has a limited support for adding rules as this requires (a) a deep understanding of the internal architecture and (b) knowledge of the Java language. Our approach attempts to provide support for user-defined proof rules. We initially focus on supporting rewrite rules to enhance the rewriting capabilities of Rodin. To achieve this objective, we introduce a theory construct distinct from contexts and machines. The theory construct provides a platform for the users to define rewrite rules both conditional and unconditional. As part of rule definition, users decide whether the rule is to be applied automatically or interactively. Each defined rule gives rise to proof obligations that serve to verify its conservativity. In this respect, it is required that validity and well-definedness are preserved by rules. After the conservativity of all rules contained in a theory is established, the theory can then be deployed and available to the proving activity. In order to apply rewrite rules, it is necessary to single out applicable rules to any given sequent. This is achieved through a pattern matching mechanism which is implemented as an extension to Rodin. Our approach has two advantages. Firstly, it offers a uniform mechanism to add proof rule without the need to write Java code. Secondly, it provides a means to verify added rules using proof obligations. Our work is still in progress, and research has to be carried out to (a) cover a larger set of rewrite and inference rules, and (b) provide guidelines to help the theory developer with deciding whether a given rule should be applied automatically.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_40.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MaamriaBER10, author = {Issam Maamria and Michael J. Butler and Andrew Edmunds and Abdolbaghi Rezazadeh}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {On an Extensible Rule-Based Prover for Event-B}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {407}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_40}, doi = {10.1007/978-3-642-11811-1\\_40}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/MaamriaBER10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"0b3bc4825bc1c3742859e4929baf71ab","permalink":"/publication/maamriaber10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/maamriaber10/","section":"publication","summary":"Abstract Event-B [1] is a formalism for discrete system modelling. The Rodin platform [2] provides a toolset to carry out specification, refinement and proof in Event-B. The importance of proofs as part of formal modelling cannot be emphasised enough, and as such, it is imperative to provide effective tool support for it.","tags":["ABZ'10"],"title":"On an Extensible Rule-Based Prover for Event-B","type":"publication"},{"authors":["David J. Power","Mark Slaymaker","Andrew Simpson 0001"],"categories":[],"content":"Abstract Cloud computing is a conceptual paradigm that is receiving a great deal of interest from a variety of major commercial organisations. By building systems which run within cloud computing infrastructures, problems related to scalability and availability can be reduced. At the time of writing, Amazon Web Services (AWS) [1] is one of the most widely used infrastructures. AWS consists of a number of different components, which can be used in combination or alone. One usage model is to use Elastic Compute Cloud instances to process information and to use the Simple Queue Service (SQS) to handle requests and responses.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_31.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{PowerSS10, author = {David J. Power and Mark Slaymaker and Andrew Simpson}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {On the Modelling and Analysis of Amazon Web Services Access Policies}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {394}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_31}, doi = {10.1007/978-3-642-11811-1\\_31}, timestamp = {Thu, 20 Jun 2024 12:26:13 +0200}, biburl = {https://dblp.org/rec/conf/asm/PowerSS10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"a00599d413402ba8f0473bb14d6f7641","permalink":"/publication/powerss10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/powerss10/","section":"publication","summary":"Abstract Cloud computing is a conceptual paradigm that is receiving a great deal of interest from a variety of major commercial organisations. By building systems which run within cloud computing infrastructures, problems related to scalability and availability can be reduced.","tags":["ABZ'10"],"title":"On the Modelling and Analysis of Amazon Web Services Access Policies","type":"publication"},{"authors":["Nicolás Rosner","Juan P. Galeotti","Carlos López Pombo","Marcelo F. Frias"],"categories":[],"content":"Abstract Alloy [Jac02a] is a widely adopted relational modeling language. Its appealing syntax and the support provided by the Alloy Analyzer [Jac02b] tool make model analysis accessible to a public of non-specialists. A model and property are translated to a propositional formula, which is fed to a SAT-solver to search for counterexamples. The translation strongly depends on user-provided bounds for data domains called scopes - the larger the scopes, the more confident the user is about the correctness of the model. Due to the intrinsic complexity of the SAT-solving step, it is often the case that analyses do not scale well enough to remain feasible as scopes grow.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_33.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{RosnerGPF10, author = {Nicol{\\'{a}}s Rosner and Juan P. Galeotti and Carlos L{\\'{o}}pez Pombo and Marcelo F. Frias}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {ParAlloy: Towards a Framework for Efficient Parallel Analysis of Alloy Models}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {396--397}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_33}, doi = {10.1007/978-3-642-11811-1\\_33}, timestamp = {Mon, 03 Mar 2025 20:58:01 +0100}, biburl = {https://dblp.org/rec/conf/asm/RosnerGPF10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"6bc7a87a9445f69d62c4edf15a4a6687","permalink":"/publication/rosnergpf10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/rosnergpf10/","section":"publication","summary":"Abstract Alloy [Jac02a] is a widely adopted relational modeling language. Its appealing syntax and the support provided by the Alloy Analyzer [Jac02b] tool make model analysis accessible to a public of non-specialists.","tags":["ABZ'10"],"title":"ParAlloy: Towards a Framework for Efficient Parallel Analysis of Alloy Models","type":"publication"},{"authors":["Steve Dunne","Frank Zeyda"],"categories":[],"content":"Abstract We propose what is essentially a recasting of Circus, the Z-and-CSP-based concurrent language for refinement, into a B context by means of a modest extension of classical B which introduces a new structural component called a reactive-B process. This specifies the channels via which the process can communicate with its environment, and actions by which its behaviour is specified. Such actions are expressed in a new action notation in the same syntactic spirit as B’s Abstract Machine Notation, but with a similar Unifying Theories of Programming relational semantics to that of the actions of Circus. Crucially, by including ordinary abstract machines these reactive-B processes can also acquire persistent state, which their actions can manipulate by invoking the operations of those included machines.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_23.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DunneZ10, author = {Steve Dunne and Frank Zeyda}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Reactivising Classical {B}}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {302--318}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_23}, doi = {10.1007/978-3-642-11811-1\\_23}, timestamp = {Mon, 05 Feb 2024 20:35:41 +0100}, biburl = {https://dblp.org/rec/conf/asm/DunneZ10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"ebff1da50e747a7a217658f6eff4800a","permalink":"/publication/dunnez10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/dunnez10/","section":"publication","summary":"Abstract We propose what is essentially a recasting of Circus, the Z-and-CSP-based concurrent language for refinement, into a B context by means of a modest extension of classical B which introduces a new structural component called a reactive-B process.","tags":["ABZ'10"],"title":"Reactivising Classical B","type":"publication"},{"authors":["Andrew Ireland","Gudmund Grov","Michael J. Butler"],"categories":[],"content":"Abstract The activities of formal modelling and reasoning are closely related. But while the rigour of building formal models brings significant benefits, formal reasoning remains a major barrier to the wider acceptance of formalism within design. Here we propose reasoned modelling critics – a technique which aims to abstract away from the complexities of low-level proof obligations, and provide high-level modelling guidance to designers when proofs fail. Inspired by proof planning critics, the technique combines proof-failure analysis with modelling heuristics. Here, we present the details of our proposal and outline future plans.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_15.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{IrelandGB10, author = {Andrew Ireland and Gudmund Grov and Michael J. Butler}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Reasoned Modelling Critics: Turning Failed Proofs into Modelling Guidance}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {189--202}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_15}, doi = {10.1007/978-3-642-11811-1\\_15}, timestamp = {Sun, 02 Jun 2019 21:23:59 +0200}, biburl = {https://dblp.org/rec/conf/asm/IrelandGB10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"1c51ed176864d03382b05d65e0f35200","permalink":"/publication/irelandgb10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/irelandgb10/","section":"publication","summary":"Abstract The activities of formal modelling and reasoning are closely related. But while the rigour of building formal models brings significant benefits, formal reasoning remains a major barrier to the wider acceptance of formalism within design.","tags":["ABZ'10"],"title":"Reasoned Modelling Critics: Turning Failed Proofs into Modelling Guidance","type":"publication"},{"authors":["Stefan Hallerstede","Michael Leuschel","Daniel Plagge"],"categories":[],"content":"Abstract We provide a detailed description of refinement in Event-B, both as a contribution in itself and as a foundation for the approach to simultaneous animation of multiple levels of refinement that we propose. We present an algorithm for simultaneous multi-level animation of refinement, and show how it can be used to detect a variety of errors that occur frequently when using refinement. The algorithm has been implemented in ProB and we applied it to several case studies, showing that multi-level animation is tractable also on larger models.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_22.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{HallerstedeLP10, author = {Stefan Hallerstede and Michael Leuschel and Daniel Plagge}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Refinement-Animation for Event-B - Towards a Method of Validation}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {287--301}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_22}, doi = {10.1007/978-3-642-11811-1\\_22}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/HallerstedeLP10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e526369d9e9e694abd8fbcd05be6edb6","permalink":"/publication/hallerstedelp10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/hallerstedelp10/","section":"publication","summary":"Abstract We provide a detailed description of refinement in Event-B, both as a contribution in itself and as a foundation for the approach to simultaneous animation of multiple levels of refinement that we propose.","tags":["ABZ'10"],"title":"Refinement-Animation for Event-B - Towards a Method of Validation","type":"publication"},{"authors":["Waël Hassan","Nadera Slimani","Kamel Adi","Luigi Logrippo"],"categories":[],"content":"Abstract This paper introduces the subject of secrecy models development by transformation, with formal validation. In an enterprise, constructing a secrecy model is a participatory exercise involving policy makers and implementers. Policy makers iteratively provide business governance requirements, while policy implementers formulate rules of access in computer-executable terms. The process is error prone and may lead to undesirable situations thus threatening the security of the enterprise. At each iteration, a security officer (SO) needs to guarantee business continuity by ensuring property preservation; as well, he needs to check for potential threats due to policy changes. This paper proposes a method that is meant to address both aspects: the formal analysis of transformation results and the formal proof that transformations are property preserving. UML is used for expressing and transforming models [1], and the Alloy analyzer is used to perform integrity checks [3]. Governance requirements dictate a security policy, that regulates access to information. This policy is implemented by means of secrecy models. Hence, the SO defines the mandatory secrecy rules as a part of enterprise governance model in order to implement security policy. For instance, a secrecy rule may state: higher-ranking officers have read rights to information at lower ranks. Automation helps reduce design errors of combined and complex secrecy models [2]. However, current industry practices do not include precise methods for constructing and validating enterprise governance models. Our research proposes a formal transformation method to construct secrecy models by way of applying transformations to a base UML model (BM). For example, starting from the BM, with only three primitives: Subject/Verb/Object, we can generate RBAC0 in addition to SecureUML [2] model. By way of examples and by means of formal analysis we intend to show that, using our method, a SO is able to build different types of secrecy models and validate them for consistency, in addition to detecting scenarios resulting from unpreserved properties.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_35.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{HassanSAL10, author = {Wa{\\\u0026quot;{e}}l Hassan and Nadera Slimani and Kamel Adi and Luigi Logrippo}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Secrecy {UML} Method for Model Transformations}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {400}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_35}, doi = {10.1007/978-3-642-11811-1\\_35}, timestamp = {Sat, 31 May 2025 23:08:41 +0200}, biburl = {https://dblp.org/rec/conf/asm/HassanSAL10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d9b060fa9422d8fda250983ef55a485f","permalink":"/publication/hassansal10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/hassansal10/","section":"publication","summary":"Abstract This paper introduces the subject of secrecy models development by transformation, with formal validation. In an enterprise, constructing a secrecy model is a participatory exercise involving policy makers and implementers.","tags":["ABZ'10"],"title":"Secrecy UML Method for Model Transformations","type":"publication"},{"authors":["Alban Tiberghien","Philippe Merle","Lionel Seinturier"],"categories":[],"content":"Abstract One of the key research challenges in autonomic computing is to define rigorous mathematical models for specifying, analyzing, and verifying high-level self-* policies. This paper presents the FracToy formal methodology to specify self-configurable component-based systems, and particularly both their component-based architectural description and their self-configuration policies. This rigorous methodology is based on the first-order relational logic, and is implemented with the Alloy formal specification language. The paper presents the different steps of the FracToy methodology and illustrates them on a self-configurable component-based example.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_8.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{TiberghienMS10, author = {Alban Tiberghien and Philippe Merle and Lionel Seinturier}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Specifying Self-configurable Component-Based Systems with FracToy}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {91--104}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_8}, doi = {10.1007/978-3-642-11811-1\\_8}, timestamp = {Sun, 25 Oct 2020 23:07:20 +0100}, biburl = {https://dblp.org/rec/conf/asm/TiberghienMS10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f71464b2361a3d7b32e04a10fda8cc1e","permalink":"/publication/tiberghienms10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/tiberghienms10/","section":"publication","summary":"Abstract One of the key research challenges in autonomic computing is to define rigorous mathematical models for specifying, analyzing, and verifying high-level self-* policies. This paper presents the FracToy formal methodology to specify self-configurable component-based systems, and particularly both their component-based architectural description and their self-configuration policies.","tags":["ABZ'10"],"title":"Specifying Self-configurable Component-Based Systems with FracToy","type":"publication"},{"authors":["Thiago C. de Sousa","Aryldo G. Russo"],"categories":[],"content":"Abstract The B method [1] is gaining visibility in formal methods community due to excellent support for refinement. However, the traceability between the requirements and the formal model is still an issue of this method. To overcome this issue, different solutions have been proposed by researchers. In [2], the authors have presented a traceability between KAOS requirements and B. A mixed solution using natural language and UML-B has been proposed by [3]. However, these approaches use non-standard artifacts for requirement specifications, which we consider a disincentive for convincing designers to adopt formal methods since they must spend time to learn them. So, we propose an approach for mapping requirements to B models from use cases [4], which can be considered as the de-facto industry standard for requirement specifications. We propose that use case scenario sentences must be written using a controlled natural language (CNL) described according our use case transaction definition, which is based on Ochodek’s transaction model [5]. We consider that a transaction is a sequence of four steps actions in a scenario, which starts from the actors request (U) and finishes with the system response (SR). The system validation (SV) and system expletive (SE) actions must also occur within the starting and ending action. The actions help to find out the B components. So, from SV actions we extract the preconditions and from SE actions we derive the operations names and the postconditions. We are not interested in the automatic translation of use cases for formal specifications since there are many natural language ambiguity problems. The intention of our work is to take the use cases as a guideline for starting B specifications. Our main goal is to create a new and complete development process (including deliverables artifacts), namely Be Velopment, for B focusing on agility/usability and we believe that use cases seem to be a good start point.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_44.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SousaR10, author = {Thiago C. de Sousa and Aryldo G. Russo}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Starting {B} Specifications from Use Cases}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {411}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_44}, doi = {10.1007/978-3-642-11811-1\\_44}, timestamp = {Thu, 14 Oct 2021 10:31:49 +0200}, biburl = {https://dblp.org/rec/conf/asm/SousaR10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f5c72e9025fbbf3b0f661b8af9ee2f38","permalink":"/publication/sousar10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/sousar10/","section":"publication","summary":"Abstract The B method [1] is gaining visibility in formal methods community due to excellent support for refinement. However, the traceability between the requirements and the formal model is still an issue of this method.","tags":["ABZ'10"],"title":"Starting B Specifications from Use Cases","type":"publication"},{"authors":["Stefan Hallerstede"],"categories":[],"content":"Abstract Event-B does not provide specific support for the modelling of problems that require some structuring, such as, local variables or sequential ordering of events. All variables need to be declared globally and sequential ordering of events can only be achieved by abstract program counters. This has two unfortunate consequences: such models become less comprehensible — we have to infer sequential ordering from the use of program counters; proof obligation generation does not consider ordering — generating too many proof obligations (although these are usually trivially discharged). In this article we propose a method for specifying structured models avoiding, in particular, the use of abstract program counters. It uses a notation that mainly serves to drive proof obligation generation. However, the notation also describes the structure of a model explicitly. A corresponding graphical notation is introduced that visualises the structure of a model.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_21.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Hallerstede10, author = {Stefan Hallerstede}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Structured Event-B Models and Proofs}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {273--286}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_21}, doi = {10.1007/978-3-642-11811-1\\_21}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Hallerstede10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e5dcecae7e7650a144f5739689bf9b05","permalink":"/publication/hallerstede10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/hallerstede10/","section":"publication","summary":"Abstract Event-B does not provide specific support for the modelling of problems that require some structuring, such as, local variables or sequential ordering of events. All variables need to be declared globally and sequential ordering of events can only be achieved by abstract program counters.","tags":["ABZ'10"],"title":"Structured Event-B Models and Proofs","type":"publication"},{"authors":["Alexei Iliasov","Elena Troubitsyna","Linas Laibinis","Alexander B. Romanovsky","Kimmo Varpaaniemi","Dubravka Ilic","Timo Latvala"],"categories":[],"content":"Abstract Recently, Space Systems Finland has undertaken formal Event B development of a part of the on-board software for the BepiColombo space mission. As a result, lack of modularisation mechanisms in Event B has been identified as a serious obstacle to scalability. One of the main benefits of modularisation is that it allows us to decompose system models into components that can be independently developed. It also helps to manage complexity of models that in the industrial setting are usually very large and difficult to comprehend. On the other hand, modularisation enables reuse of formally developed components in the formal product line development. In this paper we propose a conservative extension of Event B formalism to support modularisation. We demonstrate how our approach can support reuse in the formal development in the space domain.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_14.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{IliasovTLRVIL10, author = {Alexei Iliasov and Elena Troubitsyna and Linas Laibinis and Alexander B. Romanovsky and Kimmo Varpaaniemi and Dubravka Ilic and Timo Latvala}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Supporting Reuse in Event {B} Development: Modularisation Approach}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {174--188}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_14}, doi = {10.1007/978-3-642-11811-1\\_14}, timestamp = {Mon, 05 Feb 2024 20:35:41 +0100}, biburl = {https://dblp.org/rec/conf/asm/IliasovTLRVIL10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"58b2961a24c1dfbc78634c90390a2b21","permalink":"/publication/iliasovtlrvil10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/iliasovtlrvil10/","section":"publication","summary":"Abstract Recently, Space Systems Finland has undertaken formal Event B development of a part of the on-board software for the BepiColombo space mission. As a result, lack of modularisation mechanisms in Event B has been identified as a serious obstacle to scalability.","tags":["ABZ'10"],"title":"Supporting Reuse in Event B Development: Modularisation Approach","type":"publication"},{"authors":["Iain Craig","Egon Börger"],"categories":[],"content":"Abstract A natural encoding of synchronous message exchange with direct wait-control is proved to be equivalent in a distributed environment to a refinement which uses semaphores to implement wait control. The proof uses a most general scheduler, which is left as abstract and assumed to satisfy a few realistic, explicitly stated assumptions. We hope to provide a scheme that can be implemented by current theorem provers.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_3.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{CraigB10, author = {Iain Craig and Egon B{\\\u0026quot;{o}}rger}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Synchronous Message Passing and Semaphores: An Equivalence Proof}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {20--33}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_3}, doi = {10.1007/978-3-642-11811-1\\_3}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/CraigB10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"bcc8980fc793a2655e74eeb28633a564","permalink":"/publication/craigb10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/craigb10/","section":"publication","summary":"Abstract A natural encoding of synchronous message exchange with direct wait-control is proved to be equivalent in a distributed environment to a refinement which uses semaphores to implement wait control. The proof uses a most general scheduler, which is left as abstract and assumed to satisfy a few realistic, explicitly stated assumptions.","tags":["ABZ'10"],"title":"Synchronous Message Passing and Semaphores: An Equivalence Proof","type":"publication"},{"authors":["Joud S. Khoury","Chaouki T. Abdallah","Gregory L. Heileman"],"categories":[],"content":"Abstract Despite the rich literature on network architecture and communication system design, the current practice of describing architectures remains informal and idiosyncratic. Such practice has evolved based on idiomatic terminology and hence, it is failing to provide a formal framework for representing and for reasoning about network architectures. This state of affairs has led to the overloading of architectural terms, and to the emergence of a large body of network architecture proposals with no clear indication of their cross similarities, their compatibility points, their unique properties, and their architectural performance and soundness. Formalizing network architectural descriptions is therefore a timely contribution, and this paper presents a first step in that direction. The paper builds upon architectural style modeling concepts from the software engineering field, and applies them to the network architecture space. Our approach is presented through a case study detailing a formal model for a common class of network architectures. The model uses a simple declarative language based on relations and first-order logic.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_11.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{KhouryAH10, author = {Joud S. Khoury and Chaouki T. Abdallah and Gregory L. Heileman}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Towards Formalizing Network Architectural Descriptions}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {132--145}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_11}, doi = {10.1007/978-3-642-11811-1\\_11}, timestamp = {Wed, 07 Dec 2022 23:14:20 +0100}, biburl = {https://dblp.org/rec/conf/asm/KhouryAH10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"544e2825dc5b8f075e8688e8e86fa1c6","permalink":"/publication/khouryah10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/khouryah10/","section":"publication","summary":"Abstract Despite the rich literature on network architecture and communication system design, the current practice of describing architectures remains informal and idiosyncratic. Such practice has evolved based on idiomatic terminology and hence, it is failing to provide a formal framework for representing and for reasoning about network architectures.","tags":["ABZ'10"],"title":"Towards Formalizing Network Architectural Descriptions","type":"publication"},{"authors":["Nicolas Wu","Andrew Simpson 0001"],"categories":[],"content":"Abstract Many authors have drawn parallels between the relational model of data and the formal description technique Z, yet none of these contributions have managed to be both close to the relational model in terms of providing a practical means of database design and fully formal in terms of providing an appropriate metamodel. We compare these various formalisms, and suggest how the use of the formal template approach of Amálio et al might help to overcome some of the issues faced. We demonstrate the application of this work via a short case study, and suggest further enhancements to the template language.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_27.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{WuS10, author = {Nicolas Wu and Andrew Simpson}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Towards Formally Templated Relational Database Representations in {Z}}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {363--376}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_27}, doi = {10.1007/978-3-642-11811-1\\_27}, timestamp = {Thu, 20 Jun 2024 12:26:13 +0200}, biburl = {https://dblp.org/rec/conf/asm/WuS10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"9236e3b92ef502569515a7ea84a3a1bb","permalink":"/publication/wus10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/wus10/","section":"publication","summary":"Abstract Many authors have drawn parallels between the relational model of data and the formal description technique Z, yet none of these contributions have managed to be both close to the relational model in terms of providing a practical means of database design and fully formal in terms of providing an appropriate metamodel.","tags":["ABZ'10"],"title":"Towards Formally Templated Relational Database Representations in Z","type":"publication"},{"authors":["Atif Mashkoor","Abderrahman Matoussi"],"categories":[],"content":"Abstract The use of formal methods for software development is escalating over the period of time. The input to this formal specification phase is often the documents obtained during the requirements analysis activity which are either textual or semi-formal. Now there is a traceability gap between analysis and specification phases as verification of the semi-formal analysis model is difficult because of poor understandability of lower level of formalism of verification tools and validation of the formal specification is difficult for customers due to their inability to understand formal models. Our objective is to bridge this gap by a gradual introduction of formalism into the requirement model in order to facilitate its validation.We analyse our requirements with KAOS (Knowledge Acquisition in autOmated Specification) [1] which is a goal-oriented methodology for requirements modeling, then we translate the KAOS goal model, following our derived precise semantics [3], into an Event-B [2] formal specification, and finally we rigourously animate the obtained specification in order to validate its conformance to original requirements with the approach defined in [4].\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_38.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MashkoorM10, author = {Atif Mashkoor and Abderrahman Matoussi}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Towards Validation of Requirements Models}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {404}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_38}, doi = {10.1007/978-3-642-11811-1\\_38}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/MashkoorM10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c88c4ef98a85c2e0b4edb0347dc962db","permalink":"/publication/mashkoorm10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/mashkoorm10/","section":"publication","summary":"Abstract The use of formal methods for software development is escalating over the period of time. The input to this formal specification phase is often the documents obtained during the requirements analysis activity which are either textual or semi-formal.","tags":["ABZ'10"],"title":"Towards Validation of Requirements Models","type":"publication"},{"authors":["Jeremy L. Jacob"],"categories":[],"content":"Abstract Safety properties of a system may be specified by constraining the sequences of interactions of the system with its environment. This paper shows how to encode specifications in such a style using Alloy.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_9.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Jacob10, author = {Jeremy L. Jacob}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Trace Specifications in Alloy}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {105--117}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_9}, doi = {10.1007/978-3-642-11811-1\\_9}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Jacob10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"30f72424f7ce2935f65e638f733a2cb1","permalink":"/publication/jacob10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/jacob10/","section":"publication","summary":"Abstract Safety properties of a system may be specified by constraining the sequences of interactions of the system with its environment. This paper shows how to encode specifications in such a style using Alloy.","tags":["ABZ'10"],"title":"Trace Specifications in Alloy","type":"publication"},{"authors":["Petra Malik","Lindsay Groves","Clare Lenihan"],"categories":[],"content":"Abstract Few tools are available to help with the difficult task of validating that a Z specification captures its intended meaning. One tool that has been proven to be useful for validating specifications is the Alloy Analyzer, an interactive tool for checking and visualising Alloy models. However, Z specifications need to be translated to Alloy notation to make use of the Alloy Analyzer. These translations have been performed manually so far, which is a cumbersome and error-prone activity. The aim of this paper is to explore to what extent this process can be automated. The paper identifies a subset of Z that can be straightforwardly translated to Alloy, and the translation for this subset is formalised. More complex constructs, like schemas, are harder to translate. The paper gives a brief overview of the problems, and discusses alternative translation approaches.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_28.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MalikGL10, author = {Petra Malik and Lindsay Groves and Clare Lenihan}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Translating {Z} to Alloy}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {377--390}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_28}, doi = {10.1007/978-3-642-11811-1\\_28}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/MalikGL10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d701d581f571af6acb668f655586f74b","permalink":"/publication/malikgl10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/malikgl10/","section":"publication","summary":"Abstract Few tools are available to help with the difficult task of validating that a Z specification captures its intended meaning. One tool that has been proven to be useful for validating specifications is the Alloy Analyzer, an interactive tool for checking and visualising Alloy models.","tags":["ABZ'10"],"title":"Translating Z to Alloy","type":"publication"},{"authors":["Pascal André","Gilles Ardourel","J. Christian Attiogbé","Arnaud Lanoix"],"categories":[],"content":"Abstract Component-based software engineering is a practical approach to address the issue of building large software by combining existing and new components. However, building reliable software systems from components requires to verify the consistency of components and the correctness of their assemblies.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-642-11811-1_43.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{AndreAAL10, author = {Pascal Andr{\\'{e}} and Gilles Ardourel and J. Christian Attiogb{\\'{e}} and Arnaud Lanoix}, editor = {Marc Frappier and Uwe Gl{\\\u0026quot;{a}}sser and Sarfraz Khurshid and R{\\'{e}}gine Laleau and Steve Reeves}, title = {Using Event-B to Verify the Kmelia Components and Their Assemblies}, booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference, {ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5977}, pages = {410}, publisher = {Springer}, year = {2010}, url = {https://doi.org/10.1007/978-3-642-11811-1\\_43}, doi = {10.1007/978-3-642-11811-1\\_43}, timestamp = {Thu, 14 Oct 2021 10:31:49 +0200}, biburl = {https://dblp.org/rec/conf/asm/AndreAAL10.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"a86a989e656f301ffe0b7b36dca50f52","permalink":"/publication/andreaal10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/andreaal10/","section":"publication","summary":"Abstract Component-based software engineering is a practical approach to address the issue of building large software by combining existing and new components. However, building reliable software systems from components requires to verify the consistency of components and the correctness of their assemblies.","tags":["ABZ'10"],"title":"Using Event-B to Verify the Kmelia Components and Their Assemblies","type":"publication"},{"authors":null,"categories":null,"content":"","date":1212278400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"80ba1a343c5668e97f9976bfff5d61f6","permalink":"/2008/","publishdate":"2008-06-01T00:00:00Z","relpermalink":"/2008/","section":"event","summary":"1st International Conference on ASM, B, and Z","tags":["ABZ'08"],"title":"ABZ 2008 (London, UK)","type":"event"},{"authors":["Gerhard Schellhorn","Richard Banach"],"categories":[],"content":"Abstract The Mondex case study concerns the formal development and verification of an electronic purse protocol. Several groups have worked on its specification and mechanical verification, their solutions being (as were ours previously), either one big step or several steps motivated by the task’s complexity. A new solution is presented that is structured into three refinements, motivated by the three concepts underlying Mondex: a message protocol to transfer money over a lossy medium, protection against replay attacks, and uniqueness of transfers using sequence numbers. We also give an improved proof technique based on our theoretical results on verifying interleaved systems.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_6.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SchellhornB08, author = {Gerhard Schellhorn and Richard Banach}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {A Concept-Driven Construction of the Mondex Protocol Using Three Refinements}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {57--70}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_6}, doi = {10.1007/978-3-540-87603-8\\_6}, timestamp = {Mon, 03 Mar 2025 20:58:01 +0100}, biburl = {https://dblp.org/rec/conf/asm/SchellhornB08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"8f8f66a68a2f3857ddf5a9cfc783a29a","permalink":"/publication/schellhornb08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/schellhornb08/","section":"publication","summary":"Abstract The Mondex case study concerns the formal development and verification of an electronic purse protocol. Several groups have worked on its specification and mechanical verification, their solutions being (as were ours previously), either one big step or several steps motivated by the task’s complexity.","tags":["ABZ'08"],"title":"A Concept-Driven Construction of the Mondex Protocol Using Three Refinements","type":"publication"},{"authors":["Abderrahman Matoussi","Frédéric Gervais","Régine Laleau"],"categories":[],"content":"Abstract It is now recognised that goals play an important role in requirements engineering process, and consequently in systems development process.Whereas specifications allow us to answer the question”WHAT the system does”, goals allow us to address the ”WHY, WHO, WHEN” questions [1]. Up to now, the development process associated with formal methods, including Event B, begins at the specification level. Our objective is to include requirements analysis within this process, and more precisely KAOS[2] which is a methodology to implement goal-based reasoning. Existing work [3,4] that combine KAOS with formal methods generate a formal specification model from a KAOS requirements model.We aim at expressing KAOS goal models with a formal language (Event B), hence staying at the same abstraction level. Our work is based on a constructive approach in which Event B models are built incrementally from KAOS goal models, driven by goal refinement patterns [1]. Since a KAOS goal means that a property must be established, the main idea is to represent each goal as a B event and the property as the post-condition of this B event. Up to now, we consider refinement patterns defined with first-order logic. Patterns with LTL temporal logic will be studied in further work.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_27.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MatoussiGL08, author = {Abderrahman Matoussi and Fr{\\'{e}}d{\\'{e}}ric Gervais and R{\\'{e}}gine Laleau}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {A First Attempt to Express {KAOS} Refinement Patterns with Event {B}}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {338}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_27}, doi = {10.1007/978-3-540-87603-8\\_27}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/MatoussiGL08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"732e9268cb1a486bf6aa8b57365de853","permalink":"/publication/matoussigl08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/matoussigl08/","section":"publication","summary":"Abstract It is now recognised that goals play an important role in requirements engineering process, and consequently in systems development process.Whereas specifications allow us to answer the question”WHAT the system does”, goals allow us to address the ”WHY, WHO, WHEN” questions [1].","tags":["ABZ'08"],"title":"A First Attempt to Express KAOS Refinement Patterns with Event B","type":"publication"},{"authors":["Steve Dunne","Stacey Conroy"],"categories":[],"content":"Abstract We propose a single refinement method for B, inspired directly by Gardiner and Morgan’s longstanding single complete rule for data refinement, and rendered practical by application of the current first author’s recent first-order characterisation of refinement between monotonic computations.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_16.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DunneC08, author = {Steve Dunne and Stacey Conroy}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {A Practical Single Refinement Method for {B}}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {195--208}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_16}, doi = {10.1007/978-3-540-87603-8\\_16}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/DunneC08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"a35d999997c62fff4c02dbff108766ce","permalink":"/publication/dunnec08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/dunnec08/","section":"publication","summary":"Abstract We propose a single refinement method for B, inspired directly by Gardiner and Morgan’s longstanding single complete rule for data refinement, and rendered practical by application of the current first author’s recent first-order characterisation of refinement between monotonic computations.","tags":["ABZ'08"],"title":"A Practical Single Refinement Method for B","type":"publication"},{"authors":["Jean-Raymond Abrial","Michael J. Butler","Stefan Hallerstede","Laurent Voisin"],"categories":[],"content":"Abstract Event-B is a formal method for system-level modelling and analysis. Key features of Event-B are the use of set theory as a modelling notation, the use of refinement to represent systems at different abstraction levels and the use of mathematical proof to verify consistency between refinement levels.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_35.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{AbrialBHV08, author = {Jean{-}Raymond Abrial and Michael J. Butler and Stefan Hallerstede and Laurent Voisin}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {A Roadmap for the Rodin Toolset}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {347}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_35}, doi = {10.1007/978-3-540-87603-8\\_35}, timestamp = {Sun, 02 Jun 2019 21:24:00 +0200}, biburl = {https://dblp.org/rec/conf/asm/AbrialBHV08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"0f14bdd04d642924b4bebd87161ab305","permalink":"/publication/abrialbhv08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/abrialbhv08/","section":"publication","summary":"Abstract Event-B is a formal method for system-level modelling and analysis. Key features of Event-B are the use of set theory as a modelling notation, the use of refinement to represent systems at different abstraction levels and the use of mathematical proof to verify consistency between refinement levels.","tags":["ABZ'08"],"title":"A Roadmap for the Rodin Toolset","type":"publication"},{"authors":["Alessandro Carioni","Angelo Gargantini","Elvinia Riccobene","Patrizia Scandurra"],"categories":[],"content":"Abstract This paper presents the AValLa language, a domain-specific modelling language for scenario-based validation of ASM models, and its supporting tool, the AsmetaV validator. They have been developed according to the model-driven development principles as part of the asmeta (ASM mETAmodelling) toolset, a set of tools around ASMs. As a proof-of-concepts, the paper reports the results of the scenario-based validation for the well-known LIFT control case study.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_7.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{CarioniGRS08, author = {Alessandro Carioni and Angelo Gargantini and Elvinia Riccobene and Patrizia Scandurra}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {A Scenario-Based Validation Language for ASMs}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {71--84}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_7}, doi = {10.1007/978-3-540-87603-8\\_7}, timestamp = {Thu, 14 Oct 2021 10:31:49 +0200}, biburl = {https://dblp.org/rec/conf/asm/CarioniGRS08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"430b1d8c3d1eb537b5dc6a3256f1593e","permalink":"/publication/carionigrs08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/carionigrs08/","section":"publication","summary":"Abstract This paper presents the AValLa language, a domain-specific modelling language for scenario-based validation of ASM models, and its supporting tool, the AsmetaV validator. They have been developed according to the model-driven development principles as part of the asmeta (ASM mETAmodelling) toolset, a set of tools around ASMs.","tags":["ABZ'08"],"title":"A Scenario-Based Validation Language for ASMs","type":"publication"},{"authors":["Frédéric Dadeau","Julien Lamboley","Thierry Moutet","Marie-Laure Potet"],"categories":[],"content":"Abstract We propose a formal framework based on the B method, that supports the development of secured smart card applications. Accordingly to the Common Criteria methodology, we start from a formal definition and modelling of security policies, as access control policies. At the end of the development process, smart card applications are implemented in a standardized way, based on both the life cycle of smart card applets and the APDU protocol. In this paper, we define a conformance relationship that aims at establishing how smart card applications can be related to security requirement models. This embraces both the notions of security conformance as well as traceability allowing to relate basic events appearing at the level of applications with abstract security policies. This approach has been developed in the RNTL POSÉ project, involving a smart card issuer, Gemalto.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_19.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DadeauLMP08, author = {Fr{\\'{e}}d{\\'{e}}ric Dadeau and Julien Lamboley and Thierry Moutet and Marie{-}Laure Potet}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {A Verifiable Conformance Relationship between Smart Card Applets and {B} Security Models}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {237--250}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_19}, doi = {10.1007/978-3-540-87603-8\\_19}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/DadeauLMP08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"81433db5ed093df526ca984cdbea2cb3","permalink":"/publication/dadeaulmp08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/dadeaulmp08/","section":"publication","summary":"Abstract We propose a formal framework based on the B method, that supports the development of secured smart card applications. Accordingly to the Common Criteria methodology, we start from a formal definition and modelling of security policies, as access control policies.","tags":["ABZ'08"],"title":"A Verifiable Conformance Relationship between Smart Card Applets and B Security Models","type":"publication"},{"authors":["Christoph Beierle","Gabriele Kern-Isberner"],"categories":[],"content":"Abstract Belief revision is a key functionality for any intelligent agent being able to perceive pieces of knowledge from its environment and to give back sentences she believes to be true with a certain degree of belief. We report on a refinement of a previous, abstract ASM specification of Condor, a system modeling such an agent, to a fully operational specification implemented in AsmL. The complete AsmL implementation of various belief revision operators is presented, demonstrating how using AsmL enabled a high-level implementation that minimizes the gap between the abstract specification of the underlying concepts and the executable code in the implemented system. Based on ASM refinement and verification concepts, a full mathematical correctness proof for different belief revision operators realized in Condor@AsmL is given.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_9.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BeierleK08, author = {Christoph Beierle and Gabriele Kern{-}Isberner}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {A Verified AsmL Implementation of Belief Revision}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {98--111}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_9}, doi = {10.1007/978-3-540-87603-8\\_9}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/BeierleK08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"84656746eade823d92ac7454d07fa4f4","permalink":"/publication/beierlek08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/beierlek08/","section":"publication","summary":"Abstract Belief revision is a key functionality for any intelligent agent being able to perceive pieces of knowledge from its environment and to give back sentences she believes to be true with a certain degree of belief.","tags":["ABZ'08"],"title":"A Verified AsmL Implementation of Belief Revision","type":"publication"},{"authors":["Jim Woodcock 0001","Paul Boca"],"categories":[],"content":"Abstract In 2004, the UK Computing Research Committee initiated a number of Grand Challenges aimed at stimulating long term research in key areas of computing science. One of the challenges (GC6) focuses on Dependable Systems Evolution. GC6 has two central principles: theory should be embodied in tools, and tools should be tested against real systems. The goal is to produce a Verifying Compiler (a suite of integrated tools) and a repository of verified software.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_48.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{WoodcockB08, author = {Jim Woodcock and Paul Boca}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {{ABZ2008} VSR-Net Workshop}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {378--379}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_48}, doi = {10.1007/978-3-540-87603-8\\_48}, timestamp = {Fri, 17 Feb 2023 09:02:00 +0100}, biburl = {https://dblp.org/rec/conf/asm/WoodcockB08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d11817ff42439ee059a8150f205505d9","permalink":"/publication/woodcockb08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/woodcockb08/","section":"publication","summary":"Abstract In 2004, the UK Computing Research Committee initiated a number of Grand Challenges aimed at stimulating long term research in key areas of computing science. One of the challenges (GC6) focuses on Dependable Systems Evolution.","tags":["ABZ'08"],"title":"ABZ2008 VSR-Net Workshop","type":"publication"},{"authors":["Nuno Amálio","Fiona Polack","Jing Zhang"],"categories":[],"content":"Abstract As part of our work on the formal analysis of object-oriented models, we turn to systems where many autonomous individuals interact to give rise to complex collective behaviour. We adapt our ZOO [1,2] structuring and apply it to a case study based on a published model of part of the immune system [3]. The formalisation calls for a bottom-up solution with no central control over individual units, and includes an approach to represent feedback channels enabling broadcast communication between individuals and across levels.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_25.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{AmalioPZ08, author = {Nuno Am{\\'{a}}lio and Fiona Polack and Jing Zhang}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Autonomous Objects and Bottom-Up Composition in {ZOO} Applied to a Case Study of Biological Reactivity}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {323--336}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_25}, doi = {10.1007/978-3-540-87603-8\\_25}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/AmalioPZ08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"8a394f0b4ea836e858e828726c7d8711","permalink":"/publication/amaliopz08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/amaliopz08/","section":"publication","summary":"Abstract As part of our work on the formal analysis of object-oriented models, we turn to systems where many autonomous individuals interact to give rise to complex collective behaviour. We adapt our ZOO [1,2] structuring and apply it to a case study based on a published model of part of the immune system [3].","tags":["ABZ'08"],"title":"Autonomous Objects and Bottom-Up Composition in ZOO Applied to a Case Study of Biological Reactivity","type":"publication"},{"authors":["Antoine Requet"],"categories":[],"content":"Abstract Refining a B specification into an implementation can be a complex and time consuming process. This process can usually be separated in two distinct parts: the specification part, where the refinement is used to introduce new properties and specification details, and the implementation, where refinement is used to convert a detailed B specification into a B0 implementation. The first part requires human interaction, since it corresponds to writing the specification. However, the implementation part is more mechanical, and usually corresponds to apply known refinement schemes.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_33.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Requet08, author = {Antoine Requet}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {{BART:} {A} Tool for Automatic Refinement}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {345}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_33}, doi = {10.1007/978-3-540-87603-8\\_33}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Requet08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e8b66f1616084d629acdfa0cf7a154ea","permalink":"/publication/requet08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/requet08/","section":"publication","summary":"Abstract Refining a B specification into an implementation can be a complex and time consuming process. This process can usually be separated in two distinct parts: the specification part, where the refinement is used to introduce new properties and specification details, and the implementation, where refinement is used to convert a detailed B specification into a B0 implementation.","tags":["ABZ'08"],"title":"BART: A Tool for Automatic Refinement","type":"publication"},{"authors":["David Déharbe","Bruno Emerson Gurgel Gomes","Anamaria Martins Moreira"],"categories":[],"content":"Abstract A smart card is a portable computer device able to store data and execute commands. Java Card [1] is a specialization of Java, providing vendor inter-operability for smart cards, and has now reached a de facto standard status in this industry. The strategic importance of this market and the requirement for a high reliability motivate the use of rigorous software development processes for smart card aware applications based on the Java Card technology. The B method [2] is a good candidate for such process, since it is a formal method with a successful record to address industrial-level software development. In [3,4], we proposed two versions of a Java Card software development method (called BSmart) based on the B method. The main feature of these methods is to abstract the particularities of smart card systems to the applications developers as much as possible. This abstract presents the current version of a tool, also called BSmart, to support the method. The tool provides the automatable steps required by the method and some guidelines and library machines that are useful during the development process. It includes B development tools (type checker, PO generator) and specific BSmart tools (refinement generator, Java Card translator, etc.). In this approach, the card services specifier only needs to apply some refinement steps to his abstract (implementation platform independent) B specification. The generation of these refinements adapts the specification to Java Card standards and introduces platform specific aspects gradually. Finally, from the concrete B refinements the Java Card code implementing the services provided by the card will be automatically generated by the tool. The tool also provides the generation of a Java API for the host-side application from the original abstract specification, encapsulating all the communication protocol details. Thus, the client application code can then be developed in a completely platform independent way. The definition of the method is in a mature stage, and our attention is now focused on the implementation of more robust versions of the BSmart tools and packaging them in a user-friendly environment. The integration of verification and animation tools is also planned for a next release of the tool.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_39.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DeharbeGM08, author = {David D{\\'{e}}harbe and Bruno Emerson Gurgel Gomes and Anamaria Martins Moreira}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {BSmart: {A} Tool for the Development of Java Card Applications with the {B} Method}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {351--352}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_39}, doi = {10.1007/978-3-540-87603-8\\_39}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/DeharbeGM08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"9b86311eb9de9ba32324388d30950b4d","permalink":"/publication/deharbegm08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/deharbegm08/","section":"publication","summary":"Abstract A smart card is a portable computer device able to store data and execute commands. Java Card [1] is a specialization of Java, providing vendor inter-operability for smart cards, and has now reached a de facto standard status in this industry.","tags":["ABZ'08"],"title":"BSmart: A Tool for the Development of Java Card Applications with the B Method","type":"publication"},{"authors":["Frédéric Dadeau","Adrien De Kermadec","Régis Tissot"],"categories":[],"content":"Abstract We present in this paper a way to produce test suites for the POSIX mini-challenge, based on a formal model of a file system manager, written using a B machine. By this case study, we illustrate the limitations of a fully-automated testing process, which justifies the use of scenarios that complements the classical functional testing approach. Scenarios are expressed through schemas, focusing only on operation chaining. They are played on the model using a symbolic animation engine in order to automatically compute pertinent operation parameter values, based on model coverage criteria such as behavioral or data coverage. We concretize our experimentation by testing the POSIX conformance of two different file systems: a recent Linux distribution, and a customized Java implementation of POSIX used to evaluate the relevance of our approach.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_13.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DadeauKT08, author = {Fr{\\'{e}}d{\\'{e}}ric Dadeau and Adrien De Kermadec and R{\\'{e}}gis Tissot}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Combining Scenario- and Model-Based Testing to Ensure {POSIX} Compliance}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {153--166}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_13}, doi = {10.1007/978-3-540-87603-8\\_13}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/DadeauKT08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"9b356e5f4ea01ce73264db81ce3bac06","permalink":"/publication/dadeaukt08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/dadeaukt08/","section":"publication","summary":"Abstract We present in this paper a way to produce test suites for the POSIX mini-challenge, based on a formal model of a file system manager, written using a B machine.","tags":["ABZ'08"],"title":"Combining Scenario- and Model-Based Testing to Ensure POSIX Compliance","type":"publication"},{"authors":["Wolfram Büttner"],"categories":[],"content":"Abstract Complementary to the systems and software focus of the conference, this presentation will be about chips and the progress that has been made in their functional verification. Common ground will be high-level, still cycleaccurate, state-based models of hardware functionalities called Abstract RT. RT stands for register transfer descriptions of hardware such as VHDL or Verilog. An Abstract RT model is a formal specification which permits an automated formal comparison with its implementation, thus detecting any functional discrepancy between code and formal specification. The first part of the presentation will sketch the big picture: Moore‘s Law still holds and permits building huge chips comprising up to hundreds of millions of gates. Under the constraints of shrinking budgets and development times, these so-called systems-on-chip (SoC) can no longer be developed from scratch but must largely be assembled from pre-designed, pre-verified design components such as processors, controllers, a plethora of peripherals and large amounts of memories. Therefore, getting a SoC right depends to a large extent on the quality of these design components - IP for short. At stake are critical errors making it into silicon. These may cost millions of Euros due to delayed market entry, additional engineering and re-production efforts. Hence, the lion’s share of today’s verification efforts goes into the functional verification of such IP.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_1.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Buttner08, author = {Wolfram B{\\\u0026quot;{u}}ttner}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Complex Hardware Modules Can Now be Made Free of Functional Errors without Sacrificing Productivity}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {1--3}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_1}, doi = {10.1007/978-3-540-87603-8\\_1}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Buttner08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"427cc0088efa19841200332263ab3c11","permalink":"/publication/buttner08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/buttner08/","section":"publication","summary":"Abstract Complementary to the systems and software focus of the conference, this presentation will be about chips and the progress that has been made in their functional verification. Common ground will be high-level, still cycleaccurate, state-based models of hardware functionalities called Abstract RT.","tags":["ABZ'08"],"title":"Complex Hardware Modules Can Now be Made Free of Functional Errors without Sacrificing Productivity","type":"publication"},{"authors":["Alessandra Cavarra"],"categories":[],"content":"Abstract This paper introduces an approach to apply data flow testing techniques to Abstract State Machines specifications. Since traditional data flow coverage criteria are strictly based on the mapping between a program and its flow graph, they cannot be directly applied to ASMs. In this context we are interested in tracing the flow of data between states in ASM runs as opposed to between nodes in a program’s flow graph. Therefore, we revise the classical concepts in data flow analysis and define them on two levels: the syntactic (rule) level, and the computational (run) level. We also specify a family of ad hoc data flow coverage criteria and introduce a model checking-based approach to generate automatically test cases satisfying a given set of coverage criteria from ASM models.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_8.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Cavarra08, author = {Alessandra Cavarra}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Data Flow Analysis and Testing of Abstract State Machines}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {85--97}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_8}, doi = {10.1007/978-3-540-87603-8\\_8}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Cavarra08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"94bfd78a54992737a9cb0ef241a4ec7a","permalink":"/publication/cavarra08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/cavarra08/","section":"publication","summary":"Abstract This paper introduces an approach to apply data flow testing techniques to Abstract State Machines specifications. Since traditional data flow coverage criteria are strictly based on the mapping between a program and its flow graph, they cannot be directly applied to ASMs.","tags":["ABZ'08"],"title":"Data Flow Analysis and Testing of Abstract State Machines","type":"publication"},{"authors":["Christophe Métayer","Mathieu Clabaut"],"categories":[],"content":"Abstract Some RATP units are responsible for evolution and maintenance of an automated interlocking specification document. In order to improve their paper and pencil process, RATP asked Systerel if Event-B could be useful to them. An eight month study was launched whose main goal was to help RATP improving their confidence in their interlocking specification, by applying an Event-B approach on rewriting their requirement document.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_44.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MetayerC08, author = {Christophe M{\\'{e}}tayer and Mathieu Clabaut}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {{DIR} 41 Case Study}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {357}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_44}, doi = {10.1007/978-3-540-87603-8\\_44}, timestamp = {Sat, 11 Dec 2021 11:58:25 +0100}, biburl = {https://dblp.org/rec/conf/asm/MetayerC08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"faaacea1fc666159edf3fc28aa6e6755","permalink":"/publication/metayerc08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/metayerc08/","section":"publication","summary":"Abstract Some RATP units are responsible for evolution and maintenance of an automated interlocking specification document. In order to improve their paper and pencil process, RATP asked Systerel if Event-B could be useful to them.","tags":["ABZ'08"],"title":"DIR 41 Case Study","type":"publication"},{"authors":["Jörg Beckers","Daniel Klünder","Stefan Kowalewski","Bastian Schlich"],"categories":[],"content":"Abstract This paper presents an approach to model checking abstract state machines (ASMs) without the need for translation of the ASM specification into the modeling language of an existing model checker. Instead, our model checker [mc]square uses the simulation capabilities of CoreASM to build the state space, thereby directly supporting ASMs and circumventing a possible loss of expressiveness in a translation process. This enables our approach to present counterexamples and witnesses directly as sequences of ASM states and at the same time supports the major features of CoreASM like distributed ASMs, n-ary functions or extended rule forms. We show the applicability of this approach in a case study that also reveals possible improvements desirable for minimizing the duration needed for building the state space and its memory consumption.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_10.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BeckersKKS08, author = {J{\\\u0026quot;{o}}rg Beckers and Daniel Kl{\\\u0026quot;{u}}nder and Stefan Kowalewski and Bastian Schlich}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Direct Support for Model Checking Abstract State Machines by Utilizing Simulation}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {112--124}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_10}, doi = {10.1007/978-3-540-87603-8\\_10}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/BeckersKKS08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"170caf438bb78e00157cb584c88a7676","permalink":"/publication/beckerskks08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/beckerskks08/","section":"publication","summary":"Abstract This paper presents an approach to model checking abstract state machines (ASMs) without the need for translation of the ASM specification into the modeling language of an existing model checker.","tags":["ABZ'08"],"title":"Direct Support for Model Checking Abstract State Machines by Utilizing Simulation","type":"publication"},{"authors":["Roozbeh Farahbod","Uwe Glässer"],"categories":[],"content":"Abstract We propose a highly adaptive and auto-configurable, multi-layer network architecture for distributed information fusion to address large volume surveillance challenges, assuming a multitude of different sensor types on multiple mobile platforms for intelligence, surveillance and reconnaissance. Our focus is on network enabled operations to efficiently manage and improve employment of a set of mobile resources, their information fusion engines and networking capabilities under dynamically changing and essentially unpredictable conditions. Building on realistic application scenarios adopted from the design and development of the CanCoastWatch system [1], we contend that distributed system concepts based on decentralized control mechanisms are crucial for the design of robust and scalable network enabled operations for several reasons.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_31.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{FarahbodG08, author = {Roozbeh Farahbod and Uwe Gl{\\\u0026quot;{a}}sser}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Dynamic Resource Configuration {\\\u0026amp;} Management for Distributed Information Fusion in Maritime Surveillance}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {343}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_31}, doi = {10.1007/978-3-540-87603-8\\_31}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/FarahbodG08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"fd8c82bdc55900ed19d57f1d59fb20f6","permalink":"/publication/farahbodg08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/farahbodg08/","section":"publication","summary":"Abstract We propose a highly adaptive and auto-configurable, multi-layer network architecture for distributed information fusion to address large volume surveillance challenges, assuming a multitude of different sensor types on multiple mobile platforms for intelligence, surveillance and reconnaissance.","tags":["ABZ'08"],"title":"Dynamic Resource Configuration \u0026amp; Management for Distributed Information Fusion in Maritime Surveillance","type":"publication"},{"authors":["Angelo Gargantini","Elvinia Riccobene","Patrizia Scandurra"],"categories":[],"content":"Abstract SystemC (built upon C++) [2] is an IEEE industry-standard language for system-level models, specifically targeted at architectural, algorithmic, transaction-level modelling. Recently, a further improvement has been achieved by trying to combine SystemC with lightweight software modelling languages like UML to describe system specifications. In accordance with the design principles of the OMG’s Model-driven architecture (MDA), we defined a model-driven design methodology for embedded systems [3] based on the UML 2, a SystemC UML profile (for the HW side), and a multi-thread C UML profile (for the SW side), which allows UML modelling of the system at higher levels of abstraction (from a functional level down to RTL level).\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_36.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{GargantiniRS08, author = {Angelo Gargantini and Elvinia Riccobene and Patrizia Scandurra}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Exploiting the {ASM} Method for Validation {\\\u0026amp;} Verification of Embedded Systems}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {348}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_36}, doi = {10.1007/978-3-540-87603-8\\_36}, timestamp = {Thu, 14 Oct 2021 10:31:49 +0200}, biburl = {https://dblp.org/rec/conf/asm/GargantiniRS08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"8e809ef3b22e2b34c7fb03fd950a7947","permalink":"/publication/gargantinirs08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/gargantinirs08/","section":"publication","summary":"Abstract SystemC (built upon C++) [2] is an IEEE industry-standard language for system-level models, specifically targeted at architectural, algorithmic, transaction-level modelling. Recently, a further improvement has been achieved by trying to combine SystemC with lightweight software modelling languages like UML to describe system specifications.","tags":["ABZ'08"],"title":"Exploiting the ASM Method for Validation \u0026amp; Verification of Embedded Systems","type":"publication"},{"authors":["Jean-Charles Chaudemar","Charles Castel","Christel Seguin"],"categories":[],"content":"Abstract On-board Fault Detection, Isolation and Recovery (FDIR) systems are considered to ensure the safety and to increase the autonomy of spacecrafts. They shall be carefully designed and validated. Their implementation involves a relevant knowledge of items like functions and architectures of the system, and a fault model in relation with these items. Thus, the event-B method is well suited to correctly specify and validate on-board safety architectures. This paper focuses on the FDIR concept presentation and the use of event-B for formalising and for refining the FDIR concept. The paper is organised as follows: after a short presentation of on-board FDIR concept strongly bounded with autonomy architecture concept, we suggest activities enabling to implement FDIR concept. Then, we present the framework of formal modelling that we will use to describe our architecture and the properties related to this architecture. We illustrate our approach by modelling more specifically a safety architecture pattern that includes a primary functional component and a redundant one, under the hypothesis of no common fault. The safety property to be met is: “one single fault shall not lead to the total loss of the function”. The last section of the paper deals with the objectives for the future work.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_45.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{ChaudemarCS08, author = {Jean{-}Charles Chaudemar and Charles Castel and Christel Seguin}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {{FDIR} Architectures for Autonomous Spacecraft: Specification and Assessment with Event-B}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {358}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_45}, doi = {10.1007/978-3-540-87603-8\\_45}, timestamp = {Sat, 19 Oct 2019 20:28:13 +0200}, biburl = {https://dblp.org/rec/conf/asm/ChaudemarCS08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"bec884517c89031e8357f5831cadffbf","permalink":"/publication/chaudemarcs08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/chaudemarcs08/","section":"publication","summary":"Abstract On-board Fault Detection, Isolation and Recovery (FDIR) systems are considered to ensure the safety and to increase the autonomy of spacecrafts. They shall be carefully designed and validated. Their implementation involves a relevant knowledge of items like functions and architectures of the system, and a fault model in relation with these items.","tags":["ABZ'08"],"title":"FDIR Architectures for Autonomous Spacecraft: Specification and Assessment with Event-B","type":"publication"},{"authors":["Eunsuk Kang","Daniel Jackson 0001"],"categories":[],"content":"Abstract This paper describes the formal modeling and analysis of a design for a flash-based filesystem in Alloy. We model the basic operations of a filesystem as well as features that are crucial to NAND flash hardware, such as wear-leveling and erase-unit reclamation. In addition, we address the issue of fault tolerance by modeling a mechanism for recovery from interrupted filesystem operations due to unexpected power loss. We analyze the correctness of our flash filesystem model by checking trace inclusion against a POSIX-compliant abstract filesystem, in which a file is modeled simply as an array of data elements. The analysis is fully automatic and complete within a finite scope.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_23.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{KangJ08, author = {Eunsuk Kang and Daniel Jackson}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Formal Modeling and Analysis of a Flash Filesystem in Alloy}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {294--308}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_23}, doi = {10.1007/978-3-540-87603-8\\_23}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/KangJ08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"6ed6b48b87a6ded81bf345182be05c1b","permalink":"/publication/kangj08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/kangj08/","section":"publication","summary":"Abstract This paper describes the formal modeling and analysis of a design for a flash-based filesystem in Alloy. We model the basic operations of a filesystem as well as features that are crucial to NAND flash hardware, such as wear-leveling and erase-unit reclamation.","tags":["ABZ'08"],"title":"Formal Modeling and Analysis of a Flash Filesystem in Alloy","type":"publication"},{"authors":["Hocine El-Habib Daho","Djilali Benhamamouch"],"categories":[],"content":"Abstract The notion of Abstract State Machines(ASMs) handles a practical new approach for modeling and analysing various kinds of discrete dynamic systems. In the context of the verification problem of ASM models, formal verification techniques based on variants of restricted first-order temporal logic have been used to verify correctness of restricted forms of ASM specifications. In this spirit, the current work shows how the state-based logic of TLA + can be employed to formally reason about dynamic systems formalised in terms of ASMs.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_43.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DahoB08, author = {Hocine El{-}Habib Daho and Djilali Benhamamouch}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Formal Verification of {ASM} Models Using TLA\\({}^{\\mbox{+}}\\)}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {356}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_43}, doi = {10.1007/978-3-540-87603-8\\_43}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/DahoB08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"77962e59f3a273de8e482cf538530996","permalink":"/publication/dahob08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/dahob08/","section":"publication","summary":"Abstract The notion of Abstract State Machines(ASMs) handles a practical new approach for modeling and analysing various kinds of discrete dynamic systems. In the context of the verification problem of ASM models, formal verification techniques based on variants of restricted first-order temporal logic have been used to verify correctness of restricted forms of ASM specifications.","tags":["ABZ'08"],"title":"Formal Verification of ASM Models Using TLA+","type":"publication"},{"authors":["Eerke A. Boiten"],"categories":[],"content":"Abstract Three Steps from the Ideal Ideally correctness is by construction; post-hoc verification is second choice; verification of proofs is the next step down. In the application area of modern cryptographic protocol verification, the latter would be viewed as serious progress. Modern Cryptographic Protocols and Security A modern cryptographic protocol may have the following properties: its functionality is clear, but its security definition incomplete; it contains explicit probabilistic elements; its notion of security (correctness) is approximate, and relative to computational resources available for an attack against it; its security is proved relative to some problem being hard; primitives cannot be implemented compositionally. All this means that the standard techniques and good intentions of formal methods do not work straight out of the box. Many approaches to bridging the gap between formal methods and modern cryptography exist – but none of these are too close in spirit to the ABZ world.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_40.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Boiten08, author = {Eerke A. Boiten}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {From {ABZ} to Cryptography}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {353}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_40}, doi = {10.1007/978-3-540-87603-8\\_40}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Boiten08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"1698ad2da84e675ce99b474070134c30","permalink":"/publication/boiten08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/boiten08/","section":"publication","summary":"Abstract Three Steps from the Ideal Ideally correctness is by construction; post-hoc verification is second choice; verification of proofs is the next step down. In the application area of modern cryptographic protocol verification, the latter would be viewed as serious progress.","tags":["ABZ'08"],"title":"From ABZ to Cryptography","type":"publication"},{"authors":["Jacques Julliand","Pierre-Alain Masson","Régis Tissot"],"categories":[],"content":"Abstract This paper is about generating tests from test purposes, in addition to structural tests. We present a method that re-uses a behavioural model and an abstract test concretization layer developed for structural testing, and relies on additional test purposes. We propose, in the B framework, a process of test generation that uses the symbolic animation mechanisms of LTG (Leirios Test Generator) based on constraint solving, and guided by the test purposes. We build for that a B animable model that is the synchronized product of a behavioural B abstract model and a test purpose described as a labelled transition system. We prove the correctness of this method, and illustrate it by means of the IAS case study. IAS is a smart-card application dedicated to the operations of Identification, Authentication and electronic Signature.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_12.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{JulliandMT08, author = {Jacques Julliand and Pierre{-}Alain Masson and R{\\'{e}}gis Tissot}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Generating Tests from {B} Specifications and Test Purposes}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {139--152}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_12}, doi = {10.1007/978-3-540-87603-8\\_12}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/JulliandMT08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"ae7e08ca825cc6c64adbfe2b2a74cb0d","permalink":"/publication/julliandmt08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/julliandmt08/","section":"publication","summary":"Abstract This paper is about generating tests from test purposes, in addition to structural tests. We present a method that re-uses a behavioural model and an abstract test concretization layer developed for structural testing, and relies on additional test purposes.","tags":["ABZ'08"],"title":"Generating Tests from B Specifications and Test Purposes","type":"publication"},{"authors":["Anthony Hall"],"categories":[],"content":"Abstract If we want to use Z to write an overall system specification, we need to integrate it into a rich set of documents written in natural language and domain-specific notations. These documents must be easy to write and read by non-mathematicians. On a purely practical level, this implies that we want Z to be part of the ordinary documents that are used every day on the project. That means, in practice, that it has to be integrated into Microsoft Word. I describe a tool for writing and checking Z within the Word environment and some progress towards a process for writing the specification and guidelines for its structure.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_26.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Hall08, author = {Anthony Hall}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Integrating {Z} into Large Projects Tools and Techniques}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {337}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_26}, doi = {10.1007/978-3-540-87603-8\\_26}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Hall08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"9c9ccc95f35b173920a886434d9861cb","permalink":"/publication/hall08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/hall08/","section":"publication","summary":"Abstract If we want to use Z to write an overall system specification, we need to integrate it into a rich set of documents written in natural language and domain-specific notations.","tags":["ABZ'08"],"title":"Integrating Z into Large Projects Tools and Techniques","type":"publication"},{"authors":["Richard Banach"],"categories":[],"content":"Abstract The ingredients of typical model based development via refinement are re-examined, and some well known frameworks are reviewed in that light, drawing out commonalities and differences. It is observed that alterations in semantics take place de facto due to applications pressures and for other reasons. This leads to a perspective on tools for such methods in which the proof obligations become programmable and/or configurable, permitting easier co-operation between techniques and interaction with an Evidential Tool Bus. This is of intrinsic interest, and also relevant to the Verification Grand Challenge.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_5.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Banach08, author = {Richard Banach}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Model Based Refinement and the Tools of Tomorrow}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {42--56}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_5}, doi = {10.1007/978-3-540-87603-8\\_5}, timestamp = {Mon, 03 Mar 2025 20:58:01 +0100}, biburl = {https://dblp.org/rec/conf/asm/Banach08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"03a074402e54a1c7eae1e26f66a8d36b","permalink":"/publication/banach08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/banach08/","section":"publication","summary":"Abstract The ingredients of typical model based development via refinement are re-examined, and some well known frameworks are reviewed in that light, drawing out commonalities and differences. It is observed that alterations in semantics take place de facto due to applications pressures and for other reasons.","tags":["ABZ'08"],"title":"Model Based Refinement and the Tools of Tomorrow","type":"publication"},{"authors":["Paulo J. Matos","João Marques-Silva 0001"],"categories":[],"content":"Abstract Current day systems are ever more detailed and complex leading to the necessity of developing models that abstract unimportant implementation details while emphasizing their structure. Until recently it was only possible to perform temporal model checking in an Event-B model by converting the model to B-METHOD and then using ProB [1]. More recently, a prototype ProB plug in [2] for the RODIN tool has been developed. Nevertheles, encoding Event-B to Alloy allows building on top of the Alloy model finding engine therefore benefiting from all of its optimizations. An extended version of this work is in [3].\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_34.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{MatosM08, author = {Paulo J. Matos and Jo{\\~{a}}o Marques{-}Silva}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Model Checking Event-B by Encoding into Alloy}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {346}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_34}, doi = {10.1007/978-3-540-87603-8\\_34}, timestamp = {Mon, 24 Feb 2020 19:23:27 +0100}, biburl = {https://dblp.org/rec/conf/asm/MatosM08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"b5bd9609f63a31198165914ac7a56837","permalink":"/publication/matosm08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/matosm08/","section":"publication","summary":"Abstract Current day systems are ever more detailed and complex leading to the necessity of developing models that abstract unimportant implementation details while emphasizing their structure. Until recently it was only possible to perform temporal model checking in an Event-B model by converting the model to B-METHOD and then using ProB [1].","tags":["ABZ'08"],"title":"Model Checking Event-B by Encoding into Alloy","type":"publication"},{"authors":["Egon Börger","Bernhard Thalheim"],"categories":[],"content":"Abstract We survey the use of the Abstract State Machines (ASM) method for a rigorous foundation of modeling and validating web services, workflows, interaction patterns and business processes. We show in particular that one can tailor business process definitions in application-domain yet rigorous terms in such a way that the resulting ASM models can be used as basis for binding contracts between domain experts and IT technologists. The method combines the expressive power and accuracy of rule-based modeling with the intuition provided by visual graph-based descriptions. We illustrate this by an ASM-based semantical framework for the OMG standard for BPMN (Business Process Modeling Notation). The framework supports true concurrency, heterogeneous state and modularity (compositional design and verification techniques). As validation example we report some experiments, carried out with a special-purpose ASM simulator, to evaluate various definitions proposed in the literature for the critical OR-join construct of BPMN.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_3.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BorgerT08, author = {Egon B{\\\u0026quot;{o}}rger and Bernhard Thalheim}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Modeling Workflows, Interaction Patterns, Web Services and Business Processes: The ASM-Based Approach}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {24--38}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_3}, doi = {10.1007/978-3-540-87603-8\\_3}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/BorgerT08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"bd5099669a394f2954cd83d8eae1b9b8","permalink":"/publication/borgert08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/borgert08/","section":"publication","summary":"Abstract We survey the use of the Abstract State Machines (ASM) method for a rigorous foundation of modeling and validating web services, workflows, interaction patterns and business processes. We show in particular that one can tailor business process definitions in application-domain yet rigorous terms in such a way that the resulting ASM models can be used as basis for binding contracts between domain experts and IT technologists.","tags":["ABZ'08"],"title":"Modeling Workflows, Interaction Patterns, Web Services and Business Processes: The ASM-Based Approach","type":"publication"},{"authors":["Nazim Benaïssa"],"categories":[],"content":"Abstract We address the proof-based development of cryptographic protocols satisfying security properties. Communication channels are supposed to be unsafe. Analysing cryptographic protocols requires precise modelling of the attacker’s knowledge. In this paper we use the event B modelling language to model the knowledge of the attacker for a class of cryptographic protocols called cascade protocols. The attacker’s behaviour conforms to the Dolev-Yao model. In the Dolev-Yao model, the attacker has full control of the communication channel, and the cryptographic primitives are supposed to be perfect.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_20.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Benassa08, author = {Nazim Bena{\\\u0026quot;{\\i}}ssa}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Modelling Attacker's Knowledge for Cascade Cryptographic Protocols}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {251--264}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_20}, doi = {10.1007/978-3-540-87603-8\\_20}, timestamp = {Mon, 18 Apr 2022 18:26:24 +0200}, biburl = {https://dblp.org/rec/conf/asm/Benassa08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"fa80382eeb55cd89a4475d76be36395d","permalink":"/publication/benassa08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/benassa08/","section":"publication","summary":"Abstract We address the proof-based development of cryptographic protocols satisfying security properties. Communication channels are supposed to be unsafe. Analysing cryptographic protocols requires precise modelling of the attacker’s knowledge. In this paper we use the event B modelling language to model the knowledge of the attacker for a class of cryptographic protocols called cascade protocols.","tags":["ABZ'08"],"title":"Modelling Attacker\u0026apos;s Knowledge for Cascade Cryptographic Protocols","type":"publication"},{"authors":["Helen Treharne","Edward Turner","Steve A. Schneider","Neil Evans"],"categories":[],"content":"Abstract The SystemB project is a two year project at the University of Surrey, funded by AWE plc, and is concerned with bridging the areas of formal methods and object modelling. The project is focused on the CSP ∥ B integrated formal method and increasing its level of tool support so that CSP ∥ B models of Executable UML (xUML) systems can be constructed automatically. The CSP ∥ B models will subject the xUML model to formal analysis prior to generating executable code. We are currently developing a CSP ∥ B model generator within the xUML toolsuite provided by Kennedy Carter Ltd. xUML is used within AWE and we will initially focus on reasoning about xUML state machines. Actions within xUML state machines are defined using the Action Specification Language (ASL). ASL is more low level than the Object Constraint Language; they can execute concurrently, and can also be used in operation definitions. Hence it is a challenge to model formally. In the extended abstract we provide an overview of one ASL to AMN translation pattern being developed and highlight the role of B in the project.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_46.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{TreharneTSE08, author = {Helen Treharne and Edward Turner and Steve A. Schneider and Neil Evans}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Object Modelling in the SystemB Industrial Project}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {359}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_46}, doi = {10.1007/978-3-540-87603-8\\_46}, timestamp = {Fri, 07 Aug 2020 17:57:33 +0200}, biburl = {https://dblp.org/rec/conf/asm/TreharneTSE08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c72792b1bc8fd3840deb3e5495448d4d","permalink":"/publication/treharnetse08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/treharnetse08/","section":"publication","summary":"Abstract The SystemB project is a two year project at the University of Surrey, funded by AWE plc, and is concerned with bridging the areas of formal methods and object modelling.","tags":["ABZ'08"],"title":"Object Modelling in the SystemB Industrial Project","type":"publication"},{"authors":["Stefan Hallerstede"],"categories":[],"content":"Abstract Event-B is a formal modelling method which is claimed to be suitable for diverse modelling domains, such as reactive systems and sequential program development. This claim hinges on the fact that any particular model has an appropriate semantics. In Event-B this semantics is provided implicitly by proof obligations associated with a model. There is no fixed semantics though. In this article we argue that this approach is beneficial to modelling because we can use similar proof obligations across a variety of modelling domains. By way of two examples we show how similar proof obligations are linked to different semantics. A small set of proof obligations is thus suitable for a whole range of modelling problems in diverse modelling domains.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_11.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Hallerstede08, author = {Stefan Hallerstede}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {On the Purpose of Event-B Proof Obligations}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {125--138}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_11}, doi = {10.1007/978-3-540-87603-8\\_11}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Hallerstede08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"38b7999ddf271cd45d3d50f4d89fb526","permalink":"/publication/hallerstede08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/hallerstede08/","section":"publication","summary":"Abstract Event-B is a formal modelling method which is claimed to be suitable for diverse modelling domains, such as reactive systems and sequential program development. This claim hinges on the fact that any particular model has an appropriate semantics.","tags":["ABZ'08"],"title":"On the Purpose of Event-B Proof Obligations","type":"publication"},{"authors":["Ken Robinson"],"categories":[],"content":"Abstract This paper is a reprise of a paper presented at ZB2000 that attempted to reconcile the worlds of model-based and axiomatic specification. The new paper uses the same problem, but treats it very differently in Event B. The development also serves as a short tutorial example in Event B.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_18.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Robinson08, author = {Ken Robinson}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Reconciling Axiomatic and Model-Based Specifications Reprised}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {223--236}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_18}, doi = {10.1007/978-3-540-87603-8\\_18}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Robinson08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"5f4705939a152ed126d02a432a6890a3","permalink":"/publication/robinson08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/robinson08/","section":"publication","summary":"Abstract This paper is a reprise of a paper presented at ZB2000 that attempted to reconcile the worlds of model-based and axiomatic specification. The new paper uses the same problem, but treats it very differently in Event B.","tags":["ABZ'08"],"title":"Reconciling Axiomatic and Model-Based Specifications Reprised","type":"publication"},{"authors":["Gerhard Schellhorn"],"categories":[],"content":"Abstract Effective and efficient support for the incremental development of verified implementations from abstract requirements has always been of central importance for the successful application of formal methods in practice. Effective means first, that a modelling language is available that allows an adequate problem specification. Second, a refinement theory must be available that preserves the relevant properties of the abstract specification. Efficient means, that the refinement theory reduces the problem to the essential proof obligations necessary, and that the theorem prover provides powerful deduction support. The talk discusses the topic from the experience we have gained from formalizing various refinement theories [1], [2] with the interactive theorem prover KIV [3], as well as from the correctness proofs for various case studies involving refinement.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_4.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Schellhorn08, author = {Gerhard Schellhorn}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Refinement of State-Based Systems: ASMs and Big Commuting Diagrams (Abstract)}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {39--41}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_4}, doi = {10.1007/978-3-540-87603-8\\_4}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Schellhorn08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7c3be848bd98e855c725860415796232","permalink":"/publication/schellhorn08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/schellhorn08/","section":"publication","summary":"Abstract Effective and efficient support for the incremental development of verified implementations from abstract requirements has always been of central importance for the successful application of formal methods in practice. Effective means first, that a modelling language is available that allows an adequate problem specification.","tags":["ABZ'08","ASM"],"title":"Refinement of State-Based Systems: ASMs and Big Commuting Diagrams (Abstract)","type":"publication"},{"authors":["Ramsay Taylor"],"categories":[],"content":"Abstract Machine code and assembly language programs are structured using various branches and decision points, but between these they contain blocks of instructions that are simply sequentially composed. Most work on formal program analysis has focused on the behavior of the branch points — primarily because composing the blocks of sequential code to determine their overal effect on the system is often intellectually trivial. This processs is also computationaly simple, but it is not computationally trivial. The aim of this work is to produce a system of rules that can be efficiently implemented and allow us to determine the overal behaviour of sequentially composed operations. To identify those sequential compositions that are trivial we will use techniques inspired by Separation logic[2, 1]. Separation logic itself is a very general, abstract collection of higher order logic statements but the simple observation at the heart of separation logic will be used: if two operations refer to completely disjoint parts of the state space they can be reasoned about independently.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_38.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Taylor08, author = {Ramsay Taylor}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Separation of {Z} Operations}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {350}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_38}, doi = {10.1007/978-3-540-87603-8\\_38}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Taylor08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"ab18deb43b77309580dc0c67c062766f","permalink":"/publication/taylor08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/taylor08/","section":"publication","summary":"Abstract Machine code and assembly language programs are structured using various branches and decision points, but between these they contain blocks of instructions that are simply sequentially composed. Most work on formal program analysis has focused on the behavior of the branch points — primarily because composing the blocks of sequential code to determine their overal effect on the system is often intellectually trivial.","tags":["ABZ'08"],"title":"Separation of Z Operations","type":"publication"},{"authors":["Cliff B. Jones","Ken G. Pierce"],"categories":[],"content":"Abstract This paper presents a novel formal development of a non-trivial parallel program: Simpson’s implementation of asynchronous communication mechanisms (ACMs). Although the correctness of the “4-slot algorithm” has been shown elsewhere, earlier developments are by no means intuitive. The aims of this paper include both the presentation of an understandable (yet formal) design history and the establishment of another way of “splitting (software) atoms”. Using the “fiction of atomicity” as an aid to understanding the initial steps of development, the top-level specification is developed to code. The rely-guarantee approach is, here, combined with notions of read/write frames and “phased” specifications; the atomicity assumptions implied by rely/guarantee conditions are realised by clever choice of data representation. The development method herein is compared with other approaches –in a spirit of cooperation– as the authors believe that constructive comparison elucidates many of the finer points in the “4-slot” specification/development and of parallel programs in general.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_47.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{JonesP08, author = {Cliff B. Jones and Ken G. Pierce}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Splitting Atoms with Rely/Guarantee Conditions Coupled with Data Reification}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {360--377}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_47}, doi = {10.1007/978-3-540-87603-8\\_47}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/JonesP08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"979ebb71191625d9861e146eb704a327","permalink":"/publication/jonesp08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/jonesp08/","section":"publication","summary":"Abstract This paper presents a novel formal development of a non-trivial parallel program: Simpson’s implementation of asynchronous communication mechanisms (ACMs). Although the correctness of the “4-slot algorithm” has been shown elsewhere, earlier developments are by no means intuitive.","tags":["ABZ'08"],"title":"Splitting Atoms with Rely/Guarantee Conditions Coupled with Data Reification","type":"publication"},{"authors":["Joëlle Cohen","Anatol Slissenko"],"categories":[],"content":"Abstract In our paper TR-LACL-2008–02 ( www.univ-paris12.fr/lacl/) we give sufficient conditions that permit to implement a real-time ASM with instantaneous actions (IA-ASM) by an ASM with delayed actions (DA-ASM) with approximate bisimulation of runs. The time is continuous and time constraints are linear inequalities with rational coefficients. As IA-ASM we consider ASM whose programs are blocks of if guard then blockOfUpdates. The implementation is an ASM of more general type. It works by 2 phases: backup phase memorizes the values of functions, and update phase makes the updates using the backed up values. Such an implementation implies shifts of time instants and, consequently, of the values of the real-valued functions. The approximation of runs (and, thus approximate bisimulation) is determined by 2 positive parameters , where bounds time shifts, and bounds the deviations of real-valued functions. We introduce a notion of -sturdy IA-ASM, and prove that the implementation of any such IA-ASM gives an DA-ASM with -approximately bisimular runs if the delay satisfies some constraints. An interesting point is that the sources of desynchronization that destroy the bisimulation are much more subtle and numerous than one can think a priori. Another conceptual consequence concerns the adequacy of the notion of IA-ASM that was introduced in Gurevich–Huggins (LNCS, vol. 1092, 1996), and later studied in Beauquier–Slissenko, (APAL, 113(1–3):13–52, 2002) for the specification of real-time system.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_29.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{CohenS08, author = {Jo{\\\u0026quot;{e}}lle Cohen and Anatol Slissenko}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Stability of Real-Time Abstract State Machines under Desynchronization}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {341}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_29}, doi = {10.1007/978-3-540-87603-8\\_29}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/CohenS08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"6635ab077eeaed44f6445920442d73d7","permalink":"/publication/cohens08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/cohens08/","section":"publication","summary":"Abstract In our paper TR-LACL-2008–02 ( www.univ-paris12.fr/lacl/) we give sufficient conditions that permit to implement a real-time ASM with instantaneous actions (IA-ASM) by an ASM with delayed actions (DA-ASM) with approximate bisimulation of runs.","tags":["ABZ'08"],"title":"Stability of Real-Time Abstract State Machines under Desynchronization","type":"publication"},{"authors":["Michael Poppleton"],"categories":[],"content":"Abstract The transition from classical B [2] to the Event-B language and method [3] has seen the removal of some forms of model structuring and composition, with the intention of reinventing them in future. This work contributes to that reinvention. Inspired by a proposed method for state-based decomposition and refinement [5] of an Event-B model, we propose a familiar parallel event composition (over disjoint state variable lists), and the less familiar event fusion (over intersecting state variable lists). A brief motivation is provided for these and other forms of composition of models, in terms of feature-based modelling. We show that model consistency is preserved under such compositions. More significantly we show that model composition preserves refinement.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_17.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Poppleton08, author = {Michael Poppleton}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {The Composition of Event-B Models}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {209--222}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_17}, doi = {10.1007/978-3-540-87603-8\\_17}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Poppleton08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"19cc55b1b445a91aab7d444b644e53f0","permalink":"/publication/poppleton08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/poppleton08/","section":"publication","summary":"Abstract The transition from classical B [2] to the Event-B language and method [3] has seen the removal of some forms of model structuring and composition, with the intention of reinventing them in future.","tags":["ABZ'08"],"title":"The Composition of Event-B Models","type":"publication"},{"authors":["Michael Leuschel"],"categories":[],"content":"Abstract In this paper we examine the difference between model checking high-level and low-level models. In particular, we compare the ProB model checker for the B-method and the Spin model checker for Promela. While Spin has a dramatically more efficient model checking engine, we show that in practice the performance can be disappointing compared to model checking high-level specifications with ProB. We investigate the reasons for this behaviour, examining expressivity, granularity and Spin’s search algorithms. We also show that certain types of information (such as symmetry) can be more easily inferred and exploited in high-level models, leading to a considerable reduction in model checking time.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_2.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Leuschel08, author = {Michael Leuschel}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {The High Road to Formal Validation:}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {4--23}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_2}, doi = {10.1007/978-3-540-87603-8\\_2}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Leuschel08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"46cb3e658601f154a43e3255f8e6c60f","permalink":"/publication/leuschel08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/leuschel08/","section":"publication","summary":"Abstract In this paper we examine the difference between model checking high-level and low-level models. In particular, we compare the ProB model checker for the B-method and the Spin model checker for Promela.","tags":["ABZ'08"],"title":"The High Road to Formal Validation: ","type":"publication"},{"authors":["Alessandro Cavalcante Gurgel","Cristiano Gurgel de Castro","Marcel Vinícius Medeiros Oliveira"],"categories":[],"content":"Abstract Circus combine both data and behavioural aspects of concurrent systems using a combination of CSP, Z, and Dijkstra’s command language. Its associated refinement theory and calculus distinguishes itself from other such combinations. Using a refinement calculus, we can correctly construct programs in a stepwise fashion. Each step is justified by the application of a refinement law, possibly with the discharge of proof obligations (hereafter called POs). The manual application of the refinement calculus, however, is an error-prone and hard task.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_37.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{GurgelCO08, author = {Alessandro Cavalcante Gurgel and Cristiano Gurgel de Castro and Marcel Vin{\\'{\\i}}cius Medeiros Oliveira}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Tool Support for the CircusRefinement Calculus}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {349}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_37}, doi = {10.1007/978-3-540-87603-8\\_37}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/GurgelCO08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7b621c36be42f9f637fae388800ddb04","permalink":"/publication/gurgelco08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/gurgelco08/","section":"publication","summary":"Abstract Circus combine both data and behavioural aspects of concurrent systems using a combination of CSP, Z, and Dijkstra’s command language. Its associated refinement theory and calculus distinguishes itself from other such combinations.","tags":["ABZ'08"],"title":"Tool Support for the CircusRefinement Calculus","type":"publication"},{"authors":["Juan Bicarregui","Alvaro Arenas","Benjamin Aziz","Philippe Massonet","Christophe Ponsard"],"categories":[],"content":"Abstract We propose a syntactic extension of Event-B incorporating a limited notion of obligation described by triggers. The trigger of an event is the dual of the guard: when a guard is not true, an event must not occur, whereas when a trigger is true, the event must occur. The obligation imposed by a trigger is interpreted as a constraint on when the other events are permitted. For example, the simplest trigger next, which states that the event must be the next one to be executed when the trigger becomes true, is modelled as an extra guard on each of the other events which prohibits their execution at this time. In this paper we describe the modelling of triggers in Event-B, and analyse refinement and abstract scheduling of triggered events.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_15.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{BicarreguiAAMP08, author = {Juan Bicarregui and Alvaro Arenas and Benjamin Aziz and Philippe Massonet and Christophe Ponsard}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Towards Modelling Obligations in Event-B}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {181--194}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_15}, doi = {10.1007/978-3-540-87603-8\\_15}, timestamp = {Thu, 14 Oct 2021 10:31:49 +0200}, biburl = {https://dblp.org/rec/conf/asm/BicarreguiAAMP08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"a0f5592e8a307304e8777784204d5752","permalink":"/publication/bicarreguiaamp08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/bicarreguiaamp08/","section":"publication","summary":"Abstract We propose a syntactic extension of Event-B incorporating a limited notion of obligation described by triggers. The trigger of an event is the dual of the guard: when a guard is not true, an event must not occur, whereas when a trigger is true, the event must occur.","tags":["ABZ'08"],"title":"Towards Modelling Obligations in Event-B","type":"publication"},{"authors":["Colin F. Snook","Michael J. Butler"],"categories":[],"content":"Abstract UML-B is a graphical formal modelling notation that relies on Event-B for its underlying semantics and is closely integrated with the ‘Rodin’, Event-B verification tools. UML-B is similar to UML but has its own meta-model. UML-B provides tool support, including drawing tools and a translator to generate Event-B models. When a UML-B drawing is saved the translator automatically generates the corresponding Event-B model. The Event-B verification tools (syntax checker and prover) then run automatically providing an immediate display of problems which are indicated on the relevant UML-B diagram.The UML-B modelling environment consists of a UML-B project containing a UML-B model. Four interlinked diagram types (package, context, class and statemachine) are available. Package Diagrams are used to describe the ‘refines’ and ‘sees’ relationships between top level components (machines and contexts) of a UML-B project. UML-B mirrors the Event-B approach where static data (sets and constants) are modelled in a separate package called a ‘context’. The context diagram is similar to a class diagram but has only constant data represented by ClassTypes, Attributes and Associations. ClassTypes define ‘carrier’ sets or constant subsets of other ClassTypes.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_32.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{SnookB08, author = {Colin F. Snook and Michael J. Butler}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {{UML-B:} {A} Plug-in for the Event-B Tool Set}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {344}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_32}, doi = {10.1007/978-3-540-87603-8\\_32}, timestamp = {Mon, 03 Jan 2022 22:35:01 +0100}, biburl = {https://dblp.org/rec/conf/asm/SnookB08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"fee9a769fa27302a2f452aeae8b2eb59","permalink":"/publication/snookb08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/snookb08/","section":"publication","summary":"Abstract UML-B is a graphical formal modelling notation that relies on Event-B for its underlying semantics and is closely integrated with the ‘Rodin’, Event-B verification tools. UML-B is similar to UML but has its own meta-model.","tags":["ABZ'08"],"title":"UML-B: A Plug-in for the Event-B Tool Set","type":"publication"},{"authors":["Mark Utting","Petra Malik"],"categories":[],"content":"Abstract We propose a simple framework for validation unit testing of Z specifications, and illustrate this framework by testing the first few levels of a POSIX specification. The tests are written in standard Z, and are executable by the CZT animator, ZLive.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_24.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{UttingM08, author = {Mark Utting and Petra Malik}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Unit Testing of {Z} Specifications}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {309--322}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_24}, doi = {10.1007/978-3-540-87603-8\\_24}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/UttingM08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"e60e1b7fbbd3d24f8b7e1eb51a049290","permalink":"/publication/uttingm08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/uttingm08/","section":"publication","summary":"Abstract We propose a simple framework for validation unit testing of Z specifications, and illustrate this framework by testing the first few levels of a POSIX specification. The tests are written in standard Z, and are executable by the CZT animator, ZLive.","tags":["ABZ'08"],"title":"Unit Testing of Z Specifications","type":"publication"},{"authors":["Richard Banach"],"categories":[],"content":"Abstract UseCase-wise Development, the introduction of functionality into an application in stages, with each stage being carried through to (ideally) implementation before the next is considered, is examined with a view to its being treated via an Event-B methodology. The need to modify top level behaviour in a non-skip way precludes its naive treatment via Event-B refinement, and paves the way for the use of retrenchment in Event-B. The details of an Event-B formulation of retrenchment, aligned to the practical details of the Rodin toolset, are described. The details of refinement/retrenchment interworking needed to handle UseCase-wise development are outlined, and a simple case study is given.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_14.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Banach08a, author = {Richard Banach}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {UseCase-Wise Development: Retrenchment for Event-B}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {167--180}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_14}, doi = {10.1007/978-3-540-87603-8\\_14}, timestamp = {Mon, 03 Mar 2025 20:58:01 +0100}, biburl = {https://dblp.org/rec/conf/asm/Banach08a.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"bf0816113e325aadaa1328f99754376d","permalink":"/publication/banach08a/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/banach08a/","section":"publication","summary":"Abstract UseCase-wise Development, the introduction of functionality into an application in stages, with each stage being carried through to (ideally) implementation before the next is considered, is examined with a view to its being treated via an Event-B methodology.","tags":["ABZ'08"],"title":"UseCase-Wise Development: Retrenchment for Event-B","type":"publication"},{"authors":["Ileana Ober","Ali Abou Dib"],"categories":[],"content":"Abstract We propose an approach to achieve interoperability in a family of domain specific language based on the use of their ASM semantics and of the category theory. The approach is based on the construction of a unifying language of the family, by using categorical colimits. Since the unifying language is obtained by construction, translators to this one are obtained easily. These are the premises for using ASM tools for symbolically executing systems made of components specified in domain specific languages of a same family.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_41.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{OberD08, author = {Ileana Ober and Ali Abou Dib}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Using {ASM} to Achieve Executability within a Family of {DSL}}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {354}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_41}, doi = {10.1007/978-3-540-87603-8\\_41}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/OberD08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"2c3103b9128d7bd129d0ec37f44fedc6","permalink":"/publication/oberd08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/oberd08/","section":"publication","summary":"Abstract We propose an approach to achieve interoperability in a family of domain specific language based on the use of their ASM semantics and of the category theory. The approach is based on the construction of a unifying language of the family, by using categorical colimits.","tags":["ABZ'08"],"title":"Using ASM to Achieve Executability within a Family of DSL","type":"publication"},{"authors":["Stephen Wright"],"categories":[],"content":"Abstract A Virtual Machine (VM) is a program running on a conventional microprocessor that emulates the binary instruction set, registers, and memory space of an idealized computing machine, a well-known example being the Java Virtual Machine (JVM). Despite there being many binary Instruction Set Architectures (ISA) in existence, all share a set of core properties which have been tailored to their particular applications. An abstract model may capture these generic properties and be subsequently refined to a particular machine, providing a reusable template for development of formally proven ISAs: this is a task to which the EventB [16,18] notation is well suited. This paper describes a project to use the RODIN tool-set [24] to perform such a process, ultimately producing the MIDAS (Microprocessor Instruction and Data Abstraction System) VM, capable of running binary executables compiled from high-level languages such as C [9]. The abstract model is incrementally refined to a model capable of automatic translation to C source code, and compilation for a hardware platform using a standard compiler. A second C compiler, targeted to the VM itself, allows C programs to be executed on it.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_21.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Wright08, author = {Stephen Wright}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Using EventB to Create a Virtual Machine Instruction Set Architecture}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {265--279}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_21}, doi = {10.1007/978-3-540-87603-8\\_21}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Wright08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"c6f281071eb7513b5a3e784f72894093","permalink":"/publication/wright08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/wright08/","section":"publication","summary":"Abstract A Virtual Machine (VM) is a program running on a conventional microprocessor that emulates the binary instruction set, registers, and memory space of an idealized computing machine, a well-known example being the Java Virtual Machine (JVM).","tags":["ABZ'08"],"title":"Using EventB to Create a Virtual Machine Instruction Set Architecture","type":"publication"},{"authors":["Margus Veanes","Ando Saabas"],"categories":[],"content":"Abstract We look at a fragment of ASMs used to model protocol-like aspects of software systems. Such models are used industrially as part of documentation and oracles in model-based testing of application-level network protocols. Correctness assumptions about the model are often expressed through state invariants. An important problem is to validate the model prior to its use as an oracle. We discuss a technique of using Satisfiability Modulo Theories or SMT to perform bounded reachability analysis of such models. We use the Z3 solver for our implementation and we use AsmL as the modeling language.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_42.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{VeanesS08, author = {Margus Veanes and Ando Saabas}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Using Satisfiability Modulo Theories to Analyze Abstract State Machines (Abstract)}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {355}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_42}, doi = {10.1007/978-3-540-87603-8\\_42}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/VeanesS08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"0c10c495143e81a2802dcdfbfa8c39bb","permalink":"/publication/veaness08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/veaness08/","section":"publication","summary":"Abstract We look at a fragment of ASMs used to model protocol-like aspects of software systems. Such models are used industrially as part of documentation and oracles in model-based testing of application-level network protocols.","tags":["ABZ'08"],"title":"Using Satisfiability Modulo Theories to Analyze Abstract State Machines (Abstract)","type":"publication"},{"authors":["Idir Aït-Sadoune","Yamine Aït Ameur"],"categories":[],"content":"Abstract The Service-Oriented Architecture based on the Web service technology emerged as a consequence of the evolution of distributed computing. One of the key ideas of this technology is the ability to create service compositions by combining and interacting with pre-exisiting services. A service is implemented, described[1], and published by a service provider in a UDDI[2] registry. The service composition is referred to an executable process that interacts with other services accomplishing its functional goal. Orchestration and Choreography[3] are the processes that allow to schedule the defined services compositions and messages exchanges. There is a wide range of industrial standardization efforts towards providing specification languages for the Web service composition. Among them BPEL (Business Process Execution Language[4]) is the most known and used orchestration language. Our work addresses the composition expressed by the orchestration and its support language BPEL. BPEL allows the designer to represent service compositions by various behavioral properties like services interactions (message exchanges), control flow constraints (sequence, iteration, conditional) or data flow constraints (exchange, modification, evaluation of data expressions).\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_28.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{Ait-SadouneA08, author = {Idir A{\\\u0026quot;{\\i}}t{-}Sadoune and Yamine A{\\\u0026quot;{\\i}}t Ameur}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {Verification and Validation of Web Service Composition Using Event {B} Method}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {339--340}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_28}, doi = {10.1007/978-3-540-87603-8\\_28}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/Ait-SadouneA08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"b45dcd59bb6b6a294e7de42de55a02d1","permalink":"/publication/ait-sadounea08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/ait-sadounea08/","section":"publication","summary":"Abstract The Service-Oriented Architecture based on the Web service technology emerged as a consequence of the evolution of distributed computing. One of the key ideas of this technology is the ability to create service compositions by combining and interacting with pre-exisiting services.","tags":["ABZ'08"],"title":"Verification and Validation of Web Service Composition Using Event B Method","type":"publication"},{"authors":["Qing Wang 0002","Klaus-Dieter Schewe","Bernhard Thalheim"],"categories":[],"content":"Abstract For many years the eXtensible Markup Language (XML) has attracted much research attention from database communities, particularly in the area of query and transformation languages such as XQuery and XSLT. XML documents are usually represented as trees. In order to accommodate the diversity of user requirements, it is desirable to conduct transformations on XML trees at flexible abstraction levels. However, most of current approaches have a fixed abstraction level at which updates must be identified for individual nodes and edges. In this paper we study XML database transformations with structured updates, for example, manipulations on portions of a tree, including deleting, modifying or inserting subtrees, copying contexts, etc, by using Abstract State Machines (ASMs) as it has turned out in [3] to be a universal computation model capturing database transformations.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_30.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{WangST08, author = {Qing Wang and Klaus{-}Dieter Schewe and Bernhard Thalheim}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {{XML} Database Transformations with Tree Updates}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {342}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_30}, doi = {10.1007/978-3-540-87603-8\\_30}, timestamp = {Sun, 02 Oct 2022 15:55:03 +0200}, biburl = {https://dblp.org/rec/conf/asm/WangST08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"3db6da756ce47ac48b70e9013b839664","permalink":"/publication/wangst08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/wangst08/","section":"publication","summary":"Abstract For many years the eXtensible Markup Language (XML) has attracted much research attention from database communities, particularly in the area of query and transformation languages such as XQuery and XSLT.","tags":["ABZ'08"],"title":"XML Database Transformations with Tree Updates","type":"publication"},{"authors":["John Derrick","Siobhán North","Anthony J. H. Simons"],"categories":[],"content":"Abstract In this paper we discuss our progress towards building a model-checker for Z. The approach we take in our Z2SAL project involves implementing a translation from Z into the SAL input language, upon which the SAL toolset can be applied. The toolset includes a number of model-checkers together with a simulator. In this paper we discuss our progress towards implementing as complete as a translation as possible, the limitations we have reached and the optimizations we have made. We illustrate with a small example.\nDocument If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this link.\n   var url = \"https:\\/\\/link.springer.com\\/content\\/pdf\\/10.1007%2F978-3-540-87603-8_22.pdf\"; PDFObject.embed( url, \"#pdfobject-viewer\" );   .pdfobject-container { height: 30rem; }  Reference % BibTex @inproceedings{DerrickNS08, author = {John Derrick and Siobh{\\'{a}}n North and Anthony J. H. Simons}, editor = {Egon B{\\\u0026quot;{o}}rger and Michael J. Butler and Jonathan P. Bowen and Paul Boca}, title = {{Z2SAL} - Building a Model Checker for {Z}}, booktitle = {Abstract State Machines, {B} and Z, First International Conference, {ABZ} 2008, London, UK, September 16-18, 2008. Proceedings}, series = {Lecture Notes in Computer Science}, volume = {5238}, pages = {280--293}, publisher = {Springer}, year = {2008}, url = {https://doi.org/10.1007/978-3-540-87603-8\\_22}, doi = {10.1007/978-3-540-87603-8\\_22}, timestamp = {Tue, 14 May 2019 10:00:50 +0200}, biburl = {https://dblp.org/rec/conf/asm/DerrickNS08.bib}, bibsource = {dblp computer science bibliography, https://dblp.org} }  authors-- ","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d026cddd17503d906dbea291688264a4","permalink":"/publication/derrickns08/","publishdate":"2008-01-01T00:00:00Z","relpermalink":"/publication/derrickns08/","section":"publication","summary":"Abstract In this paper we discuss our progress towards building a model-checker for Z. The approach we take in our Z2SAL project involves implementing a translation from Z into the SAL input language, upon which the SAL toolset can be applied.","tags":["ABZ'08"],"title":"Z2SAL - Building a Model Checker for Z","type":"publication"},{"authors":null,"categories":[],"content":"This document presents the case study for ABZ 2025 conference. The case study is about a safety controller for autonomous driving on a highway. The goal is to keep a safe distance to the preceding car. The challenge is to model the system and its environment, and to derive assumptions and model a controller for which the safety can be guaranteed.\nFor a more detailed description of the case study, and the document reporting the requirements see here.\n","date":2025,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"599b29a39f1b87f5e90b6f6dd7fb8a8f","permalink":"/case-study/abz25/","publishdate":"1970-01-01T00:33:45Z","relpermalink":"/case-study/abz25/","section":"project","summary":"This document presents the case study for ABZ 2025 conference. The case study is about a safety controller for autonomous driving on a highway. The goal is to keep a safe distance to the preceding car.","tags":["ABZ'25"],"title":"Safety Controller for Autonomous Driving (ABZ 2025)","type":"project"},{"authors":null,"categories":[],"content":"This document presents the case study for ABZ 2024 conference. The case study introduces Mechanical Lung Ventilator (MLV). The MLV is intended to provide ventilation support for patients that require mechanical ventilation in two operative modes: Pressure Controlled Ventilation (PCV) and Pressure Support Ventilation (PSV). The former is used when patients are not able to start breathing on their own, while the latter support patients by partially taking over the work of breathing.\nFor a more detailed description of the case study, and the document reporting the requirements see here.\n","date":2024,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"f7004b668f6bf479764462798a3e7bfa","permalink":"/case-study/abz24/","publishdate":"1970-01-01T00:33:44Z","relpermalink":"/case-study/abz24/","section":"project","summary":"This document presents the case study for ABZ 2024 conference. The case study introduces Mechanical Lung Ventilator (MLV). The MLV is intended to provide ventilation support for patients that require mechanical ventilation in two operative modes: Pressure Controlled Ventilation (PCV) and Pressure Support Ventilation (PSV).","tags":["ABZ'24"],"title":"Mechanical Lung Ventilator (ABZ 2024)","type":"project"},{"authors":null,"categories":[],"content":"This document presents the case study for ABZ 2023 conference. The case study introduces a safety critical interactive system called AMAN (Arrival MANager) which is a partly-autonomous scheduler of landing sequences of aircraft in airports. This interactive systems interleaves Air Traffic Controllers activities with automation in AMAN. While some AMAN systems are currently deployed in airports, we consider here only a subset of functions which represent a challenge in modelling and verification.\n","date":2023,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7a0a30ab56cca52396224cf5463f6ae8","permalink":"/case-study/abz23/","publishdate":"1970-01-01T00:33:43Z","relpermalink":"/case-study/abz23/","section":"project","summary":"This document presents the case study for ABZ 2023 conference. The case study introduces a safety critical interactive system called AMAN (Arrival MANager) which is a partly-autonomous scheduler of landing sequences of aircraft in airports.","tags":["ABZ'23"],"title":"AMAN Case Study (ABZ 2023)","type":"project"},{"authors":null,"categories":[],"content":"This document describes two systems from the automotive domain: an adaptive exterior light system (ELS) and a speed control system (SCS). This specification is based on the SPES XT running example. Besides their general architectures, the requirements of the software based controllers are described. Both systems are only loosely coupled, which makes it possible to handle them independently\n","date":2020,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"761198fbdcef4e5a5d7b583e536f3a41","permalink":"/case-study/abz20/","publishdate":"1970-01-01T00:33:40Z","relpermalink":"/case-study/abz20/","section":"project","summary":"This document describes two systems from the automotive domain: an adaptive exterior light system (ELS) and a speed control system (SCS). This specification is based on the SPES XT running example.","tags":["ABZ'20","ABZ'21"],"title":"Adaptive Exterior Light and Speed Control System (ABZ 2020)","type":"project"},{"authors":null,"categories":[],"content":"This document presents a description of the European Rail Traffic Management System (ERTMS) case study. ERTMS is a system of standards for management and interoperation of signalling for railways by the European Union (EU). The case study focuses on the ERTMS Level 3 Hybrid principle, which accommodates different types of trains including ERTMS trains equiped with the Train Integrity Monitoring System (TIMS), ERTMS trains without TIMS, and non-ERTMS trains.\n","date":2018,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"7fd10c17b3582cbf93264970b07db04a","permalink":"/case-study/abz18/","publishdate":"1970-01-01T00:33:38Z","relpermalink":"/case-study/abz18/","section":"project","summary":"This document presents a description of the European Rail Traffic Management System (ERTMS) case study. ERTMS is a system of standards for management and interoperation of signalling for railways by the European Union (EU).","tags":["ABZ'18"],"title":"The Hybrid ERTMS/ETCS Level 3 (ABZ 2018)","type":"project"},{"authors":null,"categories":[],"content":"This documents presents a description of a case study concerning the control of a hemodialysis (HD) machine. It provides an overview of the requirements and the design of an HD machine including a sketch of the machine’s functionality, related safety conditions, and a top-level system architectural description.\n","date":2016,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"d1182f9647408f97ff426d7f2a1c4961","permalink":"/case-study/abz16/","publishdate":"1970-01-01T00:33:36Z","relpermalink":"/case-study/abz16/","section":"project","summary":"This documents presents a description of a case study concerning the control of a hemodialysis (HD) machine. It provides an overview of the requirements and the design of an HD machine including a sketch of the machine’s functionality, related safety conditions, and a top-level system architectural description.","tags":["ABZ'16"],"title":"The Hemodialysis Machine (ABZ 2016)","type":"project"},{"authors":null,"categories":[],"content":"This document presents a landing gear system. It describes the system and provides some of its requirements. We propose this case study as a benchmark for techniques and tools dedicated to the verification of behavioral properties of systems.\n","date":2014,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1760488263,"objectID":"3a7eb6da35119c00c554d2953847d7c7","permalink":"/case-study/abz14/","publishdate":"1970-01-01T00:33:34Z","relpermalink":"/case-study/abz14/","section":"project","summary":"This document presents a landing gear system. It describes the system and provides some of its requirements. We propose this case study as a benchmark for techniques and tools dedicated to the verification of behavioral properties of systems.","tags":["ABZ'14"],"title":"The Landing Gear System (ABZ 2014)","type":"project"}]