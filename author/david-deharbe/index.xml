<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>David Déharbe | ABZ</title><link>/author/david-deharbe/</link><atom:link href="/author/david-deharbe/index.xml" rel="self" type="application/rss+xml"/><description>David Déharbe</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Copyright © 2025 ABZ Conference</copyright><lastBuildDate>Wed, 01 Jan 2020 00:00:00 +0000</lastBuildDate><image><url>/img/https:/github.com/abz-conf/abz-conf.logo/raw/master/obj/rect/256.png</url><title>David Déharbe</title><link>/author/david-deharbe/</link></image><item><title>Existence Proof Obligations for Constraints, Properties and Invariants in Atelier B</title><link>/publication/barradasbd20/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>/publication/barradasbd20/</guid><description>&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>Proof obligations of the B method and of Event B use predicates in the Constraints, Sets, Properties and Invariant clauses as hypotheses in proof obligations. A contradiction in these predicates results in trivially valid proof obligations and essentially voids the development. A textbook on the B method [3] presents three “existence proof obligations” to show the satisfiability of the Constraints, Properties and Invariant clauses as soon as they are stated in a component. Together with new existence proof obligations for refinement, this prevents the introduction of such contradictions in the refinement chain. This paper presents a detailed formalization of these existence proof obligations, specifying their implementation in Atelier B.&lt;/p>
&lt;h2 id="document">Document&lt;/h2>
&lt;p>If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this &lt;a href="https://link.springer.com/content/pdf/10.1007%2F978-3-030-48077-6_20.pdf">link&lt;/a>.&lt;/p>
&lt;div id="pdfobject-viewer">&lt;/div>
&lt;script src="/js/pdfobject.min.js">&lt;/script>
&lt;script>
var url = "https:\/\/link.springer.com\/content\/pdf\/10.1007%2F978-3-030-48077-6_20.pdf";
PDFObject.embed( url, "#pdfobject-viewer" );
&lt;/script>
&lt;style>
.pdfobject-container
{
height: 30rem;
}
&lt;/style>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;pre>&lt;code>% BibTex
@inproceedings{BarradasBD20,
author = {H{\'{e}}ctor Ru{\'{\i}}z Barradas and
Lilian Burdy and
David D{\'{e}}harbe},
editor = {Alexander Raschke and
Dominique M{\'{e}}ry and
Frank Houdek},
title = {Existence Proof Obligations for Constraints, Properties and Invariants
in Atelier {B}},
booktitle = {Rigorous State-Based Methods - 7th International Conference, {ABZ}
2020, Ulm, Germany, May 27-29, 2020, Proceedings},
series = {Lecture Notes in Computer Science},
volume = {12071},
pages = {255--259},
publisher = {Springer},
year = {2020},
url = {https://doi.org/10.1007/978-3-030-48077-6\_20},
doi = {10.1007/978-3-030-48077-6\_20},
timestamp = {Mon, 25 May 2020 12:33:39 +0200},
biburl = {https://dblp.org/rec/conf/asm/BarradasBD20.bib},
bibsource = {dblp computer science bibliography, https://dblp.org}
}
&lt;/code>&lt;/pre>
&lt;!-- # add information for case study papers (if available)
## Sources
- **Used formal method:**
[ASM](/method/asm)
- **Resources and tools:**
Asmeta
For more information, please contact the &lt;a href ="mailto:silvia.bonfanti@unibg.it;arcaini@nii.ac.jp;angelo.gargantini@unibg.it;scandurra@unibg.it;elvinia.riccobene@unimi.it">authors&lt;/a>--></description></item><item><title>Teaching an Old Dog New Tricks - The Drudges of the Interactive Prover in Atelier B</title><link>/publication/burdyd18/</link><pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate><guid>/publication/burdyd18/</guid><description>&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>This paper presents an evolution of an industrial proof support framework that integrates state-of-the-art technologies without compromising the existing tool qualification status. Third-party provers produce proof rules that may be applied by the legacy system and verified using a certified approach. This approach has been implemented in Atelier B, a formal-methods based IDE for the development of software components and for the modeling of systems.&lt;/p>
&lt;h2 id="document">Document&lt;/h2>
&lt;p>If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this &lt;a href="https://link.springer.com/content/pdf/10.1007%2F978-3-319-91271-4_33.pdf">link&lt;/a>.&lt;/p>
&lt;div id="pdfobject-viewer">&lt;/div>
&lt;script src="/js/pdfobject.min.js">&lt;/script>
&lt;script>
var url = "https:\/\/link.springer.com\/content\/pdf\/10.1007%2F978-3-319-91271-4_33.pdf";
PDFObject.embed( url, "#pdfobject-viewer" );
&lt;/script>
&lt;style>
.pdfobject-container
{
height: 30rem;
}
&lt;/style>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;pre>&lt;code>% BibTex
@inproceedings{BurdyD18,
author = {Lilian Burdy and
David D{\'{e}}harbe},
editor = {Michael J. Butler and
Alexander Raschke and
Thai Son Hoang and
Klaus Reichl},
title = {Teaching an Old Dog New Tricks - The Drudges of the Interactive Prover
in Atelier {B}},
booktitle = {Abstract State Machines, Alloy, B, TLA, VDM, and {Z} - 6th International
Conference, {ABZ} 2018, Southampton, UK, June 5-8, 2018, Proceedings},
series = {Lecture Notes in Computer Science},
volume = {10817},
pages = {415--419},
publisher = {Springer},
year = {2018},
url = {https://doi.org/10.1007/978-3-319-91271-4\_33},
doi = {10.1007/978-3-319-91271-4\_33},
timestamp = {Tue, 14 May 2019 10:00:50 +0200},
biburl = {https://dblp.org/rec/conf/asm/BurdyD18.bib},
bibsource = {dblp computer science bibliography, https://dblp.org}
}
&lt;/code>&lt;/pre>
&lt;!-- # add information for case study papers (if available)
## Sources
- **Used formal method:**
[ASM](/method/asm)
- **Resources and tools:**
Asmeta
For more information, please contact the &lt;a href ="mailto:silvia.bonfanti@unibg.it;arcaini@nii.ac.jp;angelo.gargantini@unibg.it;scandurra@unibg.it;elvinia.riccobene@unimi.it">authors&lt;/a>--></description></item><item><title>Formal Verification of PLC Programs Using the B Method</title><link>/publication/barbosad12/</link><pubDate>Sun, 01 Jan 2012 00:00:00 +0000</pubDate><guid>/publication/barbosad12/</guid><description>&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>In this paper we propose an approach to verify PLC programs, a common platform to control systems in the industry. Programs written in the languages of the IEC 61131-3 standard are automatically translated to B machines and are then amenable to formal analysis of safety constraints and general structural properties of the application. This approach thus integrates formal methods into existing industrial processes.&lt;/p>
&lt;h2 id="document">Document&lt;/h2>
&lt;p>If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this &lt;a href="https://link.springer.com/content/pdf/10.1007%2F978-3-642-30885-7_30.pdf">link&lt;/a>.&lt;/p>
&lt;div id="pdfobject-viewer">&lt;/div>
&lt;script src="/js/pdfobject.min.js">&lt;/script>
&lt;script>
var url = "https:\/\/link.springer.com\/content\/pdf\/10.1007%2F978-3-642-30885-7_30.pdf";
PDFObject.embed( url, "#pdfobject-viewer" );
&lt;/script>
&lt;style>
.pdfobject-container
{
height: 30rem;
}
&lt;/style>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;pre>&lt;code>% BibTex
@inproceedings{BarbosaD12,
author = {Haniel Barbosa and
David D{\'{e}}harbe},
editor = {John Derrick and
John S. Fitzgerald and
Stefania Gnesi and
Sarfraz Khurshid and
Michael Leuschel and
Steve Reeves and
Elvinia Riccobene},
title = {Formal Verification of {PLC} Programs Using the {B} Method},
booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International
Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings},
series = {Lecture Notes in Computer Science},
volume = {7316},
pages = {353--356},
publisher = {Springer},
year = {2012},
url = {https://doi.org/10.1007/978-3-642-30885-7\_30},
doi = {10.1007/978-3-642-30885-7\_30},
timestamp = {Sat, 19 Oct 2019 20:28:13 +0200},
biburl = {https://dblp.org/rec/conf/asm/BarbosaD12.bib},
bibsource = {dblp computer science bibliography, https://dblp.org}
}
&lt;/code>&lt;/pre>
&lt;!-- # add information for case study papers (if available)
## Sources
- **Used formal method:**
[ASM](/method/asm)
- **Resources and tools:**
Asmeta
For more information, please contact the &lt;a href ="mailto:silvia.bonfanti@unibg.it;arcaini@nii.ac.jp;angelo.gargantini@unibg.it;scandurra@unibg.it;elvinia.riccobene@unimi.it">authors&lt;/a>--></description></item><item><title>SMT Solvers for Rodin</title><link>/publication/deharbefgv12/</link><pubDate>Sun, 01 Jan 2012 00:00:00 +0000</pubDate><guid>/publication/deharbefgv12/</guid><description>&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>Formal development in Event-B generally requires the validation of a large number of proof obligations. Some automatic tools exist to automatically discharge a significant part of them, thus augmenting the efficiency of the formal development. We here investigate the use of SMT (Satisfiability Modulo Theories) solvers in addition to the traditional tools, and detail the techniques used for the cooperation between the Rodin platform and SMT solvers. Our contribution is the definition of two approaches to use SMT solvers, their implementation in a Rodin plug-in, and an experimental evaluation on a large sample of industrial and academic projects. Adding SMT solvers to Atelier B provers reduces to one fourth the number of sequents that need to be proved interactively.&lt;/p>
&lt;h2 id="document">Document&lt;/h2>
&lt;p>If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this &lt;a href="https://link.springer.com/content/pdf/10.1007%2F978-3-642-30885-7_14.pdf">link&lt;/a>.&lt;/p>
&lt;div id="pdfobject-viewer">&lt;/div>
&lt;script src="/js/pdfobject.min.js">&lt;/script>
&lt;script>
var url = "https:\/\/link.springer.com\/content\/pdf\/10.1007%2F978-3-642-30885-7_14.pdf";
PDFObject.embed( url, "#pdfobject-viewer" );
&lt;/script>
&lt;style>
.pdfobject-container
{
height: 30rem;
}
&lt;/style>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;pre>&lt;code>% BibTex
@inproceedings{DeharbeFGV12,
author = {David D{\'{e}}harbe and
Pascal Fontaine and
Yoann Guyot and
Laurent Voisin},
editor = {John Derrick and
John S. Fitzgerald and
Stefania Gnesi and
Sarfraz Khurshid and
Michael Leuschel and
Steve Reeves and
Elvinia Riccobene},
title = {{SMT} Solvers for Rodin},
booktitle = {Abstract State Machines, Alloy, B, VDM, and {Z} - Third International
Conference, {ABZ} 2012, Pisa, Italy, June 18-21, 2012. Proceedings},
series = {Lecture Notes in Computer Science},
volume = {7316},
pages = {194--207},
publisher = {Springer},
year = {2012},
url = {https://doi.org/10.1007/978-3-642-30885-7\_14},
doi = {10.1007/978-3-642-30885-7\_14},
timestamp = {Sun, 02 Jun 2019 21:23:59 +0200},
biburl = {https://dblp.org/rec/conf/asm/DeharbeFGV12.bib},
bibsource = {dblp computer science bibliography, https://dblp.org}
}
&lt;/code>&lt;/pre>
&lt;!-- # add information for case study papers (if available)
## Sources
- **Used formal method:**
[ASM](/method/asm)
- **Resources and tools:**
Asmeta
For more information, please contact the &lt;a href ="mailto:silvia.bonfanti@unibg.it;arcaini@nii.ac.jp;angelo.gargantini@unibg.it;scandurra@unibg.it;elvinia.riccobene@unimi.it">authors&lt;/a>--></description></item><item><title>Applying the B Method for the Rigorous Development of Smart Card Applications</title><link>/publication/gomesdmm10/</link><pubDate>Fri, 01 Jan 2010 00:00:00 +0000</pubDate><guid>/publication/gomesdmm10/</guid><description>&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>Smart Card applications usually require reliability and security to avoid incorrect operation or access violation in transactions and corruption or undue access to stored information. A way of reaching these requirements is improving the quality of the development process of these applications. BSmart is a method and a corresponding tool designed to support the formal development of the complete Java Card smart card application, following the B formal method.&lt;/p>
&lt;h2 id="document">Document&lt;/h2>
&lt;p>If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this &lt;a href="https://link.springer.com/content/pdf/10.1007%2F978-3-642-11811-1_16.pdf">link&lt;/a>.&lt;/p>
&lt;div id="pdfobject-viewer">&lt;/div>
&lt;script src="/js/pdfobject.min.js">&lt;/script>
&lt;script>
var url = "https:\/\/link.springer.com\/content\/pdf\/10.1007%2F978-3-642-11811-1_16.pdf";
PDFObject.embed( url, "#pdfobject-viewer" );
&lt;/script>
&lt;style>
.pdfobject-container
{
height: 30rem;
}
&lt;/style>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;pre>&lt;code>% BibTex
@inproceedings{GomesDMM10,
author = {Bruno Emerson Gurgel Gomes and
David D{\'{e}}harbe and
Anamaria Martins Moreira and
Katia Moraes},
editor = {Marc Frappier and
Uwe Gl{\&amp;quot;{a}}sser and
Sarfraz Khurshid and
R{\'{e}}gine Laleau and
Steve Reeves},
title = {Applying the {B} Method for the Rigorous Development of Smart Card
Applications},
booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference,
{ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings},
series = {Lecture Notes in Computer Science},
volume = {5977},
pages = {203--216},
publisher = {Springer},
year = {2010},
url = {https://doi.org/10.1007/978-3-642-11811-1\_16},
doi = {10.1007/978-3-642-11811-1\_16},
timestamp = {Tue, 14 May 2019 10:00:50 +0200},
biburl = {https://dblp.org/rec/conf/asm/GomesDMM10.bib},
bibsource = {dblp computer science bibliography, https://dblp.org}
}
&lt;/code>&lt;/pre>
&lt;!-- # add information for case study papers (if available)
## Sources
- **Used formal method:**
[ASM](/method/asm)
- **Resources and tools:**
Asmeta
For more information, please contact the &lt;a href ="mailto:silvia.bonfanti@unibg.it;arcaini@nii.ac.jp;angelo.gargantini@unibg.it;scandurra@unibg.it;elvinia.riccobene@unimi.it">authors&lt;/a>--></description></item><item><title>Automatic Verification for a Class of Proof Obligations with SMT-Solvers</title><link>/publication/deharbe10/</link><pubDate>Fri, 01 Jan 2010 00:00:00 +0000</pubDate><guid>/publication/deharbe10/</guid><description>&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>Software development in B and Event-B generates proof obligations that have to be discharged using theorem provers. The cost of such developments therefore depends directly on the degree of automation and efficiency of theorem proving techniques for the logics in which these lemmas are expressed. This paper presents and formalizes an approach to transform a class of proof obligations generated in the Rodin platform in a language that can be addressed by state-of-the-art SMT solvers. The work presented in the paper handles proof obligations with Booleans, integer arithmetics and basic sets.&lt;/p>
&lt;h2 id="document">Document&lt;/h2>
&lt;p>If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this &lt;a href="https://link.springer.com/content/pdf/10.1007%2F978-3-642-11811-1_17.pdf">link&lt;/a>.&lt;/p>
&lt;div id="pdfobject-viewer">&lt;/div>
&lt;script src="/js/pdfobject.min.js">&lt;/script>
&lt;script>
var url = "https:\/\/link.springer.com\/content\/pdf\/10.1007%2F978-3-642-11811-1_17.pdf";
PDFObject.embed( url, "#pdfobject-viewer" );
&lt;/script>
&lt;style>
.pdfobject-container
{
height: 30rem;
}
&lt;/style>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;pre>&lt;code>% BibTex
@inproceedings{Deharbe10,
author = {David D{\'{e}}harbe},
editor = {Marc Frappier and
Uwe Gl{\&amp;quot;{a}}sser and
Sarfraz Khurshid and
R{\'{e}}gine Laleau and
Steve Reeves},
title = {Automatic Verification for a Class of Proof Obligations with SMT-Solvers},
booktitle = {Abstract State Machines, Alloy, {B} and Z, Second International Conference,
{ABZ} 2010, Orford, QC, Canada, February 22-25, 2010. Proceedings},
series = {Lecture Notes in Computer Science},
volume = {5977},
pages = {217--230},
publisher = {Springer},
year = {2010},
url = {https://doi.org/10.1007/978-3-642-11811-1\_17},
doi = {10.1007/978-3-642-11811-1\_17},
timestamp = {Tue, 14 May 2019 10:00:50 +0200},
biburl = {https://dblp.org/rec/conf/asm/Deharbe10.bib},
bibsource = {dblp computer science bibliography, https://dblp.org}
}
&lt;/code>&lt;/pre>
&lt;!-- # add information for case study papers (if available)
## Sources
- **Used formal method:**
[ASM](/method/asm)
- **Resources and tools:**
Asmeta
For more information, please contact the &lt;a href ="mailto:silvia.bonfanti@unibg.it;arcaini@nii.ac.jp;angelo.gargantini@unibg.it;scandurra@unibg.it;elvinia.riccobene@unimi.it">authors&lt;/a>--></description></item><item><title>BSmart: A Tool for the Development of Java Card Applications with the B Method</title><link>/publication/deharbegm08/</link><pubDate>Tue, 01 Jan 2008 00:00:00 +0000</pubDate><guid>/publication/deharbegm08/</guid><description>&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>A smart card is a portable computer device able to store data and execute commands. Java Card [1] is a specialization of Java, providing vendor inter-operability for smart cards, and has now reached a de facto standard status in this industry. The strategic importance of this market and the requirement for a high reliability motivate the use of rigorous software development processes for smart card aware applications based on the Java Card technology. The B method [2] is a good candidate for such process, since it is a formal method with a successful record to address industrial-level software development. In [3,4], we proposed two versions of a Java Card software development method (called BSmart) based on the B method. The main feature of these methods is to abstract the particularities of smart card systems to the applications developers as much as possible. This abstract presents the current version of a tool, also called BSmart, to support the method. The tool provides the automatable steps required by the method and some guidelines and library machines that are useful during the development process. It includes B development tools (type checker, PO generator) and specific BSmart tools (refinement generator, Java Card translator, etc.). In this approach, the card services specifier only needs to apply some refinement steps to his abstract (implementation platform independent) B specification. The generation of these refinements adapts the specification to Java Card standards and introduces platform specific aspects gradually. Finally, from the concrete B refinements the Java Card code implementing the services provided by the card will be automatically generated by the tool. The tool also provides the generation of a Java API for the host-side application from the original abstract specification, encapsulating all the communication protocol details. Thus, the client application code can then be developed in a completely platform independent way. The definition of the method is in a mature stage, and our attention is now focused on the implementation of more robust versions of the BSmart tools and packaging them in a user-friendly environment. The integration of verification and animation tools is also planned for a next release of the tool.&lt;/p>
&lt;h2 id="document">Document&lt;/h2>
&lt;p>If you cannot see the document below, the PDF document is most likely not freely accessible. In this case, please try to access the document via this &lt;a href="https://link.springer.com/content/pdf/10.1007%2F978-3-540-87603-8_39.pdf">link&lt;/a>.&lt;/p>
&lt;div id="pdfobject-viewer">&lt;/div>
&lt;script src="/js/pdfobject.min.js">&lt;/script>
&lt;script>
var url = "https:\/\/link.springer.com\/content\/pdf\/10.1007%2F978-3-540-87603-8_39.pdf";
PDFObject.embed( url, "#pdfobject-viewer" );
&lt;/script>
&lt;style>
.pdfobject-container
{
height: 30rem;
}
&lt;/style>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;pre>&lt;code>% BibTex
@inproceedings{DeharbeGM08,
author = {David D{\'{e}}harbe and
Bruno Emerson Gurgel Gomes and
Anamaria Martins Moreira},
editor = {Egon B{\&amp;quot;{o}}rger and
Michael J. Butler and
Jonathan P. Bowen and
Paul Boca},
title = {BSmart: {A} Tool for the Development of Java Card Applications with
the {B} Method},
booktitle = {Abstract State Machines, {B} and Z, First International Conference,
{ABZ} 2008, London, UK, September 16-18, 2008. Proceedings},
series = {Lecture Notes in Computer Science},
volume = {5238},
pages = {351--352},
publisher = {Springer},
year = {2008},
url = {https://doi.org/10.1007/978-3-540-87603-8\_39},
doi = {10.1007/978-3-540-87603-8\_39},
timestamp = {Tue, 14 May 2019 10:00:50 +0200},
biburl = {https://dblp.org/rec/conf/asm/DeharbeGM08.bib},
bibsource = {dblp computer science bibliography, https://dblp.org}
}
&lt;/code>&lt;/pre>
&lt;!-- # add information for case study papers (if available)
## Sources
- **Used formal method:**
[ASM](/method/asm)
- **Resources and tools:**
Asmeta
For more information, please contact the &lt;a href ="mailto:silvia.bonfanti@unibg.it;arcaini@nii.ac.jp;angelo.gargantini@unibg.it;scandurra@unibg.it;elvinia.riccobene@unimi.it">authors&lt;/a>--></description></item></channel></rss>