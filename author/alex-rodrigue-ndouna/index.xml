<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Alex Rodrigue Ndouna | ABZ</title><link>/author/alex-rodrigue-ndouna/</link><atom:link href="/author/alex-rodrigue-ndouna/index.xml" rel="self" type="application/rss+xml"/><description>Alex Rodrigue Ndouna</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Copyright Â© 2025 ABZ Conference</copyright><lastBuildDate>Wed, 03 Jul 2024 00:00:00 +0000</lastBuildDate><image><url>/img/https:/github.com/abz-conf/abz-conf.logo/raw/master/obj/rect/256.png</url><title>Alex Rodrigue Ndouna</title><link>/author/alex-rodrigue-ndouna/</link></image><item><title>Modelling the mechanical lung ventilation system using TASTD</title><link>/publication/frappier2024abz/</link><pubDate>Wed, 03 Jul 2024 00:00:00 +0000</pubDate><guid>/publication/frappier2024abz/</guid><description>&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>For the ABZ2024 conference, the proposed case study consists of modelling the adaptive outdoor mechanical lung ventilation system. The mechanical lung ventilator is intended to provide ventilation support for patients that are in intensive therapy and that require mechanical ventilation. The system under study is made up of two main software components: the graphical user interface (GUI) and the controller, this paper introduces a model for the controller part of the software system using Timed Algebraic State-Transition Diagrams (TASTD). TASTD is an extension of Algebraic State-Transition Diagrams (ASTD) providing timing operators to express timing constraints. The specification makes extensive use of the TASTD modularity capabilities, thanks to its algebraic approach, to model the behaviour of different sensors and actuators separately. We validate our specification using the cASTD compiler, which translates the TASTD specification into a C++ program. This generated program can be executed in simulation mode to manually update the system clock to check timing constraints. The model is executed on the test sequences provided with the case study. The advantages of having modularisation, orthogonality, abstraction, hierarchy, real-time, and graphical representation in one notation are highlighted with the proposed model.&lt;/p>
&lt;h2 id="document">Document&lt;/h2>
&lt;div id="pdfobject-viewer">&lt;/div>
&lt;script src="/js/pdfobject.min.js">&lt;/script>
&lt;script>
var url = "https:\/\/link.springer.com\/content\/pdf\/10.1007%2F978-3-031-63790-2_26.pdf";
PDFObject.embed( url, "#pdfobject-viewer" );
&lt;/script>
&lt;style>
.pdfobject-container
{
height: 30rem;
}
&lt;/style>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;pre>&lt;code>% BibTex
@InProceedings{10.1007/978-3-031-63790-2_26,
author=&amp;quot;Rodrigue Ndouna, Alex
and Frappier, Marc&amp;quot;,
editor=&amp;quot;Bonfanti, Silvia
and Gargantini, Angelo
and Leuschel, Michael
and Riccobene, Elvinia
and Scandurra, Patrizia&amp;quot;,
title=&amp;quot;Modelling a Mechanical Lung Ventilation System Using TASTD&amp;quot;,
booktitle=&amp;quot;Rigorous State-Based Methods&amp;quot;,
year=&amp;quot;2024&amp;quot;,
publisher=&amp;quot;Springer Nature Switzerland&amp;quot;,
address=&amp;quot;Cham&amp;quot;,
pages=&amp;quot;324--340&amp;quot;,
abstract=&amp;quot;For the ABZ2024 conference, the proposed case study consists of modelling an adaptive outdoor mechanical lung ventilation system. The mechanical lung ventilator is intended to provide ventilation support for patients that are in intensive therapy and that require mechanical ventilation. The system under study is made up of two main software components: the graphical user interface (GUI) and the controller, this paper introduces a model for the controller part of the software system using Timed Algebraic State-Transition Diagrams (TASTD). TASTD is an extension of Algebraic State-Transition Diagrams (ASTD) providing timing operators to express timing constraints. The specification makes extensive use of the TASTD modularity capabilities, thanks to its algebraic approach, to model the behaviour of different sensors and actuators separately. We validate our specification using the cASTD compiler, which translates the TASTD specification into a C++ program. This generated program can be executed in simulation mode to manually update the system clock to check timing constraints. The model is executed on the test sequences provided with the case study. The advantages of having modularisation, orthogonality, abstraction, hierarchy, real-time, and graphical representation in one notation are highlighted with the proposed model.&amp;quot;,
isbn=&amp;quot;978-3-031-63790-2&amp;quot;
}
&lt;/code>&lt;/pre>
&lt;h2 id="sources">Sources&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Model Archive:&lt;/strong>
&lt;a href="https://github.com/ndounalex/casestudyABZ2024-tastdmodel" target="_blank" rel="noopener">GitHub&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Presentation:&lt;/strong>
&lt;a href="/data/abz24/frappier2024abz.pdf">PDF&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Used formal method:&lt;/strong>
&lt;a href="/method/TASTD">TASTD&lt;/a>&lt;/p>
&lt;p>For more information, please contact the &lt;a href ="mailto:Alex.Rodrigue.Ndouna@USherbrooke.ca;Marc.Frappier@USherbrooke.ca">authors&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>